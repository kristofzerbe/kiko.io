{"type":"getPostsByCategoryId","data":[{"title":"A New Blog: Blogging and Synching en route","date":"2019-09-30T22:00:00.000Z","description":"<p>I work with several devices, some Windows, some Android, and sometimes I have time to write on my articles at home (Notebook, Tablet), in my spare time in the office (Desktop, Laptop) or on my way to somewhere (Smartphone). Right now I’m am in a barber shop, waiting for my haircut and write these lines. So, wherever I am, I need the Hexo project locally, but in sync on a digital device.</p>\n<p>The blog is synced via Dropbox, but hosted on GitHub Pages, so on every device I need the  publishing functions of Git too.</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Hexo","_id":"clmrqd9in003lkqox5afdfo51"},{"name":"VS Code","_id":"clmrqd9iq003rkqox0smfakzd"},{"name":"GitHub","_id":"clmrqd9ir003vkqoxe7ayhr7l"},{"name":"Blogging","_id":"clmrqd9is003xkqox7tk5gifo"}],"_path":"post/A-New-Blog-Blogging-and-Synching-en-route/","_link":"https://kiko.io/post/A-New-Blog-Blogging-and-Synching-en-route/","_id":"clmrqd9g20007kqox28vy9dyu"},{"title":"A New Blog: Customizing Hexo","date":"2019-09-25T10:00:00.000Z","description":"<p>Hexo is a great tool to get quick results (see <a href=\"/categories/Tools/A-New-Blog-VS-Code-Hexo-and-GitHub-Pages/\">Part One of this series</a>), when you decide to have a blog and its defaults are practical, but it’s power lies in the possiblities of customization via plugins. On the <a href=\"https://hexo.io/plugins/index.html\">official plugin page</a>, there are actually 302 plugins listed, but there are many more and no wish will be unsatisfied.</p>\n<p>I will show you which of these I found worth to work with…</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Hexo","_id":"clmrqd9in003lkqox5afdfo51"},{"name":"VS Code","_id":"clmrqd9iq003rkqox0smfakzd"},{"name":"Blogging","_id":"clmrqd9is003xkqox7tk5gifo"}],"_path":"post/A-New-Blog-Customizing-Hexo/","_link":"https://kiko.io/post/A-New-Blog-Customizing-Hexo/","_id":"clmrqd9g30009kqox4vc04778"},{"title":"A New Blog: VS Code, Hexo and GitHub Pages","date":"2019-09-23T22:00:00.000Z","description":"<p>A few days ago I puzzled over a technical problem regarding SQL Server, Active Directory and Visual Studio Database Projects. With tips, hints and snippets from several websites I got it running and the solution was absolutely memorable. For myself and for others. Nothing is harder than to know ‘you did this before…’, but not to remember how.</p>\n<p>Because of this strong leaning towards oblivion, I started over 20 years ago my very first website <strong>zerbit.de</strong>, manually crafted with Classic ASP and a SQL Server database as backend, with an editor, tagging, categories and so on. It was really exciting to build this blog from scratch and writing articles for it, but it was so time consuming to expand the features of the website and keep it running, that some day I quit it silently.</p>\n<p>So, to document the solution mentioned above, I could use tools like OneNote or others, like in the past years, but this would be just for me and not for all developers, who have a similar problem. I felt it would be unfair to participate from the knowledge of others to get my solution and dont give something back.</p>\n<p>I decided to write an article just in HTML and publish it on my personal GitHub Page that I didn’t used so far. Ok, just Text … ugly. Just a little CSS and a little more structure and maybe I should do something with Vue JS … STOP … It would be better to pick one of the cool new static website generators based on Node.js, to detain myself from inventing the wheel again and save my time to write articles. So I did a little research and found <a href=\"https://hexo.io/\">HEXO</a> … Bingo! I can work with my favorite editor <a href=\"https://code.visualstudio.com/\">Visual Studio Code</a>, its all HTML, JavaScript and CSS, I can write my articles in Markdown and Hexo has a lot of helpers for stuff Markdown doesn’t provide, it produces static files and works only with files, therefore no need for a database … and it is well documented.</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Hexo","_id":"clmrqd9in003lkqox5afdfo51"},{"name":"VS Code","_id":"clmrqd9iq003rkqox0smfakzd"},{"name":"GitHub","_id":"clmrqd9ir003vkqoxe7ayhr7l"},{"name":"Blogging","_id":"clmrqd9is003xkqox7tk5gifo"}],"_path":"post/A-New-Blog-VS-Code-Hexo-and-GitHub-Pages/","_link":"https://kiko.io/post/A-New-Blog-VS-Code-Hexo-and-GitHub-Pages/","_id":"clmrqd9g4000akqox0t9cevmv"},{"title":"Hexo and the Dark Mode ... revised","date":"2019-10-26T12:08:05.000Z","description":"<p>While writing my post <a href=\"/categories/Tools/Hexo-and-the-Dark-Mode\">Hexo and the Dark Mode</a> a few days ago, I thought it would be nice, if I could switch between the normal (light) and the dark theme, I’ve created for the support of the OS-related Dark Mode, even manually. The only thing I needed was a toggle element and a little bit of JavaScript.</p>\n<p>Of course, I couldn’t manipulate the <a href=\"https://drafts.csswg.org/mediaqueries-5/#descdef-media-prefers-color-scheme\">media query <code>prefers-color-scheme</code></a> itself, but introduce a different way by blog uses it. Instead of implementing the media query directly into my CSS (or Stylus) code, I used a root selector, which can be manipulated by JavaScript … something like this:</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: white;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: black;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-attr\">[data-theme=<span class=\"string\">&quot;dark&quot;</span>]</span> <span class=\"selector-tag\">body</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: black;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: white;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Hexo","_id":"clmrqd9in003lkqox5afdfo51"},{"name":"CSS","_id":"clmrqd9io003nkqox9wc9dhfv"},{"name":"Stylus","_id":"clmrqd9j1004jkqox0wd21r47"},{"name":"Dark Mode","_id":"clmrqd9j2004lkqox9cl8e6pq"}],"_path":"post/Hexo-and-the-Dark-Mode-revised/","_link":"https://kiko.io/post/Hexo-and-the-Dark-Mode-revised/","_id":"clmrqd9g5000ckqoxbbiydt2o"},{"title":"Hexo and the Dark Mode","date":"2019-10-23T13:28:04.000Z","description":"<p>Due to the fact, that nowadays everybody is talking about Dark Modes for Browsers and Operating Systems, in order to save battery or for easier reading (uhh, really?), I decided my blog should support that.</p>\n<p><img src=\"/post/Hexo-and-the-Dark-Mode/screen-recording-1.gif\" alt=\"Switching Dark Mode in Windows 10\"></p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Hexo","_id":"clmrqd9in003lkqox5afdfo51"},{"name":"CSS","_id":"clmrqd9io003nkqox9wc9dhfv"},{"name":"Stylus","_id":"clmrqd9j1004jkqox0wd21r47"},{"name":"Dark Mode","_id":"clmrqd9j2004lkqox9cl8e6pq"}],"_path":"post/Hexo-and-the-Dark-Mode/","_link":"https://kiko.io/post/Hexo-and-the-Dark-Mode/","_id":"clmrqd9g6000dkqox926w2uvx"},{"title":"404 Page in Hexo for GitHub Pages","date":"2020-09-23T12:28:50.000Z","description":"<p>As this blog is a static one, generated by <a href=\"https://hexo.io/\">Hexo</a> and hostet at <a href=\"https://pages.github.com/\">GitHub</a>, the page which was shown, when a user enters an Url which points to nowhere, was the default GitHub 404 page.</p>\n<p><img src=\"/post/404-Page-in-Hexo-for-GitHub-Pages/github-404-page.png\" alt=\"GitHub 404 Page\"></p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Hexo","_id":"clmrqd9in003lkqox5afdfo51"},{"name":"GitHub","_id":"clmrqd9ir003vkqoxe7ayhr7l"},{"name":"Error","_id":"clmrqd9j80055kqox7jq8flcn"}],"_path":"post/404-Page-in-Hexo-for-GitHub-Pages/","_link":"https://kiko.io/post/404-Page-in-Hexo-for-GitHub-Pages/","_id":"clmrqd9g7000fkqox5ubw284d"},{"title":"Add website to Trello card the better way","date":"2020-09-07T13:17:21.000Z","description":"<p>I was looking for a new way to store interesting website articles for reading later, as Pocket, my favourite tool until here, gets worse and worse. As I am a big <a href=\"https://trello.com/\">Trello</a> fan, I wanted to give it a chance to be Pockets successor on my smartphone, where I’m reading mostly.</p>\n<p>On installing the Trello Android app, you will find a new SHARE target <strong>Add new Trello card</strong>, which is comfortable to use:</p>\n<p>(Sry, for the German screenshots ;)</p>\n<p><img src=\"/post/Add-website-to-Trello-card-the-better-way/android-share-website.png\" alt=\"Android&#39;s default share with New Trello Card\"></p>\n<p>The result, website’s title and Url set, is nice at best:</p>\n<p><img src=\"/post/Add-website-to-Trello-card-the-better-way/card-via-share.png\" alt=\"Trello card via Android Share\"></p>\n<p>… but Trello has a <strong><a href=\"https://trello.com/add-card\">Bookmarklet</a></strong>, which does the job much better.</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Browser","_id":"clmrqd9ip003pkqox52xyeidc"},{"name":"Trello","_id":"clmrqd9j80057kqox556u243y"}],"_path":"post/Add-website-to-Trello-card-the-better-way/","_link":"https://kiko.io/post/Add-website-to-Trello-card-the-better-way/","_id":"clmrqd9g8000gkqoxgm3idbs3"},{"title":"Automatic Header Images in Hexo","date":"2020-06-22T15:49:16.000Z","description":"<p>Every article in this blog has an individual header image, to bring a little bit color into it. In this post I will show you how I deal with the images in using and automatic provisioning.</p>\n<p>For serving these pictures I use a static folder, as described in <a href=\"/categories/Tools/A-New-Blog-Customizing-Hexo/\">A New Blog: Customizing Hexo</a>. The hard work is done by the plugin <a href=\"https://github.com/niahoo/hexo-generator-copy\">Hexo Generator Copy</a>, which copies the static files into the <code>public_dir</code> while generating.</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Hexo","_id":"clmrqd9in003lkqox5afdfo51"},{"name":"Blogging","_id":"clmrqd9is003xkqox7tk5gifo"}],"_path":"post/Automatic-Header-Images-in-Hexo/","_link":"https://kiko.io/post/Automatic-Header-Images-in-Hexo/","_id":"clmrqd9g8000hkqoxc9m3b98x"},{"title":"Dopamine: How Software should be...","date":"2020-07-10T11:49:09.000Z","description":"<p>Not very often, when I’m looking for a new tool to replace some annoying or outdated piece of software, I have to blog about it … but from time to time, I’m discovering pearls, worth to lose a word about.</p>\n<p>The Windows 10 built-in media player Groove is (to be kind) … nice, but it is more or less a leftover from Microsoft’s attempt to create a competitor to iTunes, years ago. The crippeled UI is not the most modern and I was more than once annoyed about its usability.</p>\n<p>Doing a research for a good alternative, you stumble always over the usual suspects: MediaMonkey, Foobar2000, Winamp, VLC or even Media Player Classic!? Not modern enough, not user friendly enough, not lean enough.</p>\n<p>I really don’t remember where, but there was a screenshot of a player, which seems to be the complete opposite of the others: <strong>Dopamine</strong> from <a href=\"https://www.digimezzo.com/software/\">Digimezzo</a>, a project by the Belgian developer <a href=\"https://twitter.com/RaphaelGodart\">Raphaël Godart</a>…</p>\n<p><img src=\"/post/Dopamine-How-Software-should-be/screenshot_dopamine_202.png\" alt=\"Screenshot Dopamine 2.0.2.\"></p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Windows","_id":"clmrqd9ji0062kqoxbdupdhz1"},{"name":"Audio","_id":"clmrqd9jj0064kqoxbq0q1cdv"}],"_path":"post/Dopamine-How-Software-should-be/","_link":"https://kiko.io/post/Dopamine-How-Software-should-be/","_id":"clmrqd9gc000pkqoxcy760a9k"},{"title":"Show related posts in Hexo","date":"2020-10-03T11:17:03.000Z","description":"<p>It is always nice to point the readers of your blog’s articles to related posts, they might be interested in. They stay a little longer to understand what you have to offer and increases the likelihood that they become loyal readers, followers or subscribers. Related posts has become a standard on delivering news and posts.</p>\n<p>In the default Hexo theme <strong>Landscape</strong>, on which this blog is based, there is no such function built in, but as the Hexo community is very busy, there are some plugins you can use.</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Hexo","_id":"clmrqd9in003lkqox5afdfo51"},{"name":"Blogging","_id":"clmrqd9is003xkqox7tk5gifo"}],"_path":"post/Show-related-posts-in-Hexo/","_link":"https://kiko.io/post/Show-related-posts-in-Hexo/","_id":"clmrqd9gg000ykqox1wyrfiz6"},{"title":"TFS/DevOps: Delete Remote Workspace","date":"2020-02-27T23:00:00.000Z","description":"<p>If you are working with freelance developers and Azure DevOps&#x2F;TFS with TFVC (Team Foundation Version Control) in your company, maybe this will look familiar to you: You hire a new freelancer and you want to reuse the hardware, including the complete software setup, to bring him&#x2F;her to work as fast and straightforward as possible. You set up a new Azure Devops account with all necessary permissions and you think you’re done. No you are not…</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Visual Studio","_id":"clmrqd9j6004xkqoxcwwu22qj"},{"name":"TFS/DevOps","_id":"clmrqd9k0007kkqoxbbgtbyhf"}],"_path":"post/TFS-DevOps-Delete-Remote-Workspace/","_link":"https://kiko.io/post/TFS-DevOps-Delete-Remote-Workspace/","_id":"clmrqd9gg000zkqox0cgf79re"},{"title":"Using GitHub as Commenting Platform","date":"2020-07-05T12:55:16.000Z","description":"<p>If you run a blog, it is always advisable to integrate a commenting system, in order to get feedback on your posts from your readers.</p>\n<p>So did I, when I start this blog and I decided to use the <a href=\"https://disqus.com/\">Disqus platform</a>, as it was very easy to integrate … but I always had a bad feeling about a third-party platform collecting data from my readers. Disqus is probably not without reason under criticism by many people in the community.</p>\n<p>As I host this blog at GitHub (see <a href=\"/categories/Tools/A-New-Blog-VS-Code-Hexo-and-GitHub-Pages/\">A New Blog (Part One): VS Code, Hexo and GitHub Pages</a>) I was looking for a solution to host the comments also on my prefered platform. There were some solutions, which uses GitHub Issues for this and wanted to implement something like that someday.</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Hexo","_id":"clmrqd9in003lkqox5afdfo51"},{"name":"GitHub","_id":"clmrqd9ir003vkqoxe7ayhr7l"},{"name":"Blogging","_id":"clmrqd9is003xkqox7tk5gifo"}],"_path":"post/Using-GitHub-as-Commenting-Platform/","_link":"https://kiko.io/post/Using-GitHub-as-Commenting-Platform/","_id":"clmrqd9gh0010kqoxfc8i05mj"},{"title":"GitHub Tag Plugins for Hexo","date":"2021-12-29T11:20:34.000Z","description":"<p>Currently I’m working on improving my projects section by linking to some of my projects hosted on Github. One idea is to display the Github README there. Playing around with the GitHub API is fun and so I created two new Hexo Tag Plugins that I don’t want to deprive you of and that extend the <a href=\"https://github.com/kristofzerbe/hexo-tag-plugins\">Hexo Tag Plugin Collection</a>.</p>\n\n        <ul class=\"anchorlist\">\n            <li data-anchor=\"#readme\">GitHub README</li><li data-anchor=\"#user-and-repo-card\">GitHub User & Repo Card</li>\n        </ul>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Hexo","_id":"clmrqd9in003lkqox5afdfo51"},{"name":"GitHub","_id":"clmrqd9ir003vkqoxe7ayhr7l"},{"name":"Plugin","_id":"clmrqd9jk006akqoxf7r21zuh"}],"_path":"post/GitHub-Tag-Plugins-for-Hexo/","_link":"https://kiko.io/post/GitHub-Tag-Plugins-for-Hexo/","_id":"clmrqd9gr001ikqox6cws3nyg"},{"title":"GitHubs Magic Dot","date":"2021-08-20T11:43:04.000Z","description":"<p>GitHub has released the long awaited solution für code editing in the web today, or more precisely, the two new solutions: <a href=\"https://github.com/features/codespaces\"><strong>CodeSpaces</strong> and <strong>github.dev</strong></a>.</p>\n<p>As Brigit Murtaugh and Allison Weins pointed out in their presentation at the live stream on Youtube (<a href=\"https://www.youtube.com/watch?v=c3hHhRME_XI\">VS Code anywhere: GitHub Codespaces and github.dev</a>), both solutions are based on the codebase of Visual Studio Code, but have different approaches and target groups.</p>\n<p>Where <strong>Codespaces</strong> is an online editor with computing capabilities (realized by running a VM in the backend) and is only available für paid plans, <strong>github.dev</strong> is a free online editor to change files in your GitHub repo as you do it in your local VSCode, but without running and debugging capabilities.</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Browser","_id":"clmrqd9ip003pkqox52xyeidc"},{"name":"VS Code","_id":"clmrqd9iq003rkqox0smfakzd"},{"name":"GitHub","_id":"clmrqd9ir003vkqoxe7ayhr7l"}],"_path":"post/GitHubs-Magic-Dot/","_link":"https://kiko.io/post/GitHubs-Magic-Dot/","_id":"clmrqd9gs001jkqox45ch8qho"},{"title":"Hexo Tag Plugin Collection","date":"2021-12-12T13:07:36.000Z","description":"<p>Since day one of this blog I use <strong>Tag Plugins</strong>, sometimes as NPM packages from other developers, sometimes developed by myself.</p>\n<p>The latter have grown significantly over time and I want to share them with you by publishing them in a Github project called <strong>hexo-tag-plugins</strong>, where you can download and use those you need on extending your own Hexo based blog.</p>\n<p>On the Github page you can find all the info on how to use the plugins. In this article I will only briefly introduce them:</p>\n\n        <ul class=\"anchorlist\">\n            <li data-anchor=\"#anchor\">Anchor</li><li data-anchor=\"#anchorlist\">Anchorlist</li><li data-anchor=\"#alertbox\">Alertbox</li><li data-anchor=\"#blockquote_alt\">Alternative Blockqoute</li><li data-anchor=\"#blockquote_details\">Blockquote Details</li><li data-anchor=\"#codepen\">Codepen</li><li data-anchor=\"#codesandbox\">CodeSandbox</li><li data-anchor=\"#download-link\">Download Link</li><li data-anchor=\"#image-compare\">Image Compare</li><li data-anchor=\"#image-link\">Image Link</li><li data-anchor=\"#image-slide\">Image Slide</li><li data-anchor=\"#indiepen\">Indiepen</li><li data-anchor=\"#more-info\">More Info</li>\n        </ul>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Hexo","_id":"clmrqd9in003lkqox5afdfo51"},{"name":"VS Code","_id":"clmrqd9iq003rkqox0smfakzd"},{"name":"GitHub","_id":"clmrqd9ir003vkqoxe7ayhr7l"},{"name":"Collection","_id":"clmrqd9je005qkqox6cms35o5"},{"name":"Plugin","_id":"clmrqd9jk006akqoxf7r21zuh"}],"_path":"post/Hexo-Tag-Plugin-Collection/","_link":"https://kiko.io/post/Hexo-Tag-Plugin-Collection/","_id":"clmrqd9gs001kkqox0h9j0wk4"},{"title":"Hexo and the IndieWeb (Receiving Webmentions)","date":"2021-05-13T12:16:00.000Z","description":"<div class=\"alertbox alertbox-info\">\n      <p>This is part three of the splitted original post <a href=\"/post/Hexo-and-the-IndieWeb/\" title=\"Hexo and the IndieWeb\">Hexo and the IndieWeb</a>. Don’t miss Part 2 <a href=\"/post/Hexo-and-the-IndieWeb-Sending-Webmentions/\" title=\"Hexo and the IndieWeb (Sending Webmentions)\">Hexo and the IndieWeb (Sending Webmentions)</a> either.</p>\n\n    </div>\n  \n\n<hr>\n<p>A meaningful interaction has always two directions: sending and receiving. In this part of the post I want to show you how to receive Webmentions from other blogs participating in the IndieWeb.</p>\n<p>As Hexo is a SSG it generates static HTML pages. This has the advantage that the pages can be hosted just about anywhere (in my case <a href=\"https://pages.github.com/\">Github Pages</a>, but also the disadvantage of not having a real backend. Therefore, we need an external service that acts as an Webmention endpoint, where other people can send their webmentions.</p>\n<p><a href=\"https://aaronparecki.com/\">Aaron Parecki</a>, co-founder of the IndieWeb, has made a service called <a href=\"https://webmention.io/\"><strong>webmention.io</strong></a> we can use for free. It is able to convert old-fashioned Pingbacks to Webmentions, supports deleting of unwanted mentions, has a Blocklist for blocking domains, Webhooks for real-time processing and last but not least an API to get all your Webmentions per page or per site.</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Hexo","_id":"clmrqd9in003lkqox5afdfo51"},{"name":"Blogging","_id":"clmrqd9is003xkqox7tk5gifo"},{"name":"Publishing","_id":"clmrqd9jk0068kqoxd8af0av6"},{"name":"Share","_id":"clmrqd9jy007dkqoxggvc9bgv"}],"_path":"post/Hexo-and-the-IndieWeb-Receiving-Webmentions/","_link":"https://kiko.io/post/Hexo-and-the-IndieWeb-Receiving-Webmentions/","_id":"clmrqd9gt001lkqox8pt52pgw"},{"title":"Hexo and the IndieWeb (Sending Webmentions)","date":"2021-05-08T17:39:43.000Z","description":"<div class=\"alertbox alertbox-info\">\n      <p>This is part two of a blog post that turned out to be a bit too long. Don’t miss Part 1: <a href=\"/post/Hexo-and-the-IndieWeb/\" title=\"Hexo and the IndieWeb\">Hexo and the IndieWeb</a> …</p>\n\n    </div>\n  \n\n<hr>\n<p>After you have created your new Hexo post with <code>hexo new post &quot;My Fancy Post&quot;</code> and spend a couple of minutes&#x2F;hours&#x2F;days on writing meaningful text, you publish it by running <code>hexo generate</code> and copying the generated HTML to your server.</p>\n<p>Next step would be to inform all the blogs you linked to in your now published post, that you have done just that. You want to send <strong>Webmentions</strong>.</p>\n<p>Good news: you don’t have to write your own solution to scan your article for external URL’s and sending Webmentions to their creators: <a href=\"https://remysharp.com/2019/06/18/send-outgoing-webmentions\">Remy Sharp has done that</a> already with his service <a href=\"https://webmention.app/\"><strong>webmention.app</strong></a>. It supports the long existing <a href=\"http://www.hixie.ch/specs/pingback/pingback\">Pingbacks</a> too and offers several ways to achieve your goal:</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Hexo","_id":"clmrqd9in003lkqox5afdfo51"},{"name":"Blogging","_id":"clmrqd9is003xkqox7tk5gifo"},{"name":"Publishing","_id":"clmrqd9jk0068kqoxd8af0av6"},{"name":"Share","_id":"clmrqd9jy007dkqoxggvc9bgv"}],"_path":"post/Hexo-and-the-IndieWeb-Sending-Webmentions/","_link":"https://kiko.io/post/Hexo-and-the-IndieWeb-Sending-Webmentions/","_id":"clmrqd9gt001mkqox40ykb5l3"},{"title":"Hexo and the IndieWeb","date":"2021-05-05T17:15:00.000Z","description":"<a href=\"https://news.indieweb.org/en\" class=\"u-syndication\" style=\"display:none;\">Posted on IndieNews</a>\n  \n\n<p>It is cool to publish your thoughts on your own blog under your only domain and not only on big social media platforms, because that way you keep control over your content. But what makes Facebook, Twitter and others “social” is the interaction between the people. Likes, Retweets, Mentions, Replies are the fuel which drives them. But most of the blogging solutions offers only rudimentary interactions, in form of article comments. The comment hurdle is high because interacting on someone else’s site is different from interacting on what is supposed to be your own, such as your Twitter or Facebook feed.</p>\n<p>The project <a href=\"https://indieweb.org/\"><strong>IndieWeb</strong></a> and their approach of <a href=\"https://indieweb.org/Webmention\"><strong>Webmentions</strong></a>, has the goal to fill this gap. As a <a href=\"https://www.w3.org/TR/webmention/\">W3C recommendation</a>, it defines standards how the social interaction of independent blogging solutions can be technically implemented without the need of manual intervention. Let software do the job…</p>\n<p>In this article I will only briefly go into the basics and then show an implementation solution for the SSG <a href=\"https://hexo.io/\"><strong>Hexo</strong></a>.</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Hexo","_id":"clmrqd9in003lkqox5afdfo51"},{"name":"Blogging","_id":"clmrqd9is003xkqox7tk5gifo"},{"name":"Publishing","_id":"clmrqd9jk0068kqoxd8af0av6"},{"name":"Share","_id":"clmrqd9jy007dkqoxggvc9bgv"}],"_path":"post/Hexo-and-the-IndieWeb/","_link":"https://kiko.io/post/Hexo-and-the-IndieWeb/","_id":"clmrqd9gu001nkqoxg3yy32tv"},{"title":"Open Source Insights - Seeing the big picture","date":"2021-06-06T07:36:49.000Z","description":"<p>A while ago I needed some functionality regarding database access in one of my spare time projects and I decided to use a library from NPM. Typed <code>npm install</code> and the hell was breaking loose … 186 direct dependencies and nearly 200K of files were flooding my harddrive!</p>\n<p>The mental basis of IT is lazyness, which means that we produce software to make our and others life easier. This also applies to the building process. Don’t reinvent the wheel, but reuse the work of other developers. But … we have to recognize the limits and prevent to fall into the dependency hell.</p>\n<p>To get a better overview over dependencies, regarding NPM and other repositories, some Google engineers have published a project called <strong><a href=\"https://deps.dev/\">Open Source Insights</a></strong> a couple of days ago.</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Node.js","_id":"clmrqd9kx00akkqoxbb9tej2j"}],"_path":"post/Open-Source-Insights-Seeing-the-big-picture/","_link":"https://kiko.io/post/Open-Source-Insights-Seeing-the-big-picture/","_id":"clmrqd9gv001qkqoxb9zuf4x9"},{"title":"Pattern for dynamic Hexo pages","date":"2021-08-25T07:43:44.000Z","description":"<p><a href=\"https://hexo.io/\">Hexo</a> is a great SSG platform for blogging. Just write your Markdown beneath some Frontmatter meta data, run <code>hexo generate</code> and publish the results to a web server.</p>\n<p>But at some point you may want to process different data from internal or external sources and integrate it into your blog. Hexo doesn’t support this out of the box, but has a powerful feature called <a href=\"https://hexo.io/api/generator.html\">Generator</a>, which helps you to achieve your goal. The following is a sample and pattern of how to implement this.</p>\n<p>The starting point of my example is the requirement to display several elements of the same type on a dynamic page, but you can of course adapt the example according to your needs.</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Hexo","_id":"clmrqd9in003lkqox5afdfo51"},{"name":"Blogging","_id":"clmrqd9is003xkqox7tk5gifo"}],"_path":"post/Pattern-for-dynamic-Hexo-pages/","_link":"https://kiko.io/post/Pattern-for-dynamic-Hexo-pages/","_id":"clmrqd9gv001rkqox0i2pc0l1"},{"title":"Remote Testing and Debugging with Chrome","date":"2021-01-24T13:47:10.000Z","description":"<p>Developing a website or web app means, you have installed an editor locally on your computer, writing your code locally and start a tiny, built-in web server for debugging locally in your preferred browser. In most browsers, there are some features to mimic a smartphone, to see if your solution is working on such a device too, but you only get a hint if it’s running properly. Some mobile features like <code>navigator.canShare</code> do not work at all. Better is to see it live on your device.</p>\n<p>This article will show you firstly, how to test your local solution on a smartphone and secondly, how to debug it locally, when it runs on the smartphone after releasing.</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Browser","_id":"clmrqd9ip003pkqox52xyeidc"},{"name":"VS Code","_id":"clmrqd9iq003rkqox0smfakzd"},{"name":"Debugging","_id":"clmrqd9kz00aqkqoxdm9i5s7a"}],"_path":"post/Remote-Testing-and-Debugging-with-Chrome/","_link":"https://kiko.io/post/Remote-Testing-and-Debugging-with-Chrome/","_id":"clmrqd9gw001tkqox5uashv6n"},{"title":"Spice Up Windows Terminal","date":"2020-12-24T14:03:15.000Z","description":"<p>Working with the PowerShell in 2020 means fun, because of the new <a href=\"https://www.microsoft.com/en-us/p/windows-terminal/9n0dx20hk701\"><strong>Windows Terminal</strong> (get it from Windows Store)</a>. It has more power as the old Powershell Console and it is visually adaptable to your personal taste, by installing the wonderful theming engine <a href=\"https://github.com/JanDeDobbeleer/oh-my-posh\"><strong>oh-my-posh</strong> from Jan De Dobbeleer</a>.</p>\n<p><img src=\"/post/Spice-Up-Windows-Terminal/terminal-original.png\" alt=\"Original Terminal\"></p>\n<p><img src=\"/post/Spice-Up-Windows-Terminal/terminal-oh-my-posh.png\" alt=\"Terminal with oh-my-posh\"></p>\n<p>To get Oh-My-Posh properly run, there are several steps to do I want to show here in a nutshell…</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Windows","_id":"clmrqd9ji0062kqoxbdupdhz1"},{"name":"Theming","_id":"clmrqd9l200b2kqox49up9we6"},{"name":"PowerShell","_id":"clmrqd9l200b3kqoxba2a50ee"}],"_path":"post/Spice-Up-Windows-Terminal/","_link":"https://kiko.io/post/Spice-Up-Windows-Terminal/","_id":"clmrqd9gy001ykqoxdzny4ogy"},{"title":"Triangulate your images with Triangula","date":"2021-04-30T12:56:13.000Z","description":"<p>As I am a photo enthusiast I’m always excited to find new tools, to give images a unique look. Today I stumbled over <a href=\"https://github.com/RH12503/triangula\"><strong>Triangula</strong></a>. Ever seen one of those cool backgrounds, where a picture has been broken up into lots of little triangles?</p>\n<blockquote>\n<p>In trigonometry and elementary geometry, the division of a surface into triangles is called a triangular grid, triangular mesh or triangulation.<br><em>Wikipedia</em></p>\n</blockquote>\n<p>Whoever <a href=\"https://github.com/RH12503\">RH12503 (Ryan H??)</a> is, he did an amazing job on creating this little Go program, including a pleasing UI, do convert images into those equivalents.</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Imaging","_id":"clmrqd9k4007ykqoxbcjd6nr2"},{"name":"SVG","_id":"clmrqd9l000awkqoxf5rzelms"}],"_path":"post/Triangulate-your-images-with-Triangula/","_link":"https://kiko.io/post/Triangulate-your-images-with-Triangula/","_id":"clmrqd9gz0020kqoxfhr3ano5"},{"title":"Tringula And The Beauty Of Mathematics","date":"2021-12-07T13:45:00.000Z","description":"<div class=\"alertbox alertbox-note\">\n      <p>This post is a new version of <a href=\"/post/Triangulate-your-images-with-Triangula/\" title=\"Triangulate your images with Triangula\">Triangulate your images with Triangula</a> and the first in a series of articles published on the German news site <a href=\"https://golem.de/\">golem.de</a>.</p>\n\n    </div>\n  \n\n<p>When talking about triangulation, non-mathematicians generally understand it as a geometric method for measuring distances. Roughly speaking, two known points in space can be used to calculate a third via the angles to it. In one or the other Hollywood flick of the genres war or spy movie you have surely come across this.</p>\n<p>However, triangulation also refers to the division of a surface into triangles or, more generally, the description of an object by means of polygons. It is used in topology and land surveying, but also in imaging methods of modeling.</p>\n<p>How wonderfully this field of mathematics can be applied to photos is shown by the GitHub user <a href=\"https://github.com/RH12503\"><strong>RyanH</strong></a> with his program <a href=\"https://github.com/RH12503/triangula\"><strong>Triangula</strong></a> written in Go, which first roughly splits a given JPG or PNG image into triangles and then refines it further and further via mutations. Among other things, you can specify how many points you want to start with and how many mutations the program should perform. It is also possible to calculate the new image using hexagons instead of classic triangles.</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Imaging","_id":"clmrqd9k4007ykqoxbcjd6nr2"},{"name":"SVG","_id":"clmrqd9l000awkqoxf5rzelms"}],"_path":"post/Tringula-And-The-Beauty-Of-Mathematics/","_link":"https://kiko.io/post/Tringula-And-The-Beauty-Of-Mathematics/","_id":"clmrqd9gz0021kqox29c51w1s"},{"title":"Use and manage multiple Node.js versions on Windows 10","date":"2021-01-08T12:47:22.000Z","description":"<p>For a new project I needed to have Node 14 running on my Windows 10 machine, so installation was done quickly via downloading and running the setup file.</p>\n<p>A short time later I wanted to write a new blog post here on kiko.io, which depends on the Node.js based static site generator <a href=\"https://hexo.io/\">Hexo</a> … and ran into several problems.</p>\n<p>First of all my hero image processing script (see <a href=\"/post/Automatic-Header-Images-in-Hexo/\" title=\"Automatic Header Images in Hexo\">Automatic Header Images in Hexo</a>) returned an exception. The script uses <a href=\"https://github.com/hexojs/hexo-fs\">hexo-fs</a> and the problem is known quite some time, according to this <a href=\"https://github.com/hexojs/hexo/issues/4263\">Github issue</a>. The guys recommend to downgrade to an older version of Node.js … :(</p>\n<p>Ok … I needed a solution to install multiple Node.js versions and switch between them, depending on which project I want to work on … and there is one: <strong><a href=\"https://github.com/coreybutler/nvm-windows\">nvm-windows</a></strong> by Corey Butler!</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Hexo","_id":"clmrqd9in003lkqox5afdfo51"},{"name":"Windows","_id":"clmrqd9ji0062kqoxbdupdhz1"},{"name":"Node.js","_id":"clmrqd9kx00akkqoxbb9tej2j"}],"_path":"post/Use-and-manage-multiple-Node-js-versions-on-Windows-10/","_link":"https://kiko.io/post/Use-and-manage-multiple-Node-js-versions-on-Windows-10/","_id":"clmrqd9h00023kqox3nb10uzt"},{"title":"Uups ... empty posts","date":"2021-09-21T11:40:25.000Z","description":"<p>A while ago I wrote about <a href=\"/post/Automatic-Duplicate-Image-Shadow/\" title=\"Automatic Duplicate Image Shadow\">Automatic Duplicate Image Shadow</a> and used <a href=\"https://indiepen.tech/\">indiepen</a> for showing the result of my efforts.</p>\n\n    <div class=\"alertbox alertbox-note\">\n      <p><strong><a href=\"https://indiepen.tech/\">indiepen</a></strong> is a solution for showing code samples without the need of a code sharing platform, like <a href=\"https://codepen.io/\">codepen</a>. Just reference a <code>index.html</code>, <code>main.js</code> and <code>styles.css</code> from wherever you want and indiepen is wrapping it with a neat viewer inside an IFrame.</p>\n\n    </div>\n  \n\n<p>I did it quick and dirty first (sample files in a static folder) and now it was the time to do it right: place the sample files in a subfolder of the post in my Hexo-driven blog solution, in order to reference it from there AND have the possibility to call it directly via <code>./post/my-post/sample</code>.</p>\n<p>The key to achive that in Hexo is the configuration option <code>post_asset_folder: true</code>, which generates a subfolder for all assets with the same name as the post.</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|- _posts</span><br><span class=\"line\">   |- my-blog-post</span><br><span class=\"line\">      |- my-first-asset.jpg</span><br><span class=\"line\">      |- my-second-asset.jpg</span><br><span class=\"line\">   |- my-blog-post.md</span><br></pre></td></tr></table></figure>\n\n<p>My idea regarding the indiepen files was having a subfolder for each indiepen in the post asset folder:</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|- _posts</span><br><span class=\"line\">   |- my-blog-post</span><br><span class=\"line\">      |- my-first-asset.jpg</span><br><span class=\"line\">      |- my-second-asset.jpg</span><br><span class=\"line\">NEW   |- sample</span><br><span class=\"line\">NEW      |- index.html</span><br><span class=\"line\">NEW      |- main.js</span><br><span class=\"line\">NEW      |- styles.css</span><br><span class=\"line\">   |- my-blog-post.md</span><br></pre></td></tr></table></figure>\n\n<p>Run <code>hexo generate</code>, check that the indiepen was showing up properly and I thought I was done. Wrong … after commiting my changes to Github, where my blog is living, and checking my RSS feed a while after, I saw this:</p>\n<p><img src=\"/post/Uups-empty-posts/feed-empty-posts.png\" alt=\"Empty posts in feedly\"></p>\n<p>Three empty posts…!?</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Hexo","_id":"clmrqd9in003lkqox5afdfo51"},{"name":"Blogging","_id":"clmrqd9is003xkqox7tk5gifo"}],"_path":"post/Uups-empty-posts/","_link":"https://kiko.io/post/Uups-empty-posts/","_id":"clmrqd9h10025kqox5et8b1d1"},{"title":"VS Code on the Web","date":"2021-10-22T16:38:29.000Z","description":"<p>For most of the years I have been in the IT industry, I have worked with the “fat” Visual Studio from Microsoft. Fat in terms of features, for sure, but also in size and load times. It made no sense to use an other IDE, while developing software with VB.NET&#x2F;C#. But with the advent of Node.JS JavaScript, so far only known as a scripting language for web pages, outgrew itself and became a serious competitor to established languages.</p>\n<p>In 2012 Adobe came out with <a href=\"https://brackets.io/\">Brackets</a>, a lightweight IDE for developing web applications, written with the very same tech stack: HTML, CSS and JavaScript! Based on the <a href=\"https://en.wikipedia.org/wiki/Chromium_Embedded_Framework\">Chromium Embedded Framework</a>, it felt like a normal application! Mind blowing…</p>\n<p>In 2015 there was a new kid in town: <strong><a href=\"https://code.visualstudio.com/\">Visual Studio Code</a> (VS Code)</strong>, of all things from … Microsoft. During this time, the Redmond-based company had finally jumped on the open source bandwagon and perhaps they saw that Adobe was doing some things right on the IDE market with Brackets (but also some things wrong) and you didn’t want to miss the chance to engage the open source community.</p>\n<p>The speed with which VS Code passed other IDE’s in the developer favor was quite amazing, due to the fact that the source code was openly available on GitHub and the developers in Switzerland released a new version every damn month.</p>\n<p>What was exciting for me was the question of how long it would take for someone to make this IDE based on web technology available online, i.e. in a browser. It took until 2021…</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"VS Code","_id":"clmrqd9iq003rkqox0smfakzd"}],"_path":"post/VS-Code-on-the-Web/","_link":"https://kiko.io/post/VS-Code-on-the-Web/","_id":"clmrqd9h10026kqox0w3yfsig"},{"title":"Visualize the codebase of your GitHub repo","date":"2021-08-21T05:55:00.000Z","description":"<p>Beginning of the month, <a href=\"https://twitter.com/Wattenberger\">Amelia Wattenberger</a> of <a href=\"https://next.github.com/\">GitHub Next</a> has published a project to create a SVG visualization of a GitHub repository’s codebase.</p>\n<p>On the project page <strong><a href=\"https://next.github.com/projects/repo-visualization\">Visualizing a codebase</a></strong>, she talks about the advantages of code vizualization in terms of a better overview and comparability of code …  and I loved it at first sight, because I’m an absolute visual person.</p>\n<p><img src=\"/post/Visualize-the-codebase-of-your-GitHub-repo/screenshot-repo-visualization.png\" alt=\"Screenshot from the project page\"></p>\n<p>But her attempt was not only to show us what’s possible (static SVG files and even interactive apps for code browsing, filtering and comparing), but give us the possibility to create our own codebase diagrams as SVG automatically, whenever we commit our code, by running a <a href=\"https://docs.github.com/en/actions\">GitHub Action</a>, she and her team has developed … the <a href=\"https://github.com/githubocto/repo-visualizer\"><strong>Repo Vizualizer</strong></a></p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"GitHub","_id":"clmrqd9ir003vkqoxe7ayhr7l"},{"name":"Windows","_id":"clmrqd9ji0062kqoxbdupdhz1"},{"name":"Imaging","_id":"clmrqd9k4007ykqoxbcjd6nr2"}],"_path":"post/Visualize-the-codebase-of-your-GitHub-repo/","_link":"https://kiko.io/post/Visualize-the-codebase-of-your-GitHub-repo/","_id":"clmrqd9h10027kqox4pxeb79x"},{"title":"Checker Plus - Gmail in better...","date":"2022-02-12T23:00:00.000Z","description":"<p>Those who have a Google account usually also use the web-based mailer <a href=\"https://gmail.com/\">Gmail</a>, often <a href=\"https://calendar.google.com/\">Google Calendar</a> for appointments and perhaps <a href=\"https://drive.google.com/\">Google Drive</a> for storing files in the cloud. The US internet company makes it very easy for users to use its web-based services. The entry barriers are low and the interfaces are tidy and intuitive.</p>\n<p>If you use the in-house Chrome browser, you can also be informed about incoming mails or upcoming appointments. One click and the browser opens with Gmail or Google Calendar …</p>\n<p>But it is not always necessary or desirable to load one of the Google tools completely in a new browser window, when you may already have two or three dozen tabs open in several windows and are in danger of losing track of them.</p>\n<p>That’s what Montreal-based software developer <strong><a href=\"https://jasonsavard.com/\">Jason Savard</a></strong> seems to have thought ten years ago. At that time, he began writing a Chrome extension that would report a newly received Gmail by means of a small icon in the extension bar of the browser and display it directly in a separate pop-up window by clicking on it. The result was <strong><a href=\"https://jasonsavard.com/Checker-Plus-for-Gmail\">Checker Plus for Gmail</a></strong>.</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Browser","_id":"clmrqd9ip003pkqox52xyeidc"},{"name":"Plugin","_id":"clmrqd9jk006akqoxf7r21zuh"},{"name":"Mail","_id":"clmrqd9la00btkqoxex2mhqrb"}],"_path":"post/Checker-Plus-Gmail-in-better/","_link":"https://kiko.io/post/Checker-Plus-Gmail-in-better/","_id":"clmrqd9h3002bkqoxdb4xebv3"},{"title":"Dopamine, a music player for Windows 10 as it should be","date":"2022-08-21T10:00:00.000Z","description":"<p>There are about fourleventy millions music apps for smartphones running Android and iOS. However, most of them are relatively junk or try to foist malware on users. You have to make sure that you separate the wheat from the chaff. On the other hand, the situation is surprisingly different for Windows, the much older operating system. The older ones of us will still remember the glorious WinAmp times, whose current owner Radionomy has been making a very long new attempt for a new version 6 since 2018 (version 5.8 is already a handsome 6 years old), but you can actually count the good music players for Windows 10 and higher on one hand, if you subtract the streaming apps such as Spotify and Co. and disregard everything that comes along as a jack of all trades and can ALSO play MP3. The best known are the in Windows included and miserably failed iTunes clone from Micosoft called <strong>Groove</strong>, <strong><a href=\"https://www.aimp.ru/\">AIMP</a></strong>, <strong><a href=\"https://www.foobar2000.org/\">foobar2000</a></strong>, <strong><a href=\"https://www.mediamonkey.com/\">MediaMonkey</a></strong> and <strong><a href=\"https://www.getmusicbee.com/\">MusicBee</a></strong>. Some nostalgic people might also add the good old <a href=\"https://support.microsoft.com/en-us/windows/get-windows-media-player-81718e0d-cfce-25b1-aee3-94596b658287\">Windows Media Player</a>, which managed to survive on the net despite Groove. If you look at the download pages of these music player candidates and try to look behind the business model, some of them simply do not download. One or the other player also overdoes it with the featuritis. Bouncing balls or bars to the music are gimmicks that were thought to be outdated long ago, when it is actually only about listening to music.</p>\n<p>Belgian software developer <strong>Raphaël Godart</strong> (<a href=\"https://twitter.com/RaphaelGodart\">twitter.com&#x2F;RaphaelGodart</a>) must have felt the same way a few years ago when he set out to launch his own player for local MP3 collections, which in this case sounds falsely commercial because his player <strong><a href=\"http://www.digimezzo.com/software/\">Dopamine</a></strong> is freely available on GitHub and open source under GPL 3.0 license. It plays music under a plain and simple, yet chic interface … Period. Everything a music lover’s heart desires is on board:</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Windows","_id":"clmrqd9ji0062kqoxbdupdhz1"},{"name":"Audio","_id":"clmrqd9jj0064kqoxbq0q1cdv"}],"_path":"post/Dopamine-a-music-player-for-Windows-10-as-it-should-be/","_link":"https://kiko.io/post/Dopamine-a-music-player-for-Windows-10-as-it-should-be/","_id":"clmrqd9h7002jkqoxhzbj4xzw"},{"title":"Gitpod - Visual Studio Code on the Web","date":"2022-07-17T13:00:00.000Z","description":"<p>It’s amazing how quickly the editor <strong><a href=\"https://code.visualstudio.com/\">Visual Studio Code</a></strong> (VS Code) has conquered the developer community (#1 in the Stack Overflow Developer Survey Ranking 2021) and even those from the Linux faction, who are historically rather critical of Microsoft, but for good reason. The company from Redmond has done quite a lot right with the tool and has gathered a large group of open source developers around it (currently 1,640 contributors), who contribute to the fact that the Swiss Microsoft team around Erich Gamma can bring out a new release for Windows, Linux and macOS every few weeks.</p>\n<p>It all started with the <a href=\"https://microsoft.github.io/monaco-editor/\">Monaco Editor</a>, the core around which VS Code is built and which was first released on April 14, 2016. The exciting thing about Monaco and VS Code is, that it is consistently written using web technologies, i.e. HTML, CSS and Javascript, packaged and executed using the framework <a href=\"https://www.electronjs.org/\">Electron</a> developed by GitHub, which in turn is based on <a href=\"https://nodejs.org/en/\">Node.js</a> and the open source browser engine <a href=\"https://www.chromium.org/Home/\">Chromium</a> from Google.</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"VS Code","_id":"clmrqd9iq003rkqox0smfakzd"},{"name":"GitHub","_id":"clmrqd9ir003vkqoxe7ayhr7l"},{"name":"Remote","_id":"clmrqd9lf00cekqoxgqdj6ccg"}],"_path":"post/Gitpod-Visual-Studio-Code-on-the-Web/","_link":"https://kiko.io/post/Gitpod-Visual-Studio-Code-on-the-Web/","_id":"clmrqd9h8002lkqoxfx1i12ug"},{"title":"Mastodon simply explained","date":"2022-11-15T15:32:07.000Z","description":"<p>This weekend I had a revival experience. I got myself a <a href=\"https://joinmastodon.org/\"><strong>Mastodon</strong></a> account, after many years of staying away from social media as far as I could and at most tweeting a new blog post. Since my active Twitter days, things have taken such a turn for the worse, that I’ve preferred to stay away completely.</p>\n<p>I don’t know what made me join Mastodon on Sunday, but it sparked something in me: The love for the good old internet of the late 90s, early 2000s. These guys gave me a warm welcome and made me feel that Internet communities, away from sleazy influencers and banner ads, could actually still work. I got a taste of it, when I let this blog become part of IndieWeb over a year ago, but didn’t quite believe in it because of the low traffic and mentions.</p>\n<p>Now the richest man on the planet has to come along and buy the bird site, and a niche product called Mastodon, well known but underestimated in tech circles, almost explodes under the onslaught of disappointed commercial users. And that’s what we are on Twitter, Facebook and Co … a commercial object.</p>\n<p>The problem now will be how the community can integrate these many users for whom it was not mentally prepared. What now adapts to whom? The most important thing, however, will be to teach the newcomers (and I count myself among them) that Mastodon is not Twitter in new clothes!</p>\n<p>I was going to write a few things about this, but this morning I read a Twitter thread from <a href=\"https://mastodon.green/@pjakobs\"><strong>Peter Jakobs</strong></a>, a self-proclaimed digital Aboriginal from Germany, that just sums it all up and explains it so well I could hardly do it:</p>\n<p><a href=\"https://twitter.com/pjakobs/status/1590276045521195008\"><img src=\"/post/Mastodon-simply-explained/tweet-peter-jakobs-22-11-09.png\" alt=\"Tweet from Peter Jakobs, November 29, 2022\"></a></p>\n<p>That’s why I’m now doing something I’ve never done before: I quote Peter here completely, translated from German into English … Curtain up (and thank you <a href=\"https://www.deepl.com/en/translator\">DeepL</a> :D):</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Publishing","_id":"clmrqd9jk0068kqoxd8af0av6"},{"name":"Social Media","_id":"clmrqd9lg00cgkqox76t92dxn"}],"_path":"post/Mastodon-simply-explained/","_link":"https://kiko.io/post/Mastodon-simply-explained/","_id":"clmrqd9h8002mkqoxaro5guo1"},{"title":"Old Sweetheart Rediscovered","date":"2022-06-21T11:21:15.000Z","description":"<p>It seems like ages ago that I wrote a tool called <strong>OutlookSignature</strong> with Visual Basic 6 and put it on the web on my old German blog <strong>zerbit.de</strong>. But the <a href=\"https://web.archive.org/web/20111116021952/http://www.zerbit.de/projekte/outlooksignature.aspx\">WayBackMachine</a> says something different. Started in 2006, I released the last version 1.9 at the beginning of December 2008. Just 14 years ago…</p>\n<p><img src=\"/post/Old-Sweetheart-Rediscovered/zerbit-outlooksignature.png\" alt=\"OutlookSignature on zerbit.de ten years ago\"></p>\n<p>The thing was a command line tool, that could be used to automatically generate signatures for Microsoft Outlook in the three formats TXT, RTF and HTML, for example centrally via a Windows login script for the entire organization. No hassle anymore for the users on creating an appropriate mail signature and no more stress for the marketing department in enforcing a uniform appearance. It was based on templates with placeholders for the data and configurable via an INI file. The data could come either from the ActiveDirectory via LDAP or from any database.</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Mail","_id":"clmrqd9la00btkqoxex2mhqrb"},{"name":"Office","_id":"clmrqd9lh00cjkqoxfkstdb2x"}],"_path":"post/Old-Sweetheart-Rediscovered/","_link":"https://kiko.io/post/Old-Sweetheart-Rediscovered/","_id":"clmrqd9h9002nkqoxfr91hkxw"},{"title":"One mouse to rule them all","date":"2022-10-08T09:46:57.000Z","description":"<p><strong>Multiple monitors on one computer are elementary for effective IT work. However, operating multiple computers with one input set requires tools, for example one from the Microsoft Garage.</strong></p>\n<p>The trend is toward second or third devices, especially among IT workers. In addition to the stationary computer, which may still be under the desk, there is a laptop and possibly a tablet. All of them are connected to cloud services. If the desk is large enough, there may be two monitors and a full-size keyboard connected to the desktop, the laptop on the left, on which two or three special programs are installed, and the Surface tablet on the right for communication with its narrow-track keyboard. And spread out on the table are three mice in different colors so as not to constantly get the wrong one. A scenario that the author of these lines was also confronted with … yes, until a few years ago a small tool for Microsoft Windows fell in front of his feet, which abruptly ended the input chaos: Mouse Without Borders.</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Windows","_id":"clmrqd9ji0062kqoxbdupdhz1"},{"name":"Workflow","_id":"clmrqd9ky00apkqoxcst3hj99"},{"name":"Remote","_id":"clmrqd9lf00cekqoxgqdj6ccg"}],"_path":"post/One-mouse-to-rule-them-all/","_link":"https://kiko.io/post/One-mouse-to-rule-them-all/","_id":"clmrqd9h9002okqox801y05ol"},{"title":"Syndicate Mastodon Hashtags in your favorite Feed Reader","date":"2022-11-13T16:48:40.000Z","description":"<p>Ok, I admit it: I read RSS feeds. Quite old school you might think, but I’m mostly off Social Media and the most news sites quite a while ago, with a few exceptions. I just want to read selective stuff, especially in the direction of technology, and not interrupted by items, the news provider think I have to read. My favorite tool for my feed collection is <a href=\"https://feedly.com/\">Feedly</a>, which I open up almost every morning.</p>\n<p>Today, Max Böck gave me the momentum with his article <a href=\"https://mxb.dev/blog/the-indieweb-for-everyone/\">The IndieWeb for Everyone</a> to try another type of social media I know for quite a long time, but never give it a chance: <a href=\"https://de.wikipedia.org/wiki/Mastodon_(Software)\">Mastodon</a>. I’m now part of it on <a href=\"https://indieweb.social/web/@kiko\">indieweb.social</a>.</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Collection","_id":"clmrqd9je005qkqox6cms35o5"},{"name":"Publishing","_id":"clmrqd9jk0068kqoxd8af0av6"},{"name":"Mastodon","_id":"clmrqd9lk00cskqox01k6geca"}],"_path":"post/Syndicate-Mastodon-Hashtags-in-your-favorite-Feed-Reader/","_link":"https://kiko.io/post/Syndicate-Mastodon-Hashtags-in-your-favorite-Feed-Reader/","_id":"clmrqd9hb002rkqoxfkxk71px"},{"title":"The State of the Blog","date":"2022-12-23T21:40:00.000Z","description":"<p>I’ve started this blog in 2019 with <a href=\"/post/How-To-Visual-Studio-Database-Project-and-ADSI/\" title=\"How-To: Visual Studio Database Project and ADSI\">this article</a> primarily because I needed an area to record things learned for myself, with the side effect that others can benefit from it if they want.</p>\n<p>Why my choice fell on the static site generator <a href=\"https://hexo.io/\">Hexo</a>, I no longer know, but I have now become accustomed (even to the shortcomings) and so far I have been able to implement all my ideas in it … and I had a few of them.</p>\n<p>In this post I would like to share a few experiences I have had with Hexo, regarding the main functionality and the things I’ve customized and describe my workflow behind the individual features of my blog. The latter is not as straightforward as I would like it to be, especially because I have different devices in use that require different approaches. The main purpose of this post is to simply write down for me, how things currently work on kiko.io and to have one or the other idea how to do it better while writing. Doing this publicly is in the hope that you might read this and have a terrific idea that I haven’t come up with yet and leave a comment or webmention … :)</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Hexo","_id":"clmrqd9in003lkqox5afdfo51"},{"name":"Blogging","_id":"clmrqd9is003xkqox7tk5gifo"}],"_path":"post/The-State-of-the-Blog/","_link":"https://kiko.io/post/The-State-of-the-Blog/","_id":"clmrqd9hb002tkqoxgyed4jyy"},{"title":"Contribute with Conventional Commits","date":"2023-09-15T15:57:40.000Z","description":"<p>I’ll be honest … I need some Git training. From time to time I contribute small things to GitHub projects and sometimes get confused with all the commands. <code>Fork</code>, <code>Clone</code>, <code>Commit</code>, <code>Stage</code>, <code>Pull Request</code> … all things that mean something to me, but that I certainly haven’t internalized. And so it happens that I sometimes mess up a pull request or something similar.</p>\n<p>Sure, my blog here also lives in GitHub, both in terms of source control and hosting on GitHub Pages, but here I’m the only one committing. No issues, no branches, no pull requests or anything else. I change something, hit commit and I’m done.</p>\n<p>Another point I can’t dismiss: I’m a Windows guy who likes to click buttons. The command line is not for me at all.<br><em>What was the name of the parameter? Do I have to write <code>--param=xxx</code> or <code>/param:xxx</code> … damn where is the button?</em><br>My brain is probably too small for that.</p>\n<p>Visual Studio Code is a big help there … it has buttons! But that doesn’t save me when it comes to Git, because you have to know in which order to press which of these buttons!</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"VS Code","_id":"clmrqd9iq003rkqox0smfakzd"},{"name":"Publishing","_id":"clmrqd9jk0068kqoxd8af0av6"},{"name":"Git/GitHub","_id":"clmrqd9lp00d4kqox8xwt4x4k"}],"_path":"post/Contribute-with-Conventional-Commits/","_link":"https://kiko.io/post/Contribute-with-Conventional-Commits/","_id":"clmrqd9hd002wkqox8aj178og"},{"title":"Image Masonry Tag Plugin for Hexo","date":"2023-09-01T14:07:37.000Z","description":"<p>Displaying a few more images than usual in a post is always a bit tricky, because you have to make sure they don’t get too big and drown out the text. But they should not be too small either and the arrangement is also important to consider.</p>\n<p>For this purpose I have so far used my <a href=\"/post/Hexo-Tag-Plugin-Collection/#image-slide\">Image Slider Tag Plugin</a>, but with this you only ever see one of the images and have to scroll through the rest horizontally. A medium sized overview, best in the so called masonry format, where images are automatically assembled based on their size on a limited area, would be much better for some cases. There are a variety of CSS or JavaScript solutions out there on the net, but the most suitable for me was <a href=\"http://macyjs.com/\"><strong>Macy.js</strong></a> … and how I integrated it into my Hexo environment is what I want to describe here.</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Hexo","_id":"clmrqd9in003lkqox5afdfo51"},{"name":"GitHub","_id":"clmrqd9ir003vkqoxe7ayhr7l"},{"name":"Plugin","_id":"clmrqd9jk006akqoxf7r21zuh"}],"_path":"post/Image-Masonry-Tag-Plugin-for-Hexo/","_link":"https://kiko.io/post/Image-Masonry-Tag-Plugin-for-Hexo/","_id":"clmrqd9hg0035kqox7es30dyp"},{"title":"Integration of Pagefind in Hexo","date":"2023-01-19T12:24:00.000Z","description":"<p>From the beginning of this blog I wanted to provide some kind of full text search in order to give my users the ability to find stuff by keyword.</p>\n<p>There are a few Hexo plugins that have approached the subject, but it was not really satisfactory and performant. So I relied on the worlds biggest search engine: Google. A search button, which drives out a small input field and with the pressing of the ENTER key the form was sent via GET to <code>//google.com/search</code>.</p>\n<p><img src=\"/post/Integration-of-Pagefind-in-Hexo/google-site-search.png\" alt=\"Google Site Search on kiko.io\"></p>\n<p>The procedure was simple, but also burdened with the fact that I always expose my users to Google. At least until now … :)</p>\n<p><a href=\"https://mstdn.social/@BryceWrayTX\">Bryce Wray</a> set me on a new path with his post <a href=\"https://www.brycewray.com/posts/2022/12/sweeter-searches-pagefind/\">Sweeter searches with Pagefind</a>, in which he talks about his experience with the still fairly fresh tool <a href=\"https://pagefind.app/\"><strong>Pagefind</strong></a>…</p>\n\n    <div>\n        <blockquote><p>Pagefind is a fully static search library that aims to perform well on large sites, while using as little of your users’ bandwidth as possible, and without hosting any infrastructure …</p>\n</blockquote>\n        <cite><a href=\"https://pagefind.app/\">--- Liam Bigelow @ pagefind.app</a></cite>\n    </div>\n  \n\n<p>Pardon me? A full text search for SSG’s running completely in the browser? It sounded so great that I had to try it right away. And what can I say … it not only works fantastically well, but is also extremely easy to implement. Of course, you have to consider a few things, especially with regard to the SSG Hexo I use, but I didn’t find any big hurdles, also because the tool is so <a href=\"https://pageind.app/\">well documented</a>. Let’s see what my implementation looks like…</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Hexo","_id":"clmrqd9in003lkqox5afdfo51"},{"name":"Blogging","_id":"clmrqd9is003xkqox7tk5gifo"},{"name":"Search","_id":"clmrqd9lu00dqkqox67i0hku7"}],"_path":"post/Integration-of-Pagefind-in-Hexo/","_link":"https://kiko.io/post/Integration-of-Pagefind-in-Hexo/","_id":"clmrqd9hh0037kqoxhsbohcqz"},{"title":"Pagefind UI and URL Parameters","date":"2023-01-31T10:04:00.000Z","description":"<div class=\"alertbox alertbox-exclamation\">\n      <p><strong>UPDATE</strong>: Parts of the original post are outdated, as Pagefind <strong>DOES</strong> offer a way to preset a search string, which just hasn’t been documented yet … \\o&#x2F; … see below.</p>\n\n    </div>\n  \n\n<hr>\n<p>A couple of days ago I wrote about my attempt to <a href=\"/post/Integration-of-Pagefind-in-Hexo/\" title=\"Integration of Pagefind in Hexo\">integrate Pagefind in my blog</a>. In the meantime, I further refined the indexing by excluding more content areas and adding more for the metadata to make the search results even better.</p>\n<p>But one thing was still missing: controlling the search via url parameters, so that you can actually consider the page as a search page. I came across this in a post about the sense and nonsense of Open Graph attributes and other search engine related metadata nowadays. Google, for example, <a href=\"https://developers.google.com/search/docs/appearance/structured-data/intro-structured-data\">likes to use JSON-LD</a> and when describing the site you can define a search page which then makes it easier to search the site directly via Google … see <a href=\"https://developers.google.com/search/docs/appearance/structured-data/sitelinks-searchbox\">Sitelinks search box (WebSite) structured data</a></p>\n<p>In my implementation, I decided to adapt the <a href=\"https://pagefind.app/docs/ui/\">Pagefind UI</a> for myself instead of developing everything from scratch via JavaScript. There are always some limitations with pre-built solutions, but I want to show here that they are actually none for the inclusion of a url parameter.</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Hexo","_id":"clmrqd9in003lkqox5afdfo51"},{"name":"Blogging","_id":"clmrqd9is003xkqox7tk5gifo"},{"name":"Search","_id":"clmrqd9lu00dqkqox67i0hku7"}],"_path":"post/Pagefind-UI-and-URL-Parameters/","_link":"https://kiko.io/post/Pagefind-UI-and-URL-Parameters/","_id":"clmrqd9hi0039kqox4cdx29uj"},{"title":"Provide Blog Metadata via JSON-LD","date":"2023-02-09T23:00:00.000Z","description":"<p>Chris Coyier’s post “<a href=\"https://chriscoyier.net/2023/01/28/open-graph-blues/\">Open Graph Blues</a>“ got me thinking that my blog’s metadata, which are used by Google among others to index my pages, aren’t really at the cutting edge anymore. I took the markup of the individual elements of the pages via <a href=\"https://schema.org/\">schema.org</a> Microdata attributes from the standard Hexo template years ago and always adjusted it by value, but never questioned that there are more modern variants to provide the metadata.</p>\n<p>It’s Ok for Google to use Microdata attributes, but the HTML code of my templates is getting more and more opaque, because next to these stick to the tags also those for the Indieweb, classes for CSS and last but not least those for the own indexing via Pagefind. There becomes from a simple</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">article</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span>&gt;</span>Title of my latest blog post<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span> ... <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>quickly becomes a …</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">article</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;article-type-post h-entry&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">        <span class=\"attr\">data-pagefind-body</span>=<span class=\"string\">&quot;&quot;</span> <span class=\"attr\">data-pagefind-meta</span>=<span class=\"string\">&quot;type:Article&quot;</span> <span class=\"attr\">itemscope</span> <span class=\"attr\">itemprop</span>=<span class=\"string\">&quot;blogPost&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">h1</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;article-title p-name&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">itemprop</span>=<span class=\"string\">&quot;name&quot;</span>&gt;</span>Title of my latest blog post<span class=\"tag\">&lt;/<span class=\"name\">h1</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">p</span>&gt;</span> ... <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">article</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>Lots of textual overhead and the hardest part is maintaining it over the long term. Better would be a complete search engine description in the header of a page, where also the other meta information is available. In one place and not spread all over the HTML code. <strong>JSON-LD to the rescue</strong>…</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Hexo","_id":"clmrqd9in003lkqox5afdfo51"},{"name":"Search","_id":"clmrqd9lu00dqkqox67i0hku7"},{"name":"JSON-LD","_id":"clmrqd9lw00e0kqox0vw3drf9"}],"_path":"post/Provide-Blog-Metadata-via-JSON-LD/","_link":"https://kiko.io/post/Provide-Blog-Metadata-via-JSON-LD/","_id":"clmrqd9hj003bkqoxf34b68my"},{"title":"Radio Garden","date":"2023-02-01T23:00:00.000Z","description":"<p>In the age of streaming services, radio may seem out of date, but it still surrounds us constantly, even if we often hardly notice it - in the car, on the public transport, at work or simply at home in the kitchen. One strength of the old medium is that it presents us with music we haven’t heard before, away from our playlists on Spotify or iTunes.</p>\n<p>The easiest way to rediscover new artists or entire genres of music is to pick a radio station at random. It’s precisely this lack of control, the being at the mercy, the sometimes unpredictable that makes the medium so appealing to many - and with digital streaming, many of the world’s stations are just a tap away.</p>\n<p>As is so often the case in the modern world, it’s the oversupply that leaves some confused and frustrated. You first have to be able to pick out what you might like from the gigantic haystack of options. For this purpose, there are little helpers that more or less independently suggest what you might listen to. One of them stands out from the crowd because, on the one hand, it does not pursue commercial interests and, on the other hand, it approaches the station search very intuitively: <strong><a href=\"https://radio.garden/\">Radio Garden (https://radio.garden)</a></strong>.</p>","categories":[{"name":"Tools","_id":"clmrqd9io003mkqox10oe5zt0"}],"tags":[{"name":"Audio","_id":"clmrqd9jj0064kqoxbq0q1cdv"}],"_path":"post/Radio-Garden/","_link":"https://kiko.io/post/Radio-Garden/","_id":"clmrqd9hj003ckqoxh54r8lnl"}]}