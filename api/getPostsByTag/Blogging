{"type":"getPostsByTag","data":[{"title":"A New Blog: Blogging and Synching en route","date":"2019-09-30T22:00:00.000Z","description":"<p>I work with several devices, some Windows, some Android, and sometimes I have time to write on my articles at home (Notebook, Tablet), in my spare time in the office (Desktop, Laptop) or on my way to somewhere (Smartphone). Right now I’m am in a barber shop, waiting for my haircut and write these lines. So, wherever I am, I need the Hexo project locally, but in sync on a digital device.</p>\n<p>The blog is synced via Dropbox, but hosted on GitHub Pages, so on every device I need the  publishing functions of Git too.</p>","categories":[{"name":"Tools","_id":"clmj8j78c003lkcnagye6f72m"}],"tags":[{"name":"Hexo","_id":"clmj8j78c003kkcnahs3pf6j0"},{"name":"VS Code","_id":"clmj8j78f003qkcnagu2135qe"},{"name":"GitHub","_id":"clmj8j78h003ukcnabgvu4xic"},{"name":"Blogging","_id":"clmj8j78i003wkcna92gh8v3m"}],"_path":"post/A-New-Blog-Blogging-and-Synching-en-route/","_link":"https://kiko.io/post/A-New-Blog-Blogging-and-Synching-en-route/","_id":"clmj8j74m0007kcnahpouho4o"},{"title":"A New Blog: Customizing Hexo","date":"2019-09-25T10:00:00.000Z","description":"<p>Hexo is a great tool to get quick results (see <a href=\"/categories/Tools/A-New-Blog-VS-Code-Hexo-and-GitHub-Pages/\">Part One of this series</a>), when you decide to have a blog and its defaults are practical, but it’s power lies in the possiblities of customization via plugins. On the <a href=\"https://hexo.io/plugins/index.html\">official plugin page</a>, there are actually 302 plugins listed, but there are many more and no wish will be unsatisfied.</p>\n<p>I will show you which of these I found worth to work with…</p>","categories":[{"name":"Tools","_id":"clmj8j78c003lkcnagye6f72m"}],"tags":[{"name":"Hexo","_id":"clmj8j78c003kkcnahs3pf6j0"},{"name":"VS Code","_id":"clmj8j78f003qkcnagu2135qe"},{"name":"Blogging","_id":"clmj8j78i003wkcna92gh8v3m"}],"_path":"post/A-New-Blog-Customizing-Hexo/","_link":"https://kiko.io/post/A-New-Blog-Customizing-Hexo/","_id":"clmj8j74o0009kcnahf46e2mh"},{"title":"A New Blog: VS Code, Hexo and GitHub Pages","date":"2019-09-23T22:00:00.000Z","description":"<p>A few days ago I puzzled over a technical problem regarding SQL Server, Active Directory and Visual Studio Database Projects. With tips, hints and snippets from several websites I got it running and the solution was absolutely memorable. For myself and for others. Nothing is harder than to know ‘you did this before…’, but not to remember how.</p>\n<p>Because of this strong leaning towards oblivion, I started over 20 years ago my very first website <strong>zerbit.de</strong>, manually crafted with Classic ASP and a SQL Server database as backend, with an editor, tagging, categories and so on. It was really exciting to build this blog from scratch and writing articles for it, but it was so time consuming to expand the features of the website and keep it running, that some day I quit it silently.</p>\n<p>So, to document the solution mentioned above, I could use tools like OneNote or others, like in the past years, but this would be just for me and not for all developers, who have a similar problem. I felt it would be unfair to participate from the knowledge of others to get my solution and dont give something back.</p>\n<p>I decided to write an article just in HTML and publish it on my personal GitHub Page that I didn’t used so far. Ok, just Text … ugly. Just a little CSS and a little more structure and maybe I should do something with Vue JS … STOP … It would be better to pick one of the cool new static website generators based on Node.js, to detain myself from inventing the wheel again and save my time to write articles. So I did a little research and found <a href=\"https://hexo.io/\">HEXO</a> … Bingo! I can work with my favorite editor <a href=\"https://code.visualstudio.com/\">Visual Studio Code</a>, its all HTML, JavaScript and CSS, I can write my articles in Markdown and Hexo has a lot of helpers for stuff Markdown doesn’t provide, it produces static files and works only with files, therefore no need for a database … and it is well documented.</p>","categories":[{"name":"Tools","_id":"clmj8j78c003lkcnagye6f72m"}],"tags":[{"name":"Hexo","_id":"clmj8j78c003kkcnahs3pf6j0"},{"name":"VS Code","_id":"clmj8j78f003qkcnagu2135qe"},{"name":"GitHub","_id":"clmj8j78h003ukcnabgvu4xic"},{"name":"Blogging","_id":"clmj8j78i003wkcna92gh8v3m"}],"_path":"post/A-New-Blog-VS-Code-Hexo-and-GitHub-Pages/","_link":"https://kiko.io/post/A-New-Blog-VS-Code-Hexo-and-GitHub-Pages/","_id":"clmj8j74t000akcna7qa59c4h"},{"title":"Automatic Header Images in Hexo","date":"2020-06-22T15:49:16.000Z","description":"<p>Every article in this blog has an individual header image, to bring a little bit color into it. In this post I will show you how I deal with the images in using and automatic provisioning.</p>\n<p>For serving these pictures I use a static folder, as described in <a href=\"/categories/Tools/A-New-Blog-Customizing-Hexo/\">A New Blog: Customizing Hexo</a>. The hard work is done by the plugin <a href=\"https://github.com/niahoo/hexo-generator-copy\">Hexo Generator Copy</a>, which copies the static files into the <code>public_dir</code> while generating.</p>","categories":[{"name":"Tools","_id":"clmj8j78c003lkcnagye6f72m"}],"tags":[{"name":"Hexo","_id":"clmj8j78c003kkcnahs3pf6j0"},{"name":"Blogging","_id":"clmj8j78i003wkcna92gh8v3m"}],"_path":"post/Automatic-Header-Images-in-Hexo/","_link":"https://kiko.io/post/Automatic-Header-Images-in-Hexo/","_id":"clmj8j74y000hkcna66h84e50"},{"title":"Show related posts in Hexo","date":"2020-10-03T11:17:03.000Z","description":"<p>It is always nice to point the readers of your blog’s articles to related posts, they might be interested in. They stay a little longer to understand what you have to offer and increases the likelihood that they become loyal readers, followers or subscribers. Related posts has become a standard on delivering news and posts.</p>\n<p>In the default Hexo theme <strong>Landscape</strong>, on which this blog is based, there is no such function built in, but as the Hexo community is very busy, there are some plugins you can use.</p>","categories":[{"name":"Tools","_id":"clmj8j78c003lkcnagye6f72m"}],"tags":[{"name":"Hexo","_id":"clmj8j78c003kkcnahs3pf6j0"},{"name":"Blogging","_id":"clmj8j78i003wkcna92gh8v3m"}],"_path":"post/Show-related-posts-in-Hexo/","_link":"https://kiko.io/post/Show-related-posts-in-Hexo/","_id":"clmj8j75a000ykcna1hxoe9m8"},{"title":"Using GitHub as Commenting Platform","date":"2020-07-05T12:55:16.000Z","description":"<p>If you run a blog, it is always advisable to integrate a commenting system, in order to get feedback on your posts from your readers.</p>\n<p>So did I, when I start this blog and I decided to use the <a href=\"https://disqus.com/\">Disqus platform</a>, as it was very easy to integrate … but I always had a bad feeling about a third-party platform collecting data from my readers. Disqus is probably not without reason under criticism by many people in the community.</p>\n<p>As I host this blog at GitHub (see <a href=\"/categories/Tools/A-New-Blog-VS-Code-Hexo-and-GitHub-Pages/\">A New Blog (Part One): VS Code, Hexo and GitHub Pages</a>) I was looking for a solution to host the comments also on my prefered platform. There were some solutions, which uses GitHub Issues for this and wanted to implement something like that someday.</p>","categories":[{"name":"Tools","_id":"clmj8j78c003lkcnagye6f72m"}],"tags":[{"name":"Hexo","_id":"clmj8j78c003kkcnahs3pf6j0"},{"name":"GitHub","_id":"clmj8j78h003ukcnabgvu4xic"},{"name":"Blogging","_id":"clmj8j78i003wkcna92gh8v3m"}],"_path":"post/Using-GitHub-as-Commenting-Platform/","_link":"https://kiko.io/post/Using-GitHub-as-Commenting-Platform/","_id":"clmj8j75b0010kcna1lkrf05y"},{"title":"Generate Social Media Images Automatically","date":"2021-07-10T09:07:31.000Z","description":"<p>From day one of this blog I wanted to combine two of my passions: tech stuff and photography. All these photos I have shot myself in recent years and now they are representing my thoughts &amp; findings about digital technology. I wrote about my approach to provide these images in my post <a href=\"/post/Automatic-Header-Images-in-Hexo/\" title=\"Automatic Header Images in Hexo\">Automatic Header Images in Hexo</a>.</p>\n<p>When I share one of my posts on social media I provide the appropriate image as a visual anchor to my writing. The technique behind this are the <code>meta</code> tags in the HTML of my posts:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- Schema.org for Google --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">itemprop</span>=<span class=\"string\">&quot;image&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;https://kiko.io/photos/normal/DSC_6776.jpg&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- Open Graph --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;og:image&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;https://kiko.io/photos/normal/DSC_6776.jpg&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- Twitter --&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;twitter:card&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;summary_large_image&quot;</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">property</span>=<span class=\"string\">&quot;twitter:image&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;https://kiko.io/photos/normal/DSC_6776.jpg&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>There are several meta tags for different purposes regarding images. For more information see the links at the end of this post. To make a long story short: The sum of these approaches ensures that when an article is posted, the corresponding image is also displayed in the social media post.</p>\n<p>But … it’s only the image, without a visual reference to the post itself. In this article I want to show you how to combine the photo with some meta information of the post automatically, to get a <strong>Social Media Image</strong>.</p>\n<p><img src=\"/post/Generate-Social-Media-Images-Automatically/generation-flow.png\" alt=\"Generation Flow\"></p>","categories":[{"name":"JavaScript","_id":"clmj8j78g003rkcnaa7kb5ps4"}],"tags":[{"name":"Hexo","_id":"clmj8j78c003kkcnahs3pf6j0"},{"name":"GitHub","_id":"clmj8j78h003ukcnabgvu4xic"},{"name":"Blogging","_id":"clmj8j78i003wkcna92gh8v3m"},{"name":"Imaging","_id":"clmj8j7ak007xkcna6s9fd4j7"},{"name":"ES6","_id":"clmj8j7b6009hkcnae84tfo9w"}],"_path":"post/Generate-Social-Media-Images-Automatically/","_link":"https://kiko.io/post/Generate-Social-Media-Images-Automatically/","_id":"clmj8j75o001hkcnaek7f4k90"},{"title":"Hexo and the IndieWeb (Receiving Webmentions)","date":"2021-05-13T12:16:00.000Z","description":"<div class=\"alertbox alertbox-info\">\n      <p>This is part three of the splitted original post <a href=\"/post/Hexo-and-the-IndieWeb/\" title=\"Hexo and the IndieWeb\">Hexo and the IndieWeb</a>. Don’t miss Part 2 <a href=\"/post/Hexo-and-the-IndieWeb-Sending-Webmentions/\" title=\"Hexo and the IndieWeb (Sending Webmentions)\">Hexo and the IndieWeb (Sending Webmentions)</a> either.</p>\n\n    </div>\n  \n\n<hr>\n<p>A meaningful interaction has always two directions: sending and receiving. In this part of the post I want to show you how to receive Webmentions from other blogs participating in the IndieWeb.</p>\n<p>As Hexo is a SSG it generates static HTML pages. This has the advantage that the pages can be hosted just about anywhere (in my case <a href=\"https://pages.github.com/\">Github Pages</a>, but also the disadvantage of not having a real backend. Therefore, we need an external service that acts as an Webmention endpoint, where other people can send their webmentions.</p>\n<p><a href=\"https://aaronparecki.com/\">Aaron Parecki</a>, co-founder of the IndieWeb, has made a service called <a href=\"https://webmention.io/\"><strong>webmention.io</strong></a> we can use for free. It is able to convert old-fashioned Pingbacks to Webmentions, supports deleting of unwanted mentions, has a Blocklist for blocking domains, Webhooks for real-time processing and last but not least an API to get all your Webmentions per page or per site.</p>","categories":[{"name":"Tools","_id":"clmj8j78c003lkcnagye6f72m"}],"tags":[{"name":"Hexo","_id":"clmj8j78c003kkcnahs3pf6j0"},{"name":"Blogging","_id":"clmj8j78i003wkcna92gh8v3m"},{"name":"Publishing","_id":"clmj8j79q0067kcnagv3m1hm5"},{"name":"Share","_id":"clmj8j7ac007ckcnacztq0gc9"}],"_path":"post/Hexo-and-the-IndieWeb-Receiving-Webmentions/","_link":"https://kiko.io/post/Hexo-and-the-IndieWeb-Receiving-Webmentions/","_id":"clmj8j75s001lkcnacfz95yws"},{"title":"Hexo and the IndieWeb (Sending Webmentions)","date":"2021-05-08T17:39:43.000Z","description":"<div class=\"alertbox alertbox-info\">\n      <p>This is part two of a blog post that turned out to be a bit too long. Don’t miss Part 1: <a href=\"/post/Hexo-and-the-IndieWeb/\" title=\"Hexo and the IndieWeb\">Hexo and the IndieWeb</a> …</p>\n\n    </div>\n  \n\n<hr>\n<p>After you have created your new Hexo post with <code>hexo new post &quot;My Fancy Post&quot;</code> and spend a couple of minutes&#x2F;hours&#x2F;days on writing meaningful text, you publish it by running <code>hexo generate</code> and copying the generated HTML to your server.</p>\n<p>Next step would be to inform all the blogs you linked to in your now published post, that you have done just that. You want to send <strong>Webmentions</strong>.</p>\n<p>Good news: you don’t have to write your own solution to scan your article for external URL’s and sending Webmentions to their creators: <a href=\"https://remysharp.com/2019/06/18/send-outgoing-webmentions\">Remy Sharp has done that</a> already with his service <a href=\"https://webmention.app/\"><strong>webmention.app</strong></a>. It supports the long existing <a href=\"http://www.hixie.ch/specs/pingback/pingback\">Pingbacks</a> too and offers several ways to achieve your goal:</p>","categories":[{"name":"Tools","_id":"clmj8j78c003lkcnagye6f72m"}],"tags":[{"name":"Hexo","_id":"clmj8j78c003kkcnahs3pf6j0"},{"name":"Blogging","_id":"clmj8j78i003wkcna92gh8v3m"},{"name":"Publishing","_id":"clmj8j79q0067kcnagv3m1hm5"},{"name":"Share","_id":"clmj8j7ac007ckcnacztq0gc9"}],"_path":"post/Hexo-and-the-IndieWeb-Sending-Webmentions/","_link":"https://kiko.io/post/Hexo-and-the-IndieWeb-Sending-Webmentions/","_id":"clmj8j75t001mkcnahplt8tl0"},{"title":"Hexo and the IndieWeb","date":"2021-05-05T17:15:00.000Z","description":"<a href=\"https://news.indieweb.org/en\" class=\"u-syndication\" style=\"display:none;\">Posted on IndieNews</a>\n  \n\n<p>It is cool to publish your thoughts on your own blog under your only domain and not only on big social media platforms, because that way you keep control over your content. But what makes Facebook, Twitter and others “social” is the interaction between the people. Likes, Retweets, Mentions, Replies are the fuel which drives them. But most of the blogging solutions offers only rudimentary interactions, in form of article comments. The comment hurdle is high because interacting on someone else’s site is different from interacting on what is supposed to be your own, such as your Twitter or Facebook feed.</p>\n<p>The project <a href=\"https://indieweb.org/\"><strong>IndieWeb</strong></a> and their approach of <a href=\"https://indieweb.org/Webmention\"><strong>Webmentions</strong></a>, has the goal to fill this gap. As a <a href=\"https://www.w3.org/TR/webmention/\">W3C recommendation</a>, it defines standards how the social interaction of independent blogging solutions can be technically implemented without the need of manual intervention. Let software do the job…</p>\n<p>In this article I will only briefly go into the basics and then show an implementation solution for the SSG <a href=\"https://hexo.io/\"><strong>Hexo</strong></a>.</p>","categories":[{"name":"Tools","_id":"clmj8j78c003lkcnagye6f72m"}],"tags":[{"name":"Hexo","_id":"clmj8j78c003kkcnahs3pf6j0"},{"name":"Blogging","_id":"clmj8j78i003wkcna92gh8v3m"},{"name":"Publishing","_id":"clmj8j79q0067kcnagv3m1hm5"},{"name":"Share","_id":"clmj8j7ac007ckcnacztq0gc9"}],"_path":"post/Hexo-and-the-IndieWeb/","_link":"https://kiko.io/post/Hexo-and-the-IndieWeb/","_id":"clmj8j75u001nkcnaaqndbzk9"},{"title":"Pattern for dynamic Hexo pages","date":"2021-08-25T07:43:44.000Z","description":"<p><a href=\"https://hexo.io/\">Hexo</a> is a great SSG platform for blogging. Just write your Markdown beneath some Frontmatter meta data, run <code>hexo generate</code> and publish the results to a web server.</p>\n<p>But at some point you may want to process different data from internal or external sources and integrate it into your blog. Hexo doesn’t support this out of the box, but has a powerful feature called <a href=\"https://hexo.io/api/generator.html\">Generator</a>, which helps you to achieve your goal. The following is a sample and pattern of how to implement this.</p>\n<p>The starting point of my example is the requirement to display several elements of the same type on a dynamic page, but you can of course adapt the example according to your needs.</p>","categories":[{"name":"Tools","_id":"clmj8j78c003lkcnagye6f72m"}],"tags":[{"name":"Hexo","_id":"clmj8j78c003kkcnahs3pf6j0"},{"name":"Blogging","_id":"clmj8j78i003wkcna92gh8v3m"}],"_path":"post/Pattern-for-dynamic-Hexo-pages/","_link":"https://kiko.io/post/Pattern-for-dynamic-Hexo-pages/","_id":"clmj8j75w001rkcnachtgf2qv"},{"title":"Uups ... empty posts","date":"2021-09-21T11:40:25.000Z","description":"<p>A while ago I wrote about <a href=\"/post/Automatic-Duplicate-Image-Shadow/\" title=\"Automatic Duplicate Image Shadow\">Automatic Duplicate Image Shadow</a> and used <a href=\"https://indiepen.tech/\">indiepen</a> for showing the result of my efforts.</p>\n\n    <div class=\"alertbox alertbox-note\">\n      <p><strong><a href=\"https://indiepen.tech/\">indiepen</a></strong> is a solution for showing code samples without the need of a code sharing platform, like <a href=\"https://codepen.io/\">codepen</a>. Just reference a <code>index.html</code>, <code>main.js</code> and <code>styles.css</code> from wherever you want and indiepen is wrapping it with a neat viewer inside an IFrame.</p>\n\n    </div>\n  \n\n<p>I did it quick and dirty first (sample files in a static folder) and now it was the time to do it right: place the sample files in a subfolder of the post in my Hexo-driven blog solution, in order to reference it from there AND have the possibility to call it directly via <code>./post/my-post/sample</code>.</p>\n<p>The key to achive that in Hexo is the configuration option <code>post_asset_folder: true</code>, which generates a subfolder for all assets with the same name as the post.</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|- _posts</span><br><span class=\"line\">   |- my-blog-post</span><br><span class=\"line\">      |- my-first-asset.jpg</span><br><span class=\"line\">      |- my-second-asset.jpg</span><br><span class=\"line\">   |- my-blog-post.md</span><br></pre></td></tr></table></figure>\n\n<p>My idea regarding the indiepen files was having a subfolder for each indiepen in the post asset folder:</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">|- _posts</span><br><span class=\"line\">   |- my-blog-post</span><br><span class=\"line\">      |- my-first-asset.jpg</span><br><span class=\"line\">      |- my-second-asset.jpg</span><br><span class=\"line\">NEW   |- sample</span><br><span class=\"line\">NEW      |- index.html</span><br><span class=\"line\">NEW      |- main.js</span><br><span class=\"line\">NEW      |- styles.css</span><br><span class=\"line\">   |- my-blog-post.md</span><br></pre></td></tr></table></figure>\n\n<p>Run <code>hexo generate</code>, check that the indiepen was showing up properly and I thought I was done. Wrong … after commiting my changes to Github, where my blog is living, and checking my RSS feed a while after, I saw this:</p>\n<p><img src=\"/post/Uups-empty-posts/feed-empty-posts.png\" alt=\"Empty posts in feedly\"></p>\n<p>Three empty posts…!?</p>","categories":[{"name":"Tools","_id":"clmj8j78c003lkcnagye6f72m"}],"tags":[{"name":"Hexo","_id":"clmj8j78c003kkcnahs3pf6j0"},{"name":"Blogging","_id":"clmj8j78i003wkcna92gh8v3m"}],"_path":"post/Uups-empty-posts/","_link":"https://kiko.io/post/Uups-empty-posts/","_id":"clmj8j7640025kcna25xl7dxl"},{"title":"The State of the Blog","date":"2022-12-23T21:40:00.000Z","description":"<p>I’ve started this blog in 2019 with <a href=\"/post/How-To-Visual-Studio-Database-Project-and-ADSI/\" title=\"How-To: Visual Studio Database Project and ADSI\">this article</a> primarily because I needed an area to record things learned for myself, with the side effect that others can benefit from it if they want.</p>\n<p>Why my choice fell on the static site generator <a href=\"https://hexo.io/\">Hexo</a>, I no longer know, but I have now become accustomed (even to the shortcomings) and so far I have been able to implement all my ideas in it … and I had a few of them.</p>\n<p>In this post I would like to share a few experiences I have had with Hexo, regarding the main functionality and the things I’ve customized and describe my workflow behind the individual features of my blog. The latter is not as straightforward as I would like it to be, especially because I have different devices in use that require different approaches. The main purpose of this post is to simply write down for me, how things currently work on kiko.io and to have one or the other idea how to do it better while writing. Doing this publicly is in the hope that you might read this and have a terrific idea that I haven’t come up with yet and leave a comment or webmention … :)</p>","categories":[{"name":"Tools","_id":"clmj8j78c003lkcnagye6f72m"}],"tags":[{"name":"Hexo","_id":"clmj8j78c003kkcnahs3pf6j0"},{"name":"Blogging","_id":"clmj8j78i003wkcna92gh8v3m"}],"_path":"post/The-State-of-the-Blog/","_link":"https://kiko.io/post/The-State-of-the-Blog/","_id":"clmj8j76j002tkcna3bzo8gw9"},{"title":"Integration of Pagefind in Hexo","date":"2023-01-19T12:24:00.000Z","description":"<p>From the beginning of this blog I wanted to provide some kind of full text search in order to give my users the ability to find stuff by keyword.</p>\n<p>There are a few Hexo plugins that have approached the subject, but it was not really satisfactory and performant. So I relied on the worlds biggest search engine: Google. A search button, which drives out a small input field and with the pressing of the ENTER key the form was sent via GET to <code>//google.com/search</code>.</p>\n<p><img src=\"/post/Integration-of-Pagefind-in-Hexo/google-site-search.png\" alt=\"Google Site Search on kiko.io\"></p>\n<p>The procedure was simple, but also burdened with the fact that I always expose my users to Google. At least until now … :)</p>\n<p><a href=\"https://mstdn.social/@BryceWrayTX\">Bryce Wray</a> set me on a new path with his post <a href=\"https://www.brycewray.com/posts/2022/12/sweeter-searches-pagefind/\">Sweeter searches with Pagefind</a>, in which he talks about his experience with the still fairly fresh tool <a href=\"https://pagefind.app/\"><strong>Pagefind</strong></a>…</p>\n\n    <div>\n        <blockquote><p>Pagefind is a fully static search library that aims to perform well on large sites, while using as little of your users’ bandwidth as possible, and without hosting any infrastructure …</p>\n</blockquote>\n        <cite><a href=\"https://pagefind.app/\">--- Liam Bigelow @ pagefind.app</a></cite>\n    </div>\n  \n\n<p>Pardon me? A full text search for SSG’s running completely in the browser? It sounded so great that I had to try it right away. And what can I say … it not only works fantastically well, but is also extremely easy to implement. Of course, you have to consider a few things, especially with regard to the SSG Hexo I use, but I didn’t find any big hurdles, also because the tool is so <a href=\"https://pageind.app/\">well documented</a>. Let’s see what my implementation looks like…</p>","categories":[{"name":"Tools","_id":"clmj8j78c003lkcnagye6f72m"}],"tags":[{"name":"Hexo","_id":"clmj8j78c003kkcnahs3pf6j0"},{"name":"Blogging","_id":"clmj8j78i003wkcna92gh8v3m"},{"name":"Search","_id":"clmj8j7cy00dmkcna7bi401zo"}],"_path":"post/Integration-of-Pagefind-in-Hexo/","_link":"https://kiko.io/post/Integration-of-Pagefind-in-Hexo/","_id":"clmj8j76q0036kcnaeyr3dyjh"},{"title":"Pagefind UI and URL Parameters","date":"2023-01-31T10:04:00.000Z","description":"<div class=\"alertbox alertbox-exclamation\">\n      <p><strong>UPDATE</strong>: Parts of the original post are outdated, as Pagefind <strong>DOES</strong> offer a way to preset a search string, which just hasn’t been documented yet … \\o&#x2F; … see below.</p>\n\n    </div>\n  \n\n<hr>\n<p>A couple of days ago I wrote about my attempt to <a href=\"/post/Integration-of-Pagefind-in-Hexo/\" title=\"Integration of Pagefind in Hexo\">integrate Pagefind in my blog</a>. In the meantime, I further refined the indexing by excluding more content areas and adding more for the metadata to make the search results even better.</p>\n<p>But one thing was still missing: controlling the search via url parameters, so that you can actually consider the page as a search page. I came across this in a post about the sense and nonsense of Open Graph attributes and other search engine related metadata nowadays. Google, for example, <a href=\"https://developers.google.com/search/docs/appearance/structured-data/intro-structured-data\">likes to use JSON-LD</a> and when describing the site you can define a search page which then makes it easier to search the site directly via Google … see <a href=\"https://developers.google.com/search/docs/appearance/structured-data/sitelinks-searchbox\">Sitelinks search box (WebSite) structured data</a></p>\n<p>In my implementation, I decided to adapt the <a href=\"https://pagefind.app/docs/ui/\">Pagefind UI</a> for myself instead of developing everything from scratch via JavaScript. There are always some limitations with pre-built solutions, but I want to show here that they are actually none for the inclusion of a url parameter.</p>","categories":[{"name":"Tools","_id":"clmj8j78c003lkcnagye6f72m"}],"tags":[{"name":"Hexo","_id":"clmj8j78c003kkcnahs3pf6j0"},{"name":"Blogging","_id":"clmj8j78i003wkcna92gh8v3m"},{"name":"Search","_id":"clmj8j7cy00dmkcna7bi401zo"}],"_path":"post/Pagefind-UI-and-URL-Parameters/","_link":"https://kiko.io/post/Pagefind-UI-and-URL-Parameters/","_id":"clmj8j76r0038kcnac0v06gtr"}]}