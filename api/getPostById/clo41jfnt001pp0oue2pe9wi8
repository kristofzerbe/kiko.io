{"type":"getPostById","data":{"title":"How to prevent duplicate events","date":"2021-01-07T16:22:25.000Z","description":"<p>I’m working on a new web app that contains a sliding out panel with some additional information on the selected element. This panel can be closed by the user via the ESC key. The implementation on initializing the panel seems very straight forward:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Panel</span>() &#123;</span><br><span class=\"line\">  <span class=\"title function_\">init</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;keydown&quot;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(event.<span class=\"property\">key</span> === <span class=\"string\">&quot;Escape&quot;</span>)&#123;</span><br><span class=\"line\">        <span class=\"comment\">//close the panel</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Problem is: the panel, which is part of the basic HTML, will be initialized with its content and functionality in a ES6 class. So … on every init, another event listener is added.</p>\n<p>You can easily figure that out, by calling <code>getEventListeners(document)</code> in the Chrome DevTools:</p>\n<p><img src=\"/post/How-to-prevent-duplicate-events/chromedevtools-multiple-listeners.png\" alt=\"Chrome DevTools: Multiple Event Listeners\"></p>","categories":[{"name":"JavaScript","_id":"clo41jfqc0041p0ouh6lwgodv"}],"tags":[{"name":"Events","_id":"clo41jfta00aup0oua50f0kzf"}],"content":"<p>I’m working on a new web app that contains a sliding out panel with some additional information on the selected element. This panel can be closed by the user via the ESC key. The implementation on initializing the panel seems very straight forward:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Panel</span>() &#123;</span><br><span class=\"line\">  <span class=\"title function_\">init</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;keydown&quot;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(event.<span class=\"property\">key</span> === <span class=\"string\">&quot;Escape&quot;</span>)&#123;</span><br><span class=\"line\">        <span class=\"comment\">//close the panel</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Problem is: the panel, which is part of the basic HTML, will be initialized with its content and functionality in a ES6 class. So … on every init, another event listener is added.</p>\n<p>You can easily figure that out, by calling <code>getEventListeners(document)</code> in the Chrome DevTools:</p>\n<p><img src=\"/post/How-to-prevent-duplicate-events/chromedevtools-multiple-listeners.png\" alt=\"Chrome DevTools: Multiple Event Listeners\"></p>\n<span id=\"more\"></span>\n\n<p>As there is no way in JS to find and replace the event which was previously added, we have to remove the existing event by using <code>removeEventListener</code> and add it again. Most important parameter on removing is the instance of the event handler, which was used the add the event previously.</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Panel</span>() &#123;</span><br><span class=\"line\">  <span class=\"title function_\">init</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">onEscapeKey</span> (event) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(event.<span class=\"property\">key</span> === <span class=\"string\">&quot;Escape&quot;</span>)&#123;</span><br><span class=\"line\">        <span class=\"comment\">//close the panel</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">removeEventListener</span>(<span class=\"string\">&quot;keydown&quot;</span>, onEscapeKey);</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;keydown&quot;</span>, onEscapeKey);</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>But … as the handler <code>onEscapeKey</code> is defined in a class, every time a new instance of the class is created, the handler will be not the same as the previous one! We have to store the event handler globally…</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Panel</span>() &#123;</span><br><span class=\"line\">  <span class=\"title function_\">init</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">removeEventListener</span>(<span class=\"string\">&quot;keydown&quot;</span>, <span class=\"variable language_\">window</span>.<span class=\"property\">panelEscapeKeyHandler</span>);</span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"property\">panelEscapeKeyHandler</span> = <span class=\"keyword\">function</span> <span class=\"title function_\">onEscapeKey</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span>(event.<span class=\"property\">key</span> === <span class=\"string\">&quot;Escape&quot;</span>)&#123;</span><br><span class=\"line\">        <span class=\"comment\">//close the panel</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&quot;keydown&quot;</span>, <span class=\"variable language_\">window</span>.<span class=\"property\">panelEscapeKeyHandler</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>Works!</p>\n<p><img src=\"/post/How-to-prevent-duplicate-events/chromedevtools-one-listener.png\" alt=\"Chrome DevTools: One Event Listener\"></p>\n","_path":"post/How-to-prevent-duplicate-events/","_link":"https://kiko.io/post/How-to-prevent-duplicate-events/","_id":"clo41jfnt001pp0oue2pe9wi8"}}