{"type":"getPostById","data":{"title":"Pagefind UI and URL Parameters","date":"2023-01-31T10:04:00.000Z","description":"<div class=\"alertbox alertbox-exclamation\">\n      <p><strong>UPDATE</strong>: Parts of the original post are outdated, as Pagefind <strong>DOES</strong> offer a way to preset a search string, which just hasn’t been documented yet … \\o&#x2F; … see below.</p>\n\n    </div>\n  \n\n<hr>\n<p>A couple of days ago I wrote about my attempt to <a href=\"/post/Integration-of-Pagefind-in-Hexo/\" title=\"Integration of Pagefind in Hexo\">integrate Pagefind in my blog</a>. In the meantime, I further refined the indexing by excluding more content areas and adding more for the metadata to make the search results even better.</p>\n<p>But one thing was still missing: controlling the search via url parameters, so that you can actually consider the page as a search page. I came across this in a post about the sense and nonsense of Open Graph attributes and other search engine related metadata nowadays. Google, for example, <a href=\"https://developers.google.com/search/docs/appearance/structured-data/intro-structured-data\">likes to use JSON-LD</a> and when describing the site you can define a search page which then makes it easier to search the site directly via Google … see <a href=\"https://developers.google.com/search/docs/appearance/structured-data/sitelinks-searchbox\">Sitelinks search box (WebSite) structured data</a></p>\n<p>In my implementation, I decided to adapt the <a href=\"https://pagefind.app/docs/ui/\">Pagefind UI</a> for myself instead of developing everything from scratch via JavaScript. There are always some limitations with pre-built solutions, but I want to show here that they are actually none for the inclusion of a url parameter.</p>","categories":[{"name":"Tools","_id":"clmb1082q0029kbow3usf6suz"}],"tags":[{"name":"Hexo","_id":"clmb1082p0026kbowcgwu0ny7"},{"name":"Blogging","_id":"clmb10835002vkbow36j60sqp"},{"name":"Search","_id":"clmb1088000bzkbowej8c45vb"}],"content":"\n    <div class=\"alertbox alertbox-exclamation\">\n      <p><strong>UPDATE</strong>: Parts of the original post are outdated, as Pagefind <strong>DOES</strong> offer a way to preset a search string, which just hasn’t been documented yet … \\o&#x2F; … see below.</p>\n\n    </div>\n  \n\n<hr>\n<p>A couple of days ago I wrote about my attempt to <a href=\"/post/Integration-of-Pagefind-in-Hexo/\" title=\"Integration of Pagefind in Hexo\">integrate Pagefind in my blog</a>. In the meantime, I further refined the indexing by excluding more content areas and adding more for the metadata to make the search results even better.</p>\n<p>But one thing was still missing: controlling the search via url parameters, so that you can actually consider the page as a search page. I came across this in a post about the sense and nonsense of Open Graph attributes and other search engine related metadata nowadays. Google, for example, <a href=\"https://developers.google.com/search/docs/appearance/structured-data/intro-structured-data\">likes to use JSON-LD</a> and when describing the site you can define a search page which then makes it easier to search the site directly via Google … see <a href=\"https://developers.google.com/search/docs/appearance/structured-data/sitelinks-searchbox\">Sitelinks search box (WebSite) structured data</a></p>\n<p>In my implementation, I decided to adapt the <a href=\"https://pagefind.app/docs/ui/\">Pagefind UI</a> for myself instead of developing everything from scratch via JavaScript. There are always some limitations with pre-built solutions, but I want to show here that they are actually none for the inclusion of a url parameter.</p>\n<span id=\"more\"></span>\n\n<p>My Pagefind search page is accessible at <a href=\"/search\">&#x2F;search</a> and therefore it’s easy to provide with parameters, f.e. <code>/search/?q=test</code>. Retrieving them on the page via JavaScript is no rocket science either:</p>\n<figure class=\"highlight js\"><figcaption><span>Search Page</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// get value search parameter</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> queryString = <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">search</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> urlParams = <span class=\"keyword\">new</span> <span class=\"title class_\">URLSearchParams</span>(queryString);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> searchString = urlParams.<span class=\"title function_\">get</span>(<span class=\"string\">&quot;q&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// initialize Pagefind UI</span></span><br><span class=\"line\">  <span class=\"variable language_\">window</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;DOMContentLoaded&#x27;</span>, <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">new</span> <span class=\"title class_\">PagefindUI</span>(&#123; <span class=\"attr\">element</span>: <span class=\"string\">&quot;#search&quot;</span> &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p style=\"text-decoration: line-through;\">\nNow Pagefind does not offer the possibility to initialize the search on the page already with a certain value, which would be the easiest way. You can only insert the value supplied via the URL parameter into the initialized INPUT field **afterwards** and ensure that the search is triggered with it.\n</p>\n\n<p style=\"text-decoration: line-through;\">\nUnfortunately, Pagefind also does not provide a callback method to do things after successful initialization. So, my implementation needs a \"guard\" that kicks in as soon as the INPUT field is ready for a search string to be entered. For this I use the following small function called ``waitForElm``, which uses JS's ``MutationAbserver`` and is located in my *tools.js* file. It triggers a Promise as soon as an element is available on the page.\n</p>\n\n<p><strong>Update</strong></p>\n<p>As I learned after creating an <a href=\"https://github.com/CloudCannon/pagefind/issues/214\">issue (#214)</a> in Pagefind’s GitHub repo, there IS a way to preset the incoming search string by using the method <code>triggerSearch</code>, but as Liam pointed out it is not yet documented.</p>\n<p>But I still need the following function called <code>waitForElm</code> to set the <strong>focus</strong> into the created INPUT … but there is also an existing <a href=\"https://github.com/CloudCannon/pagefind/issues/121\">issue (#121)</a> for this focus feature, so let’s see how long I need the function at all.</p>\n<figure class=\"highlight js\"><figcaption><span>tools.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">waitForElm</span>(<span class=\"params\">selector</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Promise</span>(<span class=\"function\">(<span class=\"params\">resolve</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(selector)) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"title function_\">resolve</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(selector));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> observer = <span class=\"keyword\">new</span> <span class=\"title class_\">MutationObserver</span>(<span class=\"function\">(<span class=\"params\">mutations</span>) =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(selector)) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">resolve</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(selector));</span><br><span class=\"line\">        observer.<span class=\"title function_\">disconnect</span>();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    observer.<span class=\"title function_\">observe</span>(<span class=\"variable language_\">document</span>.<span class=\"property\">body</span>, &#123;</span><br><span class=\"line\">      <span class=\"attr\">childList</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      <span class=\"attr\">subtree</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p style=\"text-decoration: line-through;\">\nWith this function and the name of the INPUT field that Pagefind inserts into the ``#search`` wrapper during initialization, the URL parameter can now be set.\n</p>\n<p style=\"text-decoration: line-through;\">\nSince Pagefind already shows results when typing the first characters, the easiest way to trigger the search after setting the value is by dispatching the ``input`` event.\n</p>\n\n<p>Lets see how to implement Pagefind’s <code>triggerSearch</code> function, which is automatically delayed until the search is loaded and ready, if there is an incoming search string:</p>\n<figure class=\"highlight js\"><figcaption><span>Search Page</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// get value search parameter</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> queryString = <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">search</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> urlParams = <span class=\"keyword\">new</span> <span class=\"title class_\">URLSearchParams</span>(queryString);</span><br><span class=\"line\">  <span class=\"keyword\">const</span> searchString = urlParams.<span class=\"title function_\">get</span>(<span class=\"string\">&quot;q&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// initialize Pagefind UI</span></span><br><span class=\"line\">  <span class=\"variable language_\">window</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;DOMContentLoaded&#x27;</span>, <span class=\"function\">(<span class=\"params\">event</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> pagefind = <span class=\"keyword\">new</span> <span class=\"title class_\">PagefindUI</span>(&#123; <span class=\"attr\">element</span>: <span class=\"string\">&quot;#search&quot;</span> &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (searchString) &#123; </span><br><span class=\"line\">      pagefind.<span class=\"title function_\">triggerSearch</span>(searchString);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// setting the focus into the generated INPUT field as it appears</span></span><br><span class=\"line\">  <span class=\"title function_\">waitForElm</span>(<span class=\"string\">&quot;.pagefind-ui__search-input&quot;</span>).<span class=\"title function_\">then</span>(<span class=\"function\">(<span class=\"params\">elm</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    elm.<span class=\"title function_\">focus</span>();</span><br><span class=\"line\">  &#125;);  </span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>You can try my solution here: <strong><a href=\"/search/?q=pagefind\">&#x2F;search&#x2F;?q&#x3D;pagefind</a></strong></p>\n","_path":"post/Pagefind-UI-and-URL-Parameters/","_link":"https://kiko.io/post/Pagefind-UI-and-URL-Parameters/","_id":"clmb10849004fkbowgrgc867z"}}