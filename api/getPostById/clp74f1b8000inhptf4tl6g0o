{"type":"getPostById","data":{"title":"Automatic Header Images in Hexo","date":"2020-06-22T15:49:16.000Z","description":"<p>Every article in this blog has an individual header image, to bring a little bit color into it. In this post I will show you how I deal with the images in using and automatic provisioning.</p>\n<p>For serving these pictures I use a static folder, as described in <a href=\"/categories/Tools/A-New-Blog-Customizing-Hexo/\">A New Blog: Customizing Hexo</a>. The hard work is done by the plugin <a href=\"https://github.com/niahoo/hexo-generator-copy\">Hexo Generator Copy</a>, which copies the static files into the <code>public_dir</code> while generating.</p>","categories":[{"name":"Tools","_id":"clp74f1dp0041nhptf6xk5skg"}],"tags":[{"name":"Hexo","_id":"clp74f1do003ynhpt0z2kbdyy"},{"name":"Blogging","_id":"clp74f1ds004cnhpt1cqidmql"}],"content":"<p>Every article in this blog has an individual header image, to bring a little bit color into it. In this post I will show you how I deal with the images in using and automatic provisioning.</p>\n<p>For serving these pictures I use a static folder, as described in <a href=\"/categories/Tools/A-New-Blog-Customizing-Hexo/\">A New Blog: Customizing Hexo</a>. The hard work is done by the plugin <a href=\"https://github.com/niahoo/hexo-generator-copy\">Hexo Generator Copy</a>, which copies the static files into the <code>public_dir</code> while generating.</p>\n<span id=\"more\"></span>\n\n<h2 id=\"Static-File-Structure\"><a href=\"#Static-File-Structure\" class=\"headerlink\" title=\"Static File Structure\"></a>Static File Structure</h2><p>It is always advisable to provide one image for every device class, in order to save bandwidth and make the page loading as fast as possible:</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">| static/</span><br><span class=\"line\">   | photos/</span><br><span class=\"line\">      | mobile/</span><br><span class=\"line\">         | my-lovely-picture.jpg</span><br><span class=\"line\">         | ...</span><br><span class=\"line\">      | tablet/</span><br><span class=\"line\">         | my-lovely-picture.jpg</span><br><span class=\"line\">         | ...</span><br><span class=\"line\">      | normal/</span><br><span class=\"line\">         | my-lovely-picture.jpg</span><br><span class=\"line\">         | ...</span><br></pre></td></tr></table></figure>\n\n<p>The <code>mobile</code> images are at least 480 pixels wide, the <code>tablet</code> variants 768 pixels and the standard or <code>normal</code> one 1280 pixels.</p>\n<p>While creating the JPG files, it is important to compress them with a tool like <a href=\"https://www.jpegmini.com/\">JPEGMini</a> to save data while loading.</p>\n<h2 id=\"Binding\"><a href=\"#Binding\" class=\"headerlink\" title=\"Binding\"></a>Binding</h2><p>In order to bind a picture with some additional information to an article, I have extended the Frontmatter of every post:</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">photograph:</span></span><br><span class=\"line\">    <span class=\"attr\">file:</span> <span class=\"string\">&#x27;my-lovely-image.jpg&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">name:</span> <span class=\"string\">&#x27;My Lovely Image&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">link:</span> <span class=\"string\">&#x27;https://500px.com/photo/123456789/My-Lovely-Image&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Usage-in-Theme\"><a href=\"#Usage-in-Theme\" class=\"headerlink\" title=\"Usage in Theme\"></a>Usage in Theme</h2><p>It relies on your Hexo theme, how to use a header image. In my theme (derived from the standard theme) I just added following code in the <code>article.js</code> to show the individual header image as a background image at the top of the article: </p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;% if (!index &amp;&amp; post.photograph)&#123; %&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"selector-id\">#banner</span> &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"attribute\">background-size</span>: cover;</span></span><br><span class=\"line\"><span class=\"language-css\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (<span class=\"attribute\">max-width</span>: <span class=\"number\">479px</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"selector-id\">#banner</span> &#123; <span class=\"attribute\">background-image</span>:</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"built_in\">linear-gradient</span>(to bottom, <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0.75</span>) <span class=\"number\">0%</span>, <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>) <span class=\"number\">75%</span>),</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"built_in\">url</span>(<span class=\"string\">&quot;/photos/mobile/&lt;%= post.photograph.file %&gt;&quot;</span>); &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (<span class=\"attribute\">min-width</span>: <span class=\"number\">480px</span>) <span class=\"keyword\">and</span> (<span class=\"attribute\">max-width</span>: <span class=\"number\">767px</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"selector-id\">#banner</span> &#123; <span class=\"attribute\">background-image</span>: </span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"built_in\">linear-gradient</span>(to bottom, <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0.75</span>) <span class=\"number\">0%</span>, <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>) <span class=\"number\">75%</span>),</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"built_in\">url</span>(<span class=\"string\">&quot;/photos/tablet/&lt;%= post.photograph.file %&gt;&quot;</span>); &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">  <span class=\"keyword\">@media</span> screen <span class=\"keyword\">and</span> (<span class=\"attribute\">min-width</span>: <span class=\"number\">768px</span>) &#123;</span></span><br><span class=\"line\"><span class=\"language-css\">    <span class=\"selector-id\">#banner</span> &#123; <span class=\"attribute\">background-image</span>: </span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"built_in\">linear-gradient</span>(to bottom, <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0.75</span>) <span class=\"number\">0%</span>, <span class=\"built_in\">rgba</span>(<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>,<span class=\"number\">0</span>) <span class=\"number\">75%</span>),</span></span><br><span class=\"line\"><span class=\"language-css\">      <span class=\"built_in\">url</span>(<span class=\"string\">&quot;/photos/normal/&lt;%= post.photograph.file %&gt;&quot;</span>); &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">  &#125;</span></span><br><span class=\"line\"><span class=\"language-css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">  <span class=\"keyword\">var</span> photoLink = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;header-photo-link&quot;</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">  photoLink.<span class=\"property\">href</span> = <span class=\"string\">&quot;&lt;%= post.photograph.link%&gt;&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">  photoLink.<span class=\"property\">innerHTML</span> = <span class=\"string\">&quot;see &lt;strong&gt;&lt;%= post.photograph.name%&gt;&lt;/strong&gt; at 500px&quot;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>\n\n<p>Important part here is the use of the Frontmatter data <code>post.photograph.file</code> in the URL of the background CSS. The script fills the additional information into the absolute positioned element <code>header-photo-link</code> which is placed on top of the header.</p>\n<h2 id=\"Pooling-Images\"><a href=\"#Pooling-Images\" class=\"headerlink\" title=\"Pooling Images\"></a>Pooling Images</h2><p>As it is time consuming to generate the necessary images, I have created another static folder <code>pool</code> to store prepared files and a text file with the additional information about the image. The structure of <code>pool</code> is different to <code>photos</code>, because of my image workflow and some limitations of automating the provisioning.</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">| static/</span><br><span class=\"line\">   | pool/</span><br><span class=\"line\">      | my-lovely-picture/</span><br><span class=\"line\">         | meta.txt</span><br><span class=\"line\">         | mobile.jpg</span><br><span class=\"line\">         | normal.jpg</span><br><span class=\"line\">         | tablet.jpg</span><br><span class=\"line\">      | ...</span><br></pre></td></tr></table></figure>\n<p>The <code>meta.txt</code> is a simple text file with two lines of text: first the name of the image and second the Url to link to, which will be inserted in the appropriate Frontmatter fields on creating a new post:</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">My Lovely Image</span><br><span class=\"line\">https://500px.com/photo/123456789/My-Lovely-Image</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Automate-binding-and-provisioning-on-new-post\"><a href=\"#Automate-binding-and-provisioning-on-new-post\" class=\"headerlink\" title=\"Automate binding and provisioning on new post\"></a>Automate binding and provisioning on new post</h2><p>Developers are lazy and I do not make an exception. Having all these pool images and the meta informations, it would be nice, if Hexo just picks and processes one of the pool folders automatically, when I’m creating a new post by calling <code>hexo new &quot;My shiny new post&quot;</code> … and it was easier then I thought.</p>\n<h3 id=\"Where-to-place-the-code-for-the-automatism\"><a href=\"#Where-to-place-the-code-for-the-automatism\" class=\"headerlink\" title=\"Where to place the code for the automatism\"></a>Where to place the code for the automatism</h3><p>Hexo has a great <a href=\"https://hexo.io/api/\">API</a> to write <a href=\"https://hexo.io/plugins/\">plugins</a> and it is not very difficult to setup a new plugin for this, which can be published to the <a href=\"https://www.npmjs.com/search?q=hexo\">NPM registry</a>. But it is also possible to extend Hexo’s functionality by using a simple script. All you need is a <strong><code>script</code></strong> folder in the root of your Hexo project. Any JS files which is placed there, will be executed by Hexo.</p>\n<p>Therefore, lets use a script called <code>\\scripts\\process-photo-on-new.js</code> …</p>\n<h3 id=\"Things-an-automatism-should-do-Step-by-Step\"><a href=\"#Things-an-automatism-should-do-Step-by-Step\" class=\"headerlink\" title=\"Things an automatism should do - Step by Step\"></a>Things an automatism should do - Step by Step</h3><ol>\n<li>Hook into the creation of a post</li>\n<li>Pick randomly one of the pool images</li>\n<li>Place the content of the meta.txt in the Frontmatter</li>\n<li>Move the 3 device-dependend images into the <code>photos</code> folder</li>\n</ol>\n<h4 id=\"Step-1-Hook-into-the-creation-of-a-post\"><a href=\"#Step-1-Hook-into-the-creation-of-a-post\" class=\"headerlink\" title=\"Step 1 - Hook into the creation of a post\"></a>Step 1 - Hook into the creation of a post</h4><p>The needed event, the automatism can hook on, is:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;new&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">data</span>)&#123;</span><br><span class=\"line\">  <span class=\"comment\">//</span></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>It will be executed every time you call the <code>hexo new</code> command. The parameter <code>data</code> is an object with two fields:</p>\n<ul>\n<li><p><code>path</code><br>Full path to the MD file of the new post</p>\n</li>\n<li><p><code>content</code><br>Complete content of the scaffold (template), which Hexo has used to create the new post; default is <code>/scaffolds/post.md</code>.</p>\n</li>\n</ul>\n<p>By preloading the Hexo Front matter library and parsing <code>data.content</code> we get access to the definition of the new post:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> front = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;hexo-front-matter&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;new&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">post</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// parse article content</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> post = front.<span class=\"title function_\">parse</span>(data.<span class=\"property\">content</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Step-2-Pick-randomly-one-of-the-pool-images\"><a href=\"#Step-2-Pick-randomly-one-of-the-pool-images\" class=\"headerlink\" title=\"Step 2 - Pick randomly one of the pool images\"></a>Step 2 - Pick randomly one of the pool images</h4><p>There are some build-in variables to get the full path, for example, of the <code>source</code> folder, we can use to define the needed paths to the <code>pool</code> and the <code>photo</code> folder.</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> front = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;hexo-front-matter&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;new&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">post</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> post = front.<span class=\"title function_\">parse</span>(data.<span class=\"property\">content</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// set the path variables</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> poolDir = hexo.<span class=\"property\">source_dir</span>.<span class=\"title function_\">replace</span>(<span class=\"string\">&quot;\\source&quot;</span>, hexo.<span class=\"property\">config</span>.<span class=\"property\">static_dir</span>) + <span class=\"string\">&quot;pool&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> photosDir = hexo.<span class=\"property\">source_dir</span>.<span class=\"title function_\">replace</span>(<span class=\"string\">&quot;\\source&quot;</span>, hexo.<span class=\"property\">config</span>.<span class=\"property\">static_dir</span>) + <span class=\"string\">&quot;photos&quot;</span>;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>Next, we need to preload the Hexo FS library for file access, to list the content of the <code>poolDir</code>, including the subfolders, and filter out the meta files. Out of the resulting array we pick one randomly, to use for the new post:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> front = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;hexo-front-matter&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;hexo-fs&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;new&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">post</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> post = front.<span class=\"title function_\">parse</span>(data.<span class=\"property\">content</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> poolDir = hexo.<span class=\"property\">source_dir</span>.<span class=\"title function_\">replace</span>(<span class=\"string\">&quot;\\source&quot;</span>, hexo.<span class=\"property\">config</span>.<span class=\"property\">static_dir</span>) + <span class=\"string\">&quot;pool&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> photosDir = hexo.<span class=\"property\">source_dir</span>.<span class=\"title function_\">replace</span>(<span class=\"string\">&quot;\\source&quot;</span>, hexo.<span class=\"property\">config</span>.<span class=\"property\">static_dir</span>) + <span class=\"string\">&quot;photos&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// list all files</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> files = fs.<span class=\"title function_\">listDirSync</span>(poolDir);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// filter the list to get meta files of each subfolder</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> metaFiles = files.<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">file</span> =&gt;</span> file.<span class=\"title function_\">match</span>(<span class=\"regexp\">/.*[\\\\]meta.txt/g</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// pick one randomly</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> metaFile = metaFiles[<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * metaFiles.<span class=\"property\">length</span>)];</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// get the name of the picked photo (foldername)</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> photoName = metaFile.<span class=\"title function_\">split</span>(<span class=\"string\">&quot;\\\\&quot;</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Step-3-Place-the-content-of-the-meta-txt-in-the-Frontmatter\"><a href=\"#Step-3-Place-the-content-of-the-meta-txt-in-the-Frontmatter\" class=\"headerlink\" title=\"Step 3 - Place the content of the meta.txt in the Frontmatter\"></a>Step 3 - Place the content of the meta.txt in the Frontmatter</h4><p>Now we have to read the meta file, place the data in the Frontmatter and save the article file:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> front = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;hexo-front-matter&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;hexo-fs&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;new&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">post</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> post = front.<span class=\"title function_\">parse</span>(data.<span class=\"property\">content</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> poolDir = hexo.<span class=\"property\">source_dir</span>.<span class=\"title function_\">replace</span>(<span class=\"string\">&quot;\\source&quot;</span>, hexo.<span class=\"property\">config</span>.<span class=\"property\">static_dir</span>) + <span class=\"string\">&quot;pool&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> photosDir = hexo.<span class=\"property\">source_dir</span>.<span class=\"title function_\">replace</span>(<span class=\"string\">&quot;\\source&quot;</span>, hexo.<span class=\"property\">config</span>.<span class=\"property\">static_dir</span>) + <span class=\"string\">&quot;photos&quot;</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">var</span> files = fs.<span class=\"title function_\">listDirSync</span>(poolDir);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> metaFiles = files.<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">file</span> =&gt;</span> file.<span class=\"title function_\">match</span>(<span class=\"regexp\">/.*[\\\\]meta.txt/g</span>));</span><br><span class=\"line\">  <span class=\"keyword\">var</span> metaFile = metaFiles[<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * metaFiles.<span class=\"property\">length</span>)];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> photoName = metaFile.<span class=\"title function_\">split</span>(<span class=\"string\">&quot;\\\\&quot;</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// read meta file</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> meta = fs.<span class=\"title function_\">readFileSync</span>(poolDir + <span class=\"string\">&quot;\\\\&quot;</span> + metaFile);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> metas = meta.<span class=\"title function_\">split</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// place file and additional info in the Frontmatter</span></span><br><span class=\"line\">  post.<span class=\"property\">photograph</span>.<span class=\"property\">file</span> = photoName + <span class=\"string\">&quot;.jpg&quot;</span>;</span><br><span class=\"line\">  post.<span class=\"property\">photograph</span>.<span class=\"property\">name</span> = metas[<span class=\"number\">0</span>];</span><br><span class=\"line\">  post.<span class=\"property\">photograph</span>.<span class=\"property\">link</span> = metas[<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// convert content back</span></span><br><span class=\"line\">  postStr = front.<span class=\"title function_\">stringify</span>(post);</span><br><span class=\"line\">  postStr = <span class=\"string\">&#x27;---\\n&#x27;</span> + postStr;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// store article</span></span><br><span class=\"line\">  fs.<span class=\"title function_\">writeFile</span>(data.<span class=\"property\">path</span>, postStr, <span class=\"string\">&#x27;utf-8&#x27;</span>);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"Step-4-Move-the-3-device-dependend-images-into-the-photos-folder\"><a href=\"#Step-4-Move-the-3-device-dependend-images-into-the-photos-folder\" class=\"headerlink\" title=\"Step 4 - Move the 3 device-dependend images into the photos folder\"></a>Step 4 - Move the 3 device-dependend images into the photos folder</h4><p>Last but not least, we have to move the pool images into the <code>photos</code> folder and remove the pool folder with all its processed content:</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> front = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;hexo-front-matter&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;hexo-fs&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;new&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">post</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> post = front.<span class=\"title function_\">parse</span>(data.<span class=\"property\">content</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> poolDir = hexo.<span class=\"property\">source_dir</span>.<span class=\"title function_\">replace</span>(<span class=\"string\">&quot;\\source&quot;</span>, hexo.<span class=\"property\">config</span>.<span class=\"property\">static_dir</span>) + <span class=\"string\">&quot;pool&quot;</span>;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> photosDir = hexo.<span class=\"property\">source_dir</span>.<span class=\"title function_\">replace</span>(<span class=\"string\">&quot;\\source&quot;</span>, hexo.<span class=\"property\">config</span>.<span class=\"property\">static_dir</span>) + <span class=\"string\">&quot;photos&quot;</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"keyword\">var</span> files = fs.<span class=\"title function_\">listDirSync</span>(poolDir);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> metaFiles = files.<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">file</span> =&gt;</span> file.<span class=\"title function_\">match</span>(<span class=\"regexp\">/.*[\\\\]meta.txt/g</span>));</span><br><span class=\"line\">  <span class=\"keyword\">var</span> metaFile = metaFiles[<span class=\"title class_\">Math</span>.<span class=\"title function_\">floor</span>(<span class=\"title class_\">Math</span>.<span class=\"title function_\">random</span>() * metaFiles.<span class=\"property\">length</span>)];</span><br><span class=\"line\">  <span class=\"keyword\">var</span> photoName = metaFile.<span class=\"title function_\">split</span>(<span class=\"string\">&quot;\\\\&quot;</span>)[<span class=\"number\">0</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">var</span> meta = fs.<span class=\"title function_\">readFileSync</span>(poolDir + <span class=\"string\">&quot;\\\\&quot;</span> + metaFile);</span><br><span class=\"line\">  <span class=\"keyword\">var</span> metas = meta.<span class=\"title function_\">split</span>(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  post.<span class=\"property\">photograph</span>.<span class=\"property\">file</span> = photoName + <span class=\"string\">&quot;.jpg&quot;</span>;</span><br><span class=\"line\">  post.<span class=\"property\">photograph</span>.<span class=\"property\">name</span> = metas[<span class=\"number\">0</span>];</span><br><span class=\"line\">  post.<span class=\"property\">photograph</span>.<span class=\"property\">link</span> = metas[<span class=\"number\">1</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">  postStr = front.<span class=\"title function_\">stringify</span>(post);</span><br><span class=\"line\">  postStr = <span class=\"string\">&#x27;---\\n&#x27;</span> + postStr;</span><br><span class=\"line\"></span><br><span class=\"line\">  fs.<span class=\"title function_\">writeFile</span>(data.<span class=\"property\">path</span>, postStr, <span class=\"string\">&#x27;utf-8&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">//copy normal image</span></span><br><span class=\"line\">  fs.<span class=\"title function_\">copyFile</span>(</span><br><span class=\"line\">    poolDir + <span class=\"string\">&quot;\\\\&quot;</span> + photoName + <span class=\"string\">&quot;\\\\normal.jpg&quot;</span>,</span><br><span class=\"line\">    photosDir + <span class=\"string\">&quot;\\\\normal\\\\&quot;</span> + photoName + <span class=\"string\">&quot;.jpg&quot;</span>,</span><br><span class=\"line\">    <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">//copy tablet image</span></span><br><span class=\"line\">      fs.<span class=\"title function_\">copyFile</span>(</span><br><span class=\"line\">        poolDir + <span class=\"string\">&quot;\\\\&quot;</span> + photoName + <span class=\"string\">&quot;\\\\tablet.jpg&quot;</span>,</span><br><span class=\"line\">        photosDir + <span class=\"string\">&quot;\\\\tablet\\\\&quot;</span> + photoName + <span class=\"string\">&quot;.jpg&quot;</span>,</span><br><span class=\"line\">        <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">          <span class=\"comment\">//copy mobile image</span></span><br><span class=\"line\">          fs.<span class=\"title function_\">copyFile</span>(</span><br><span class=\"line\">            poolDir + <span class=\"string\">&quot;\\\\&quot;</span> + photoName + <span class=\"string\">&quot;\\\\mobile.jpg&quot;</span>,</span><br><span class=\"line\">            photosDir + <span class=\"string\">&quot;\\\\mobile\\\\&quot;</span> + photoName + <span class=\"string\">&quot;.jpg&quot;</span>,</span><br><span class=\"line\">            <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">              <span class=\"comment\">//remove processed pool folder</span></span><br><span class=\"line\">              fs.<span class=\"title function_\">rmdirSync</span>(poolDir + <span class=\"string\">&quot;\\\\&quot;</span> + photoName);</span><br><span class=\"line\">            &#125;);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>Now it so easy to write a new post, because almost everything is set and I can concentrate on the article. Also, it is a nice surprise to see, which photo the script has chosen. The only thing I have to do from time to time, is to refill the pool folder with new images.</p>\n","_path":"post/Automatic-Header-Images-in-Hexo/","_link":"https://kiko.io/post/Automatic-Header-Images-in-Hexo/","_id":"clp74f1b8000inhptf4tl6g0o"}}