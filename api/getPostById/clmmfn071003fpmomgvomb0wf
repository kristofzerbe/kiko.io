{"type":"getPostById","data":{"title":"Show pages meta data (JSON-LD) in Bottom Sheet","date":"2023-06-11T12:11:45.000Z","description":"<p>A few months ago I introduced new meta data (JSON-LD) for the pages of this blog and also <a href=\"/post/Provide-Blog-Metadata-via-JSON-LD/\" title=\"Provide Blog Metadata via JSON-LD\">wrote about my implementation</a>. Works also everything quite well … only the verification of the generated data was a bit cumbersome:</p>\n<ol>\n<li>Open DevTools for a page in Chrome.</li>\n<li>Search in the HEAD of the source code for the included script (“application&#x2F;ld+json”)</li>\n<li>Copy out JSON-LD code</li>\n<li>Format JSON into VS code … and check</li>\n</ol>\n<p>Nothing for now and simply impossible on the smartphone, even if there would be a reasonable Chrome extension for displaying JSON-LD data, but it does not exist (yet). Another problem was that I use automatically generated Socal Media images for my articles, which are included in the JSON-LD, but do not appear anywhere in the page and thus were beyond my control. I simply wanted to display all the generated stuff.</p>\n<p>Since I’ve been a fan of the so-called bottom sheets since the first version of Google’s Material Design, I imagined a script that grabs the code embedded in the page and pushes a panel with all the data visualized there into the page from the bottom … and the whole act was easier than I thought.</p>","categories":[{"name":"UI/UX","_id":"clmmfn07l003ipmom8oog75i7"}],"tags":[{"name":"Publishing","_id":"clmmfn0960068pmom7n7legcl"},{"name":"Meta","_id":"clmmfn0bp00d6pmom5w1i48ja"},{"name":"JSON-LD","_id":"clmmfn0c000e0pmom9etq2kft"}],"content":"<p>A few months ago I introduced new meta data (JSON-LD) for the pages of this blog and also <a href=\"/post/Provide-Blog-Metadata-via-JSON-LD/\" title=\"Provide Blog Metadata via JSON-LD\">wrote about my implementation</a>. Works also everything quite well … only the verification of the generated data was a bit cumbersome:</p>\n<ol>\n<li>Open DevTools for a page in Chrome.</li>\n<li>Search in the HEAD of the source code for the included script (“application&#x2F;ld+json”)</li>\n<li>Copy out JSON-LD code</li>\n<li>Format JSON into VS code … and check</li>\n</ol>\n<p>Nothing for now and simply impossible on the smartphone, even if there would be a reasonable Chrome extension for displaying JSON-LD data, but it does not exist (yet). Another problem was that I use automatically generated Socal Media images for my articles, which are included in the JSON-LD, but do not appear anywhere in the page and thus were beyond my control. I simply wanted to display all the generated stuff.</p>\n<p>Since I’ve been a fan of the so-called bottom sheets since the first version of Google’s Material Design, I imagined a script that grabs the code embedded in the page and pushes a panel with all the data visualized there into the page from the bottom … and the whole act was easier than I thought.</p>\n<span id=\"more\"></span>\n\n<hr>\n<h2 id=\"The-Bottom-Sheet-Component\"><a href=\"#The-Bottom-Sheet-Component\" class=\"headerlink\" title=\"The Bottom Sheet Component\"></a>The Bottom Sheet Component</h2><p>Recently I stumbled across a small but nice bottom sheet script that is based on jQuery but that I still use on this blog itself: <a href=\"https://downuppopupjs.dincerali.com/\"><strong>downupPopup.js</strong></a> by <a href=\"https://dincerali.com/\">Ali Dinçer</a>. It has several settings and is just about 5 KB in size, if you add the CSS code. What’s nice about it is, that all the animations that make such a component stand out, are based on said CSS and are not jQuery-driven.</p>\n<p>The bottom sheet is based on a base HTML element with a required child element:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;myElement1&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;downupPopup-content&quot;</span>&gt;</span></span><br><span class=\"line\">    Lorem ipsum dolor sit amet...</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>This is first initialized with the desired settings, with the script adding the necessary inline styles, and then you can open and close it:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">&quot;#myElement1&quot;</span>).<span class=\"title function_\">downupPopup</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">$(<span class=\"string\">&quot;#myElement1&quot;</span>).<span class=\"title function_\">downupPopup</span>(<span class=\"string\">&#x27;open&#x27;</span>);</span><br><span class=\"line\">$(<span class=\"string\">&quot;#myElement1&quot;</span>).<span class=\"title function_\">downupPopup</span>(<span class=\"string\">&#x27;close&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>Now my solution should work on-the-fly and without a previously defined element in the HTML … and it should be reusable, because if I already include a bottom sheet component, then I wanted to use it for future occasions. For this I wrote myself a small manager that makes different uses possible with a single call.</p>\n<p>It has one function each for a specific bottom sheet dialog and beside it base variables and functions (<code>base</code>) to keep the infrastructure code of the former as small as possible:</p>\n<figure class=\"highlight js\"><figcaption><span>dialog.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> dpDialog = &#123;</span><br><span class=\"line\">  <span class=\"string\">&#x27;base&#x27;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;element&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;content&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;options&#x27;</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">animation</span>: <span class=\"string\">&quot;ease&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">duration</span>: <span class=\"number\">400</span>,</span><br><span class=\"line\">      <span class=\"attr\">radiusLeft</span>: <span class=\"string\">&quot;6px&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">radiusRight</span>: <span class=\"string\">&quot;6px&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">width</span>: <span class=\"string\">&quot;100%&quot;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">&#x27;init&#x27;</span>: <span class=\"keyword\">function</span>(<span class=\"params\">options</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> opt = &#123;...dpDialog.<span class=\"property\">base</span>.<span class=\"property\">options</span>, ...options&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> ($(<span class=\"string\">&quot;#dpElement&quot;</span>).<span class=\"property\">length</span> === <span class=\"number\">0</span>) &#123; </span><br><span class=\"line\">        <span class=\"comment\">// create new</span></span><br><span class=\"line\">        dpDialog.<span class=\"property\">base</span>.<span class=\"property\">element</span> = $(<span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">          &lt;div id=&quot;dpElement&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;div class=&quot;downupPopup-content&quot;&gt;&lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;/div&gt;`</span>);</span><br><span class=\"line\">          dpDialog.<span class=\"property\">base</span>.<span class=\"property\">element</span>.<span class=\"title function_\">appendTo</span>(<span class=\"string\">&quot;body&quot;</span>);</span><br><span class=\"line\">          dpDialog.<span class=\"property\">base</span>.<span class=\"property\">content</span> = dpDialog.<span class=\"property\">base</span>.<span class=\"property\">element</span>.<span class=\"title function_\">find</span>(<span class=\"string\">&quot;.downupPopup-content&quot;</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123; <span class=\"comment\">// reset existing</span></span><br><span class=\"line\">        dpDialog.<span class=\"property\">base</span>.<span class=\"property\">element</span>.<span class=\"title function_\">downupPopup</span>(<span class=\"string\">&quot;close&quot;</span>);</span><br><span class=\"line\">        dpDialog.<span class=\"property\">base</span>.<span class=\"property\">content</span>.<span class=\"title function_\">empty</span>();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      dpDialog.<span class=\"property\">base</span>.<span class=\"property\">element</span>.<span class=\"title function_\">downupPopup</span>(opt);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">&#x27;show&#x27;</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        dpDialog.<span class=\"property\">base</span>.<span class=\"property\">element</span>.<span class=\"title function_\">downupPopup</span>(<span class=\"string\">&quot;open&quot;</span>);</span><br><span class=\"line\">      &#125;, <span class=\"number\">100</span>);  </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">&#x27;myFirstTest&#x27;</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// INIT DIALOG</span></span><br><span class=\"line\">    dpDialog.<span class=\"property\">base</span>.<span class=\"title function_\">init</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">headerText</span>: <span class=\"string\">&quot;Test&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">distance</span>: <span class=\"number\">75</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ADD CONTENT</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> content = <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">      &lt;section&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;p&gt;Lorem ipsum dolor sit amet...&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;/section&gt;</span></span><br><span class=\"line\"><span class=\"string\">    `</span>;</span><br><span class=\"line\">    $(content).<span class=\"title function_\">appendTo</span>(dpDialog.<span class=\"property\">base</span>.<span class=\"property\">content</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// OPEN DIALOG</span></span><br><span class=\"line\">    dpDialog.<span class=\"property\">base</span>.<span class=\"title function_\">show</span>();</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">&#x27;pageMeta&#x27;</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// INIT DIALOG</span></span><br><span class=\"line\">    dpDialog.<span class=\"property\">base</span>.<span class=\"title function_\">init</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">headerText</span>: <span class=\"string\">&quot;Page Meta&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">contentScroll</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      <span class=\"attr\">distance</span>: <span class=\"number\">6</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ADD CONTENT</span></span><br><span class=\"line\">    <span class=\"comment\">// ... appending stuff to dpDialog.base.content</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// OPEN DIALOG</span></span><br><span class=\"line\">    dpDialog.<span class=\"property\">base</span>.<span class=\"title function_\">show</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">dialog</span> = dpDialog; <span class=\"comment\">// make it globally available</span></span><br></pre></td></tr></table></figure>\n\n<p>The base <code>init</code> function takes care of initializing the downupPopup component, including dynamically inserting the necessary HTML element and attaching the desired settings. <code>show</code> opens up the dialog, with a small time delay, to ensure that the content has already been inserted.<br>Dialog functions in the example above are: <code>myFirstTest</code> and <code>pageMeta</code>.</p>\n<p>Calling one of the dialog functions is simple:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:dpDialog.myFirstTest()&quot;</span>&gt;</span>Open Test Dialog<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>Try here: <a href=\"javascript:dpDialog.myFirstTest()\">Open Test Dialog</a></p>\n<h3 id=\"Problem-with-the-original-implementation-solved\"><a href=\"#Problem-with-the-original-implementation-solved\" class=\"headerlink\" title=\"Problem with the original implementation solved\"></a>Problem with the original implementation solved</h3><p>Ali decided in his original implementation to apply the given settings only once to a popup element. Once initialized, it could not be reused with different settings. To avoid having to destroy an existing element before initializing a new one, which would have caused a massive timing problem due to the animation, I decided to fork his code and give him a <a href=\"https://github.com/ali-dincer/downupPopup.js/pull/2\">pull request</a>.</p>\n<p>You can find my script here, as long as Ali didn’t include the PR in his code: <a href=\"https://github.com/kristofzerbe/downupPopup.js\">kristofzerbe&#x2F;downupPopup.js</a></p>\n<hr>\n<h2 id=\"The-PageMeta-Dialog\"><a href=\"#The-PageMeta-Dialog\" class=\"headerlink\" title=\"The PageMeta Dialog\"></a>The PageMeta Dialog</h2><p>Now that I had my desired display option, it was time to bring the <code>pageMeta</code> dialog function to life.</p>\n<p>My first thought was to use a JSON-LD parser in JavaScript provided by <a href=\"https://json-ld.org/\"><strong>json-ld.org</strong></a>, but this is not even quickly usable, since it validates the code to be parsed at runtime against schema.org and every of my calls failed with CORS warnings. Now I didn’t want to turn this into a PhD thesis, I just wanted to display my highly customized JSON-LD, so I worked out the function quite individually.</p>\n<h3 id=\"The-Code-Itself\"><a href=\"#The-Code-Itself\" class=\"headerlink\" title=\"The Code Itself\"></a>The Code Itself</h3><p>I wanted to show two things in the dialog: the code itself and a visual representation of it for a better overview.</p>\n<p>Getting the content for the code was really straight forward:</p>\n<figure class=\"highlight js\"><figcaption><span>dialog.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">  <span class=\"string\">&#x27;pageMeta&#x27;</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// INIT DIALOG</span></span><br><span class=\"line\">    dpDialog.<span class=\"property\">base</span>.<span class=\"title function_\">init</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">headerText</span>: <span class=\"string\">&quot;Page Meta&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">contentScroll</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      <span class=\"attr\">distance</span>: <span class=\"number\">6</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ADD CONTENT</span></span><br><span class=\"line\">    <span class=\"comment\">// Grab the JSON-LD code from the page</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> json = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>($(<span class=\"string\">&#x27;script[type=&quot;application/ld+json&quot;]&#x27;</span>).<span class=\"title function_\">text</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Create new dialog section for the code</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> secCode = $(<span class=\"string\">&#x27;&lt;section&gt;&lt;/section&gt;&#x27;</span>).<span class=\"title function_\">appendTo</span>(dpDialog.<span class=\"property\">base</span>.<span class=\"property\">content</span>);</span><br><span class=\"line\">    <span class=\"comment\">// Append header</span></span><br><span class=\"line\">    secCode.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;&lt;h1&gt;JSON-LD&lt;/h1&gt;&#x27;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// Append formatted code als PRE element</span></span><br><span class=\"line\">    secCode.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;&lt;pre class=&quot;json&quot;&gt;&#x27;</span> + <span class=\"title function_\">syntaxHighlight</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(json, <span class=\"literal\">undefined</span>, <span class=\"number\">2</span>))) + <span class=\"string\">&#x27;&lt;/pre&gt;&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// OPEN DIALOG</span></span><br><span class=\"line\">    dpDialog.<span class=\"property\">base</span>.<span class=\"title function_\">show</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p>Since I had taken care to compress my JSON-LD code to save space, I now needed to get it back into a readable format. Time saver was the following script, which I found on <a href=\"https://stackoverflow.com/questions/4810841/pretty-print-json-using-javascript\">StackOverflow (pretty-print JSON using JavaScript)</a>:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">syntaxHighlight</span>(<span class=\"params\">json</span>) &#123;</span><br><span class=\"line\">  json = json.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/&amp;/g</span>, <span class=\"string\">&#x27;&amp;amp;&#x27;</span>).<span class=\"title function_\">replace</span>(<span class=\"regexp\">/&lt;/g</span>, <span class=\"string\">&#x27;&amp;lt;&#x27;</span>).<span class=\"title function_\">replace</span>(<span class=\"regexp\">/&gt;/g</span>, <span class=\"string\">&#x27;&amp;gt;&#x27;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> json.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/(&quot;(\\\\u[a-zA-Z0-9]&#123;4&#125;|\\\\[^u]|[^\\\\&quot;])*&quot;(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g</span>, <span class=\"keyword\">function</span> (<span class=\"params\">match</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> cls = <span class=\"string\">&#x27;number&#x27;</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"regexp\">/^&quot;/</span>.<span class=\"title function_\">test</span>(match)) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (<span class=\"regexp\">/:$/</span>.<span class=\"title function_\">test</span>(match)) &#123;</span><br><span class=\"line\">              cls = <span class=\"string\">&#x27;key&#x27;</span>;</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              cls = <span class=\"string\">&#x27;string&#x27;</span>;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"regexp\">/true|false/</span>.<span class=\"title function_\">test</span>(match)) &#123;</span><br><span class=\"line\">          cls = <span class=\"string\">&#x27;boolean&#x27;</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"regexp\">/null/</span>.<span class=\"title function_\">test</span>(match)) &#123;</span><br><span class=\"line\">          cls = <span class=\"string\">&#x27;null&#x27;</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&lt;span class=&quot;&#x27;</span> + cls + <span class=\"string\">&#x27;&quot;&gt;&#x27;</span> + match + <span class=\"string\">&#x27;&lt;/span&gt;&#x27;</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight css\"><figcaption><span>(Stylus format)</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pre<span class=\"selector-class\">.json</span></span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">&#x27;Roboto Mono&#x27;</span>,monospace</span><br><span class=\"line\">  font-size: <span class=\"number\">13px</span></span><br><span class=\"line\">  .string </span><br><span class=\"line\">    color: <span class=\"number\">#4271ae</span></span><br><span class=\"line\">  .number </span><br><span class=\"line\">    color: <span class=\"number\">#4271ae</span></span><br><span class=\"line\">  .boolean </span><br><span class=\"line\">    color: <span class=\"number\">#4271ae</span></span><br><span class=\"line\">  .null</span><br><span class=\"line\">    color: <span class=\"number\">#ababab</span></span><br><span class=\"line\">  .key</span><br><span class=\"line\">    color: <span class=\"number\">#c15353</span></span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"The-Visual-Representation\"><a href=\"#The-Visual-Representation\" class=\"headerlink\" title=\"The Visual Representation\"></a>The Visual Representation</h3><p>My JSON-LD is hierarchically structured. Each page always has a <code>PERSON</code> block for information about me as a person, then an <code>ORGANIZATION</code> block about the “people” behind the blog (just me), then a <code>WEBSITE</code> block for the description of the website itself and a <code>WEBPAGE</code> block for a single page. Article pages like this, also have an <code>ARTICLE</code> block and the note pages have a <code>BLOGPOSTING</code> block.</p>\n<p>Therefore, it seemed logical to me to display the blocks as an accordion using the DETAILS element, with only the first one open at startup.</p>\n<p>To process the required HTML, I wrote a helper function for each block that returns a string literal template to which the calling code passes the necessary data.</p>\n<p>To save space, only one block is included in the example below. The others work similarly. </p>\n\n    <div class=\"alertbox alertbox-info\">\n      <p>You can see the complete code here and modify it for your purposes: <a href=\"https://github.com/kristofzerbe/kiko.io/blob/master/themes/landscape/source/js/dialog.js\"><strong>dialog.js</strong> of the blog kiko.io</a>.</p>\n\n    </div>\n  \n\n<figure class=\"highlight js\"><figcaption><span>dialog.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">  <span class=\"string\">&#x27;pageMeta&#x27;</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// INIT DIALOG</span></span><br><span class=\"line\">    dpDialog.<span class=\"property\">base</span>.<span class=\"title function_\">init</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">headerText</span>: <span class=\"string\">&quot;Page Meta&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">contentScroll</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      <span class=\"attr\">distance</span>: <span class=\"number\">6</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ADD CONTENT</span></span><br><span class=\"line\">    <span class=\"comment\">// Grab the JSON-LD code from the page</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> json = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>($(<span class=\"string\">&#x27;script[type=&quot;application/ld+json&quot;]&#x27;</span>).<span class=\"title function_\">text</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Create new dialog section for the visual representation</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> secVisual = $(<span class=\"string\">&#x27;&lt;section&gt;&lt;/section&gt;&#x27;</span>).<span class=\"title function_\">appendTo</span>(dpDialog.<span class=\"property\">base</span>.<span class=\"property\">content</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ... other blocks for the visual representation </span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Block WEBSITE</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">getWebSite</span>(<span class=\"params\">website, organization</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">        &lt;details&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;summary&gt;WebSite&lt;/summary&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;div&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;label&gt;Name&lt;/label&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;p&gt;<span class=\"subst\">$&#123;website.name&#125;</span>&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;label&gt;Description&lt;/label&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;p&gt;<span class=\"subst\">$&#123;website.description&#125;</span>&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;label&gt;Language&lt;/label&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;p&gt;<span class=\"subst\">$&#123;website.inLanguage&#125;</span>&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;label&gt;Publisher&lt;/label&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;p&gt;<span class=\"subst\">$&#123;organization.name&#125;</span>&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;/details&gt;</span></span><br><span class=\"line\"><span class=\"string\">      `</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Get WebSite block from JSON</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> jWebSite = json[<span class=\"string\">&quot;@graph&quot;</span>].<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">x</span> =&gt;</span> x[<span class=\"string\">&quot;@type&quot;</span>] === <span class=\"string\">&quot;WebSite&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// Get referenced Publisher information (Organization)</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> jPublisher = json[<span class=\"string\">&quot;@graph&quot;</span>].<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">x</span> =&gt;</span> x[<span class=\"string\">&quot;@id&quot;</span>] === jWebSite[<span class=\"number\">0</span>].<span class=\"property\">publisher</span>[<span class=\"string\">&quot;@id&quot;</span>]);</span><br><span class=\"line\">    <span class=\"comment\">// Get filled HTML from template helper function above</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> tWebSite = <span class=\"title function_\">getWebSite</span>(jWebSite[<span class=\"number\">0</span>], jPublisher[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    <span class=\"comment\">// Append HTML to content</span></span><br><span class=\"line\">    secVisual.<span class=\"title function_\">append</span>($(tWebSite));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ... other blocks for the visual representation </span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ... (Code stuff from above)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// OPEN DIALOG</span></span><br><span class=\"line\">    dpDialog.<span class=\"property\">base</span>.<span class=\"title function_\">show</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h2><p>It was fun to add a new feature to the site, even more so because it helps me keep track of the meta data of each page myself.</p>\n<p>Here (or in the footer of each page) you can see the result:</p>\n<p><a href=\"javascript:dpDialog.pageMeta();\"><strong>Open Page Meta for this article…</strong></a></p>\n<hr>\n<h2 id=\"More-Information\"><a href=\"#More-Information\" class=\"headerlink\" title=\"More Information\"></a>More Information</h2>\n        <ul class=\"moreinfo-list\">\n            <li>Ali Dinçer: <a href=\"https://downuppopupjs.dincerali.com/\">downupPopup.js</a></li><li>Kristof Zerbe: <a href=\"https://github.com/kristofzerbe/downupPopup.js\">Fork from downupPopup.js (Make Popup Reusable, with PR)</a></li><li>Google: <a href=\"https://m3.material.io/components/bottom-sheets/overview\">Material Design 3 - Compontents, Bottom Sheets</a></li>\n        </ul>\n    ","_path":"post/Show-pages-meta-data-JSON-LD-in-Bottom-Sheet/","_link":"https://kiko.io/post/Show-pages-meta-data-JSON-LD-in-Bottom-Sheet/","_id":"clmmfn071003fpmomgvomb0wf"}}