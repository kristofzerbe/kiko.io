{"type":"getPostById","data":{"title":"Native JavaScript Multilanguage Templating","date":"2021-02-24T12:31:58.000Z","description":"<p>In the project I’m currently working on, I faced the “problem” to integrate multilanguage support, but due to the fact that the new app should be written in vanilla JS, without any plugins, libraries or other dependencies, I had to develop my own localization layer. In this article I want to show you my approach on this…</p>","categories":[{"name":"JavaScript","_id":"clmmdc8x8003sjfopb893h500"}],"tags":[{"name":"Localization","_id":"clmmdc8ym006xjfop4h1iecyt"},{"name":"ES6","_id":"clmmdc8zf009ijfop02xc5fi3"},{"name":"Templating","_id":"clmmdc8zu00aijfop1l9c5k5d"}],"content":"<p>In the project I’m currently working on, I faced the “problem” to integrate multilanguage support, but due to the fact that the new app should be written in vanilla JS, without any plugins, libraries or other dependencies, I had to develop my own localization layer. In this article I want to show you my approach on this…</p>\n<span id=\"more\"></span>\n\n<p>My solution is based on a template system that I implemented into my project at an earlier stage. If you are interested in how this works, I recommend you read my article <strong><a href=\"https://kiko.io/categories/JavaScript/Utilize-a-repository-of-reusable-ES6-template-literals/\">Utilize a repository of reusable ES6 template literals</a></strong>.</p>\n<p>Let’s start with the standard scaffold of an HTML5 app, extended with some <code>style</code>‘s, an initialization <code>script</code> and a lonely <code>main</code> element, we want to fill with some localized content:</p>\n<figure class=\"highlight html\"><figcaption><span>index.html</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;!DOCTYPE <span class=\"keyword\">html</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">html</span> <span class=\"attr\">lang</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">charset</span>=<span class=\"string\">&quot;utf-8&quot;</span> /&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">meta</span> <span class=\"attr\">http-equiv</span>=<span class=\"string\">&quot;language&quot;</span> <span class=\"attr\">content</span>=<span class=\"string\">&quot;en&quot;</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">title</span>&gt;</span>Native JavaScript Multilanguage Templating<span class=\"tag\">&lt;/<span class=\"name\">title</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"language-css\"></span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"selector-tag\">body</span> &#123; <span class=\"attribute\">padding</span>: <span class=\"number\">2rem</span>; &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">            <span class=\"selector-tag\">main</span> &#123; <span class=\"attribute\">text-align</span>: center; &#125;</span></span><br><span class=\"line\"><span class=\"language-css\">        </span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">type</span>=<span class=\"string\">&quot;module&quot;</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"keyword\">import</span> &#123; <span class=\"title class_\">App</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./app.js&#x27;</span>;</span></span><br><span class=\"line\"><span class=\"language-javascript\">            <span class=\"variable language_\">window</span>.<span class=\"property\">app</span> = <span class=\"keyword\">new</span> <span class=\"title class_\">App</span>(); </span></span><br><span class=\"line\"><span class=\"language-javascript\">            app.<span class=\"title function_\">init</span>();</span></span><br><span class=\"line\"><span class=\"language-javascript\">        </span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">head</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">main</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">main</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">body</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">html</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>The <code>script</code> points to the following ES6 module class in the file <strong>app.js</strong>:</p>\n<figure class=\"highlight js\"><figcaption><span>app.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\"></span>) &#123; </span><br><span class=\"line\">    <span class=\"comment\">// do something when the class is instantiated</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">init</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// do something to initialize the app</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123; <span class=\"title class_\">App</span> &#125;;</span><br></pre></td></tr></table></figure>\n\n<p>Nothing uncommon so far, if you are familiar with <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Classes\">ES6 classes</a> and <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import\">imports</a>&#x2F;<a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/export\">exports</a>. </p>\n<p>Now let’s create a <strong>localizations.js</strong> file, to store the needed localized strings in all wanted languages. Every language will have its own branch in a <code>Localizations</code> object, represented by its two-letter <a href=\"https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes\">ISO-639-1 language code</a>. All translations are accessible via an unique english key word:</p>\n<figure class=\"highlight js\"><figcaption><span>localizations.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">export</span> <span class=\"keyword\">function</span> <span class=\"title function_\">Localizations</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;EN&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;helloWorld&quot;</span>: <span class=\"string\">&quot;Hello World&quot;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"string\">&quot;DE&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;helloWorld&quot;</span>: <span class=\"string\">&quot;Hallo Welt&quot;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"string\">&quot;ES&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;helloWorld&quot;</span>: <span class=\"string\">&quot;Hola, mundo&quot;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"string\">&quot;FR&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;helloWorld&quot;</span>: <span class=\"string\">&quot;Bonjour le monde&quot;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"string\">&quot;RU&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;helloWorld&quot;</span>: <span class=\"string\">&quot;Здравствуйте, мир&quot;</span></span><br><span class=\"line\">        &#125;,</span><br><span class=\"line\">        <span class=\"string\">&quot;JP&quot;</span>: &#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;helloWorld&quot;</span>: <span class=\"string\">&quot;ハローワールド&quot;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>As we import the <strong>localizations.js</strong> in our <strong>app.js</strong>, we can initialize the localizations in the constructor of the app class with the language code of the users browser:</p>\n<figure class=\"highlight js\"><figcaption><span>app.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Localizations</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./localizations.js&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\"></span>) &#123; </span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// Get browser language</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">langCode</span> = </span><br><span class=\"line\">      <span class=\"variable language_\">window</span>.<span class=\"property\">navigator</span>.<span class=\"property\">language</span>.<span class=\"title function_\">split</span>(<span class=\"string\">&quot;-&quot;</span>)[<span class=\"number\">0</span>].<span class=\"title function_\">toUpperCase</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Init localization to access via &#x27;app.localization&#x27; globally</span></span><br><span class=\"line\">    <span class=\"variable language_\">this</span>.<span class=\"property\">localization</span> = <span class=\"title class_\">Localizations</span>()[<span class=\"variable language_\">this</span>.<span class=\"property\">langCode</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br></pre></td></tr></table></figure>\n\n<p><code>app.localization</code> now holds the key&#x2F;value list of the current language.</p>\n<p>Now we implement the templating class, as described in <a href=\"https://kiko.io/categories/JavaScript/Utilize-a-repository-of-reusable-ES6-template-literals/\">Utilize a repository of reusable ES6 template literals</a> and define a first template called <code>helloWorld</code> …</p>\n<figure class=\"highlight js\"><figcaption><span>templates.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Templates</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">helloWorld</span>(<span class=\"params\">data</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"variable language_\">this</span>.<span class=\"title function_\">fillTemplate</span>(<span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">            &lt;h1&gt;<span class=\"subst\">$&#123;app.localization.helloWorld&#125;</span>&lt;/h1&gt;</span></span><br><span class=\"line\"><span class=\"string\">        `</span>, data);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"title function_\">fillTemplate</span>(<span class=\"params\">templateString, templateVars</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> func = <span class=\"keyword\">new</span> <span class=\"title class_\">Function</span>(...<span class=\"title class_\">Object</span>.<span class=\"title function_\">keys</span>(templateVars),  </span><br><span class=\"line\">          <span class=\"string\">&quot;return `&quot;</span> + templateString + <span class=\"string\">&quot;`;&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"title function_\">func</span>(...<span class=\"title class_\">Object</span>.<span class=\"title function_\">values</span>(templateVars));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">export</span> &#123; <span class=\"title class_\">Templates</span> &#125;;</span><br></pre></td></tr></table></figure>\n\n<p>The inner text of the <code>h1</code> element in the <code>helloWorld</code> template refers to the globally available variable <code>app.localization</code>, we initialized in the last step, and points to the translation <code>helloWorld</code>.</p>\n<p>In <strong>app.js</strong> we import the <strong>templates.js</strong> and implement some code in the <code>init</code> method, to get the template and bring it to the DOM:</p>\n<figure class=\"highlight js\"><figcaption><span>app.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Localizations</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./localizations.js&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">import</span> &#123; <span class=\"title class_\">Templates</span> &#125; <span class=\"keyword\">from</span> <span class=\"string\">&#x27;./templates.js&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">App</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"title function_\">init</span>(<span class=\"params\"></span>) &#123; </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Get &quot;Hello World&quot; H1 element in current language</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> helloWorld = app.<span class=\"property\">templates</span>.<span class=\"title function_\">helloWorld</span>(&#123;&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//Insert H1 element into MAIN element</span></span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;main&quot;</span>)</span><br><span class=\"line\">      .<span class=\"title function_\">insertAdjacentHTML</span>(<span class=\"string\">&quot;beforeend&quot;</span>, helloWorld);</span><br><span class=\"line\"></span><br><span class=\"line\">  &#125;</span><br></pre></td></tr></table></figure>\n\n<p>This is it …</p>\n<p>In the following <strong>Github</strong> repository you will find a solution based on this example, extented with a language selector, cookie support and some helper methods to keep the code nice and clean:</p>\n<p>  <a href=\"https://github.com/kristofzerbe/Native-JavaScript-Multilanguage-Templating\">https://github.com/kristofzerbe/Native-JavaScript-Multilanguage-Templating</a></p>\n<p><img src=\"/post/Native-JavaScript-Multilanguage-Templating/github-solution.gif\"></p>\n","_path":"post/Native-JavaScript-Multilanguage-Templating/","_link":"https://kiko.io/post/Native-JavaScript-Multilanguage-Templating/","_id":"clmmdc8v9001pjfopcr4g5i84"}}