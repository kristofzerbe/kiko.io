{
    "version": "https://jsonfeed.org/version/1",
    "title": "kiko.io Posts",
    "description": "Blog about memorable tech stuff by Kristof Zerbe",
    "home_page_url": "https://kiko.io",
    "feed_url": "https://kiko.io/feed.json",
    "icon": "https://kiko.io/images/icon-72x72.png",
    "favicon": "https://kiko.io/images/favicon-32x32.png",
    "author": {
        "name": "Kristof Zerbe",
        "url": "https://kiko.io",
        "avatar": "https://kiko.io/images/kristof-zerbe.png"
    },
    "items": [
        {
            "id": "https://kiko.io/post/Mecklenburg-Lakes/",
            "url": "https://kiko.io/post/Mecklenburg-Lakes/",
            "title": "Mecklenburg Lakes",
            "image": "https://kiko.io/images/social-media/Mecklenburg-Lakes.thumb.png",
            "date_published": "2023-11-26T13:59:17.000Z",
            "date_modified": null,
            "content_html": "<p>August in Germany is usually a safe bet when it comes to the weather, so my wife and I decided to relax for a few days on the <a href=\"https://en.wikipedia.org/wiki/Mecklenburg_Lake_Plateau\">Mecklenburg Lake Plateau</a> … on a chartered boat. In general, you need a driving license for everything that moves in this country, but there are a few exceptions, such as in Brandenburg&#x2F;Mecklenburg where even inexperienced tourists are allowed to steer a 12-metre houseboat&#x2F;yacht across the many lakes after a short briefing.</p>\n<p>The weather was, let’s say, suboptimal this August, because a storm passed over us in the first three days and there was no chance of happy sailing around on the water. On the one hand, the swell and wind forces were extremely worrying for newbies and on the other, it’s simply no fun being on a boat in cold, heavy rain. We were stuck in Rheinsberg. On the one hand, the swell and wind forces were extremely worrying for newbies and on the other, it’s simply no fun being on a boat in cold, heavy rain.</p>\n<span id=\"more\"></span>\n\n<p>Not only because it felt like luxury camping without people but only water around, but also because it gave a pleasant feeling of freedom. Yes, we weren’t nearly alone on the lakes and getting a good spot in a marina for electricity and fresh water wasn’t always easy, but then just anchoring in any lake for the night and being woken up by birdsong and a gentle swell was magical.</p>\n<p>Below are a few pictures from this trip, some of which will be used again as hero images in this blog:</p>\n\n      <div class=\"photo-list\" id=\"photo-list-jefwos\">\n        \n        <figure>\n          <a href=\"/photos/23-08 Mecklenburg Seen-0040\" class=\"no-break\">\n            <img src=\"23-08 Mecklenburg Seen-0040.jpg\">\n          </a>\n          <figcaption>Grinning Horse</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-08 Mecklenburg Seen-0062\" class=\"no-break\">\n            <img src=\"23-08 Mecklenburg Seen-0062.jpg\">\n          </a>\n          <figcaption>Sea Magic</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-08 Mecklenburg Seen-0160\" class=\"no-break\">\n            <img src=\"23-08 Mecklenburg Seen-0160.jpg\">\n          </a>\n          <figcaption>Rainy Planks</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-08 Mecklenburg Seen-0186\" class=\"no-break\">\n            <img src=\"23-08 Mecklenburg Seen-0186.jpg\">\n          </a>\n          <figcaption>Chrome Bollard</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-08 Mecklenburg Seen-0204\" class=\"no-break\">\n            <img src=\"23-08 Mecklenburg Seen-0204.jpg\">\n          </a>\n          <figcaption>Pink Lotus</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-08 Mecklenburg Seen-0211\" class=\"no-break\">\n            <img src=\"23-08 Mecklenburg Seen-0211.jpg\">\n          </a>\n          <figcaption>Stony Vegetation</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-08 Mecklenburg Seen-0216\" class=\"no-break\">\n            <img src=\"23-08 Mecklenburg Seen-0216.jpg\">\n          </a>\n          <figcaption>Golden Drama</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-08 Mecklenburg Seen-0275\" class=\"no-break\">\n            <img src=\"23-08 Mecklenburg Seen-0275.jpg\">\n          </a>\n          <figcaption>Green Canal</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-08 Mecklenburg Seen-0323\" class=\"no-break\">\n            <img src=\"23-08 Mecklenburg Seen-0323.jpg\">\n          </a>\n          <figcaption>Boiler Mirroring</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-08 Mecklenburg Seen-0335\" class=\"no-break\">\n            <img src=\"23-08 Mecklenburg Seen-0335.jpg\">\n          </a>\n          <figcaption>Into the Storm</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-08 Mecklenburg Seen-0341\" class=\"no-break\">\n            <img src=\"23-08 Mecklenburg Seen-0341.jpg\">\n          </a>\n          <figcaption>Sunset Jetty</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-08 Mecklenburg Seen-0343\" class=\"no-break\">\n            <img src=\"23-08 Mecklenburg Seen-0343.jpg\">\n          </a>\n          <figcaption>Golden Surfing</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-08 Mecklenburg Seen-0408\" class=\"no-break\">\n            <img src=\"23-08 Mecklenburg Seen-0408.jpg\">\n          </a>\n          <figcaption>Blue Lake</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-08 Mecklenburg Seen-0432\" class=\"no-break\">\n            <img src=\"23-08 Mecklenburg Seen-0432.jpg\">\n          </a>\n          <figcaption>Green Ducks</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-08 Mecklenburg Seen-0433\" class=\"no-break\">\n            <img src=\"23-08 Mecklenburg Seen-0433.jpg\">\n          </a>\n          <figcaption>Sparkling Duck</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-08 Mecklenburg Seen-0468\" class=\"no-break\">\n            <img src=\"23-08 Mecklenburg Seen-0468.jpg\">\n          </a>\n          <figcaption>Mirrored Boathouses</figcaption>\n        </figure>\n    \n      </div>\n    \n\n<!-- \n  \"23-08 Mecklenburg Seen-0256|Stormy Lake\"\n  \"23-08 Mecklenburg Seen-0229|Buddy Support\"\n  \"23-08 Mecklenburg Seen-0202|Rheinsberg Palace\"\n  \"23-08 Mecklenburg Seen-0154|Rainy Tourism\"\n -->\n",
            "tags": [
                "Publishing",
                "Imaging"
            ]
        },
        {
            "id": "https://kiko.io/post/Discoveries-27-JavaScript-Tools/",
            "url": "https://kiko.io/post/Discoveries-27-JavaScript-Tools/",
            "title": "Discoveries #27 - JavaScript Tools",
            "image": "https://kiko.io/images/social-media/Discoveries-27-JavaScript-Tools.thumb.png",
            "date_published": "2023-11-20T14:16:39.000Z",
            "date_modified": null,
            "content_html": "<p>This month&#39;s Discoveries are about small, large, new and somewhat older JavaScript tools that can make life and coding easier for developers. Why reinvent the wheel when someone has already done it. Happy Coding :)</p>\n\n        <ul class=\"anchorlist\">\n            <li data-anchor=\"#spacing-js-measuring\">Spacing.js - Measuring</li><li data-anchor=\"#ukiyo-js-parallax-effect\">Ukiyo.js - Parallax Effect</li><li data-anchor=\"#intersectionobserver-debugger\">IntersectionObserver Debugger</li><li data-anchor=\"#mande-fetch-wrapper\">mande - Fetch Wrapper</li><li data-anchor=\"#vest-declarative-validations-framework\">Vest - Declarative Validations Framework</li><li data-anchor=\"#granim-js-gradient-animation\">Granim.js - Gradient Animation</li><li data-anchor=\"#roughnotation\">RoughNotation</li><li data-anchor=\"#barba-js-page-transitions\">barba.js - Page Transitions</li><li data-anchor=\"#dead-or-alive-url-checker\">dead-or-alive - URL Checker</li><li data-anchor=\"#timeago-format-date\">timeago - Format Date</li>\n        </ul>\n    \n\n<span id=\"more\"></span>\n\n\n    <hr id=\"spacing-js-measuring\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      Spacing.js - Measuring\n    </h2>\n    <small>by Steven Lei&nbsp;<br><a href=\"https://spacingjs.com/\">https://spacingjs.com/</a></small>\n    <p>Have you ever wanted to measure your web layout during development? Steven has a solution for you. Either as JavaScript integrated in HTML or as a Chrome plugin.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://spacingjs.com/\">\n      <img class=\"limit\" src=\"spacing-js-measuring.png\" alt=\"Spacing.js - Measuring\" />\n    </a>\n  \n\n\n    <hr id=\"ukiyo-js-parallax-effect\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      Ukiyo.js - Parallax Effect\n    </h2>\n    <small>by Yiteng Jun&nbsp;<br><a href=\"https://github.com/yitengjun/ukiyo-js\">https://github.com/yitengjun/ukiyo-js</a></small>\n    <p>This ES6 library is an easy to use tool for creating efficient background parallax effects for &lt;img&gt;, &lt;picture&gt;, &lt;video&gt; elements and background images. It can be called manually via JavaScript or automatically via a special class or data attribute.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://github.com/yitengjun/ukiyo-js\">\n      <img class=\"limit\" src=\"ukiyo-js-parallax-effect.png\" alt=\"Ukiyo.js - Parallax Effect\" />\n    </a>\n  \n\n\n    <hr id=\"intersectionobserver-debugger\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      IntersectionObserver Debugger\n    </h2>\n    <small>by Rodrigo Pombo&nbsp;<br><a href=\"https://github.com/pomber/intersection-observer-debugger\">https://github.com/pomber/intersection-observer-debugger</a></small>\n    <p>This tiny script is a debugging tool, included during development, which shows you the root, target, and intersection every time an IntersectionObserver is triggered.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://github.com/pomber/intersection-observer-debugger\">\n      <img class=\"limit\" src=\"intersectionobserver-debugger.png\" alt=\"IntersectionObserver Debugger\" />\n    </a>\n  \n\n\n    <hr id=\"mande-fetch-wrapper\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      mande - Fetch Wrapper\n    </h2>\n    <small>by Eduardo San Martin Morote&nbsp;<br><a href=\"https://github.com/posva/mande\">https://github.com/posva/mande</a></small>\n    <p>With mande Eduardo has written a great wrapper for JavaScripts fetch(), which not only relieves you of a lot of typing work, but also comes with a few useful extensions, e.g. for nuxt. This turns an API call into a one-liner.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://github.com/posva/mande\">\n      <img class=\"limit\" src=\"mande-fetch-wrapper.png\" alt=\"mande - Fetch Wrapper\" />\n    </a>\n  \n\n\n    <hr id=\"vest-declarative-validations-framework\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      Vest - Declarative Validations Framework\n    </h2>\n    <small>by Evyatar Alush&nbsp;<br><a href=\"https://github.com/ealush/vest\">https://github.com/ealush/vest</a></small>\n    <p>Vest is a declarative validation framework for validating form input that is as easy to use as the Mocha or Jest unit test libraries.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://github.com/ealush/vest\">\n      <img class=\"limit\" src=\"vest-declarative-validations-framework.png\" alt=\"Vest - Declarative Validations Framework\" />\n    </a>\n  \n\n\n    <hr id=\"granim-js-gradient-animation\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      Granim.js - Gradient Animation\n    </h2>\n    <small>by Benjamin Blonde&nbsp;<br><a href=\"https://sarcadass.github.io/granim.js/examples.html\">https://sarcadass.github.io/granim.js/examples.html</a></small>\n    <p>Benjamin has created a library to animate gradients as complex as you need them. It supports pausing when it&#39;s not in view and different blending modes for images.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://sarcadass.github.io/granim.js/examples.html\">\n      <img class=\"limit\" src=\"granim-js-gradient-animation.png\" alt=\"Granim.js - Gradient Animation\" />\n    </a>\n  \n\n\n    <hr id=\"roughnotation\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      RoughNotation\n    </h2>\n    <small>by Preet Shihn&nbsp;<br><a href=\"https://roughnotation.com/\">https://roughnotation.com/</a></small>\n    <p>To emphasize something important on a sheet of paper, you sometimes use a highlighter. This library brings that to the web in an animated way. With a circle around it, underlined … or both, you&#39;re sure to attract attention.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://roughnotation.com/\">\n      <img class=\"limit\" src=\"roughnotation.png\" alt=\"RoughNotation\" />\n    </a>\n  \n\n\n    <hr id=\"barba-js-page-transitions\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      barba.js - Page Transitions\n    </h2>\n    <small>by Multiple Contributors&nbsp;<br><a href=\"https://barba.js.org/features/user-friendly/\">https://barba.js.org/features/user-friendly/</a></small>\n    <p>Barba is a library that allows you to create fluid and smooth transitions between pages on your website, while we wait for the <a href=\"https://caniuse.com/?search=View+Transitions+API\">View Transitions API</a>.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://barba.js.org/features/user-friendly/\">\n      <img class=\"limit\" src=\"barba-js-page-transitions.png\" alt=\"barba.js - Page Transitions\" />\n    </a>\n  \n\n\n    <hr id=\"dead-or-alive-url-checker\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      dead-or-alive - URL Checker\n    </h2>\n    <small>by Titus Wormer&nbsp;<br><a href=\"https://github.com/wooorm/dead-or-alive\">https://github.com/wooorm/dead-or-alive</a></small>\n    <p>This URL checker ensures that links do not lead to nothing, whether on websites, in node projects or in service workers. It even checks anchor links for the presence of the element.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://github.com/wooorm/dead-or-alive\">\n      <img class=\"limit\" src=\"dead-or-alive-url-checker.png\" alt=\"dead-or-alive - URL Checker\" />\n    </a>\n  \n\n\n    <hr id=\"timeago-format-date\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      timeago - Format Date\n    </h2>\n    <small>by Whoever Titanium is...&nbsp;<br><a href=\"https://github.com/Titanium2099/timeago\">https://github.com/Titanium2099/timeago</a></small>\n    <p>&#39;Your message was sent 5 minutes ago&#39;. Notes like these are easy to bring into a web application with this script. It currently only supports English, but is easily customizable.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://github.com/Titanium2099/timeago\">\n      <img class=\"limit\" src=\"timeago-format-date.png\" alt=\"timeago - Format Date\" />\n    </a>\n  \n",
            "tags": [
                "Collection"
            ]
        },
        {
            "id": "https://kiko.io/post/Speyer-Automotive/",
            "url": "https://kiko.io/post/Speyer-Automotive/",
            "title": "Speyer Automotive",
            "image": "https://kiko.io/images/social-media/Speyer-Automotive.thumb.png",
            "date_published": "2023-11-15T15:13:13.000Z",
            "date_modified": null,
            "content_html": "<p>In September, my wife and I took a trip to the <a href=\"https://en.wikipedia.org/wiki/Technik_Museum_Speyer\">Museum of Technology in nearby Speyer</a>. I don’t really know why I’ve never been there before, not even as a child, because the collection of cars and aeroplanes is quite unique in Germany. A dream for every boy, even if he’s not as young as he might think :)</p>\n<p>Built on the old site of an aircraft manufacturer, the 100-year-old hangars provide the perfect space for exhibiting large vehicles with wheels and wings. And exactly this can be found in Speyer: A large part for cars of all kinds and the outside area for aeroplanes and even ships. Even a spaceship, the Russian Space Shuttle alternative <a href=\"https://en.wikipedia.org/wiki/Buran_programme\">Buran</a> can be seen there.</p>\n<p>Here are a few pictures of the car exhibition that I brought back from there and which will be used as post header images hero on kiko.io in the future …</p>\n<span id=\"more\"></span>\n\n\n      <div class=\"photo-list\" id=\"photo-list-pjvneb\">\n        \n        <figure>\n          <a href=\"/photos/23-09-11 Speyer-0001\" class=\"no-break\">\n            <img src=\"23-09-11 Speyer-0001.jpg\">\n          </a>\n          <figcaption>Red Bull 12</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-09-11 Speyer-0006\" class=\"no-break\">\n            <img src=\"23-09-11 Speyer-0006.jpg\">\n          </a>\n          <figcaption>Packard Monster</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-09-11 Speyer-0007\" class=\"no-break\">\n            <img src=\"23-09-11 Speyer-0007.jpg\">\n          </a>\n          <figcaption>Golden Cooler</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-09-11 Speyer-0008\" class=\"no-break\">\n            <img src=\"23-09-11 Speyer-0008.jpg\">\n          </a>\n          <figcaption>Vespa Treasure</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-09-11 Speyer-0022\" class=\"no-break\">\n            <img src=\"23-09-11 Speyer-0022.jpg\">\n          </a>\n          <figcaption>Yellow Curves</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-09-11 Speyer-0029\" class=\"no-break\">\n            <img src=\"23-09-11 Speyer-0029.jpg\">\n          </a>\n          <figcaption>Red Motor Cover</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-09-11 Speyer-0031\" class=\"no-break\">\n            <img src=\"23-09-11 Speyer-0031.jpg\">\n          </a>\n          <figcaption>Maybach Zeppelin</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-09-11 Speyer-0041\" class=\"no-break\">\n            <img src=\"23-09-11 Speyer-0041.jpg\">\n          </a>\n          <figcaption>Mercedes Gold</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-09-11 Speyer-0048\" class=\"no-break\">\n            <img src=\"23-09-11 Speyer-0048.jpg\">\n          </a>\n          <figcaption>Magirus Red</figcaption>\n        </figure>\n    \n      </div>\n    \n",
            "tags": [
                "Publishing",
                "Imaging"
            ]
        },
        {
            "id": "https://kiko.io/post/SVWW-vs-Kaiserslautern-2023-11-12/",
            "url": "https://kiko.io/post/SVWW-vs-Kaiserslautern-2023-11-12/",
            "title": "SVWW vs. Kaiserslautern @ 2023-11-12",
            "image": "https://kiko.io/images/social-media/SVWW-vs-Kaiserslautern-2023-11-12.thumb.png",
            "date_published": "2023-11-15T13:12:00.000Z",
            "date_modified": null,
            "content_html": "\n    <div class=\"float-matchgrid\">\n      <img src=\"/images/logos/SV-Wehen-Wiesbaden.svg\" />\n      <span>2:1</span>\n      <img src=\"/images/logos/1-FC-Kaiserslautern.svg\" />\n    </div>\n  \n\n<p>Travelling by scooter in Germany in the middle of November is no fun. Just like on Sunday. Light rain at just under 9 degrees Celsius and quite a bit of wind. Brrr… but what can I do, there are no car parks at the arena. Not at all today, because it’s against Kaiserslautern, which is only about 100 kilometres away from Wiesbaden and therefore a lot of visitors are expected. It’s a kind of derby.</p>\n<p><strong>1. FC Kaiserslautern</strong> is one of the great traditional clubs in Germany, which has celebrated a total of 4 German Championships in its history, but has really lost momentum since its relegation to the 2. Bundesliga in 2006. Between 2018 and 2022, the team even only played in the 3rd division pf German football, but after their last year’s promotion, they are hoping to be promoted to the top division again soon. Recent results in the cup have shown that they have a strong team and it was to be feared that they would overrun Wehen Wiesbaden in their run, although their last league game was lost against Fürth.</p>\n<p>It was also rather uncomfortably cold in the stadium and I wondered once again how the young lads do it on the pitch in their shorts, especially the goalkeeper.</p>\n<p>But the fans created the right atmosphere. As expected, the entire guest stand was full. 12,100 spectators in total; a new season record. The SVWW fan block was also packed this time and the ultras had come up with a nice choreo with complete stand banners and red smoke (see photos).</p>\n<span id=\"more\"></span>\n\n<p>My nice seat neighbour, the older lady, was there again and we made friends this time. Her name is Bärbel and this time she was a bit more excited than normally. Well, the aim was to beat Kaiserslautern. Kaiserslautern! Every now and then she also started to grumble: about an opposing player or when things didn’t go fast enough forwards or when the ball was lost unnecessarily. Not nearly as blatant as the “gentlemen” behind us, who were swearing in one piece and indulging in football wisdom, but you could tell that the game was more important to her than others.</p>\n<hr>\n<h2 id=\"The-Game\"><a href=\"#The-Game\" class=\"headerlink\" title=\"The Game\"></a>The Game</h2><p>In the first half, the game was rather well balanced, even if you had the feeling that our team was the only ones playing. There was no sign of Kaiserlautern’s attacking drive. Up until the 39th minute, we had one chance to score, but the visitors hadn’t even had a shot on our goal. Nothing, nada, niente. But then the ball was in our net: <strong>0:1</strong>! A strange goal, because it didn’t look intentional. The ball just bounced at Ritter’s feet by chance and he simply took a shot. Goal. Damn…</p>\n\n      <div class=\"image-masonry\" id=\"image-masonry-2326ur\">\n        <div><img class=\"no-caption\" src=\"/post/SVWW-vs-Kaiserslautern-2023-11-12/PXL_20231112_120526904.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Kaiserslautern-2023-11-12/PXL_20231112_122110857.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Kaiserslautern-2023-11-12/PXL_20231112_122854839.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Kaiserslautern-2023-11-12/PXL_20231112_122739398.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Kaiserslautern-2023-11-12/PXL_20231112_122947255.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Kaiserslautern-2023-11-12/PXL_20231112_135210240.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Kaiserslautern-2023-11-12/PXL_20231112_141045409.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Kaiserslautern-2023-11-12/PXL_20231112_142300311.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Kaiserslautern-2023-11-12/PXL_20231112_142353462.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Kaiserslautern-2023-11-12/PXL_20231112_142646533.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Kaiserslautern-2023-11-12/PXL_20231112_142730319.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Kaiserslautern-2023-11-12/PXL_20231112_142841643.jpg\" alt=\"\" /></div>\n      </div>\n      <script>\n        let macy_2326ur = new Macy({\n          container: '#image-masonry-2326ur',\n          trueOrder: false,\n          waitForImages: false,\n          useOwnImageLoader: false,\n          debug: true,\n          mobileFirst: true,\n          columns: 2,\n          margin: {\n            y: 6,\n            x: 6\n          },\n          breakAt: {\n            980: {\n              margin: {\n                x: 8,\n                y: 8\n              },\n              columns: 3\n            },\n            768: 2,\n            640: 3\n          }\n        });\n      </script>\n    \n\n<p>After the break, Kaiserslautern seemed to want to build on the goal. They were now playing football. And ours were probably angry at not having been rewarded for their efforts in the first half. The game became more lively, but we still had the better scenes … and after just 4 minutes, the visitors gave our <strong>Tijmen Goppel</strong> far too much time to aim and shoot just outside the penalty area and the ball was deflected into the goal by an opponent’s leg. <strong>1:1</strong>!</p>\n<p>In the 65th minute, things got curious again: Goppel was fouled and awarded a free kick about 20 metres from goal. Robin Heußer took it and his shot somehow hit the chest of <strong>Ivan Prtajin</strong> in the penalty area, from where the ball went into the goal. <strong>2:1</strong> … Game turned round!</p>\n<p>The last half hour was really nerve-wracking. We continued to play better, but the pressure increased and the game became noticeably faster. Shortly before the end, substitute <strong>John Iredale</strong> ran alone with the ball across half the pitch and everyone held their breath, but just before the goal he tried to round the last defender and he was just able to scoop the ball away. G… damn it!</p>\n<p>&#x21FE;&nbsp;<a href=\"https://www.kicker.de/wiesbaden-gegen-klautern-2023-bundesliga-4861776/analyse\">Match report on kicker.de</a></p>\n<hr>\n<h2 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h2><p>This was the fourth (!) game in a row that we have won and our position in the table looks correspondingly favourable again. Only three points behind the promotion places. Woohoo … but let’s not fool ourselves: There will be another losing streak in the future (as always in football) and 21 points are still not enough to keep us in the league, and that’s all that matters.</p>\n<p>Two away games are scheduled in the next three weeks, against <strong>Greuther Fürth</strong> and <strong>Holstein Kiel</strong>. On 8 December, we return to the Brita Arena against <strong>Eintracht Braunschweig</strong>, currently second last in the table. They should be beatable…</p>\n\n    <a href=\"https://www.kicker.de/2-bundesliga/tabelle\">\n        <img src=\"tabelle-23-11-12.png\" alt=\"Table 2. Liga, Sunday 12. November 2023\" />\n    </a>\n    ",
            "tags": [
                "SVWW",
                "2. Bundesliga"
            ]
        },
        {
            "id": "https://kiko.io/post/Add-Link-to-Trello-on-Android-via-Share-Menu/",
            "url": "https://kiko.io/post/Add-Link-to-Trello-on-Android-via-Share-Menu/",
            "title": "Add Link to Trello on Android via Share Menu",
            "image": "https://kiko.io/images/social-media/Add-Link-to-Trello-on-Android-via-Share-Menu.thumb.png",
            "date_published": "2023-11-13T16:11:47.000Z",
            "date_modified": null,
            "content_html": "<p>I have been collecting interesting links in various Trello boards for many years and also process some of them automatically, such as my <a href=\"/collections/tiny-tools\">Tiny Tools</a>.</p>\n<p>However, the official Trello Android App has the problem eversince that, when you want to create a URL as a Trello card in the browser, the URL is entered in the <code>Description</code> and not as an <code>Attachment</code>, where it actually belongs.</p>\n<p><img src=\"/post/Add-Link-to-Trello-on-Android-via-Share-Menu/share-trello-app.png\" alt=\"Share Link with Trello App\"></p>\n<p>I have solved this for myself for years using a <strong>bookmarklet</strong> in the Chrome browser (see <a href=\"/post/Add-website-to-Trello-card-the-better-way/\" title=\"Add website to Trello card the better way\">Add website to Trello card the better way</a>) and get along quite well with it. However, there is one catch, that has annoyed me ever since:<br>I find an interesting link in the Mastodon WebApp, for example, and tap on it. What opens, however, is the WebView integrated in Android and not my standard Chrome browser, in which the bookmarklet would be available. So, for links that I want to store, I always have to open the WebView menu and select “Open in Chrome Browser”. I cannot use the general SHARE menu. At least not so far … :)</p>\n<span id=\"more\"></span>\n\n<p>The bookmarklet does nothing more as sending the link with some additional information like <code>name</code> (title) to the URL <a href=\"https://trello.com/add-card\">https://trello.com/add-card</a>, where the user can select the desired board and list:</p>\n<figure class=\"highlight js\"><figcaption><span>Trello-AddCard-Bookmarklet.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">javascript</span>: (<span class=\"keyword\">function</span> (<span class=\"params\">win, name, desc</span>) &#123;</span><br><span class=\"line\">  win.<span class=\"title function_\">open</span>(</span><br><span class=\"line\">    <span class=\"string\">&quot;https://trello.com/add-card&quot;</span> +</span><br><span class=\"line\">      <span class=\"string\">&quot;?source=&quot;</span> +</span><br><span class=\"line\">      win.<span class=\"property\">location</span>.<span class=\"property\">host</span> +</span><br><span class=\"line\">      <span class=\"string\">&quot;&amp;mode=popup&quot;</span> +</span><br><span class=\"line\">      <span class=\"string\">&quot;&amp;url=&quot;</span> +</span><br><span class=\"line\">      <span class=\"built_in\">encodeURIComponent</span>(win.<span class=\"property\">location</span>.<span class=\"property\">href</span>) +</span><br><span class=\"line\">      (name ? <span class=\"string\">&quot;&amp;name=&quot;</span> + <span class=\"built_in\">encodeURIComponent</span>(name) : <span class=\"string\">&quot;&quot;</span>) +</span><br><span class=\"line\">      (desc ? <span class=\"string\">&quot;&amp;desc=&quot;</span> + <span class=\"built_in\">encodeURIComponent</span>(desc) : <span class=\"string\">&quot;&quot;</span>),</span><br><span class=\"line\">    <span class=\"string\">&quot;add-trello-card&quot;</span>,</span><br><span class=\"line\">    <span class=\"string\">&quot;width=500,height=600,left=&quot;</span> +</span><br><span class=\"line\">      (win.<span class=\"property\">screenX</span> + (win.<span class=\"property\">outerWidth</span> - <span class=\"number\">500</span>) / <span class=\"number\">2</span>) +</span><br><span class=\"line\">      <span class=\"string\">&quot;,top=&quot;</span> +</span><br><span class=\"line\">      (win.<span class=\"property\">screenY</span> + (win.<span class=\"property\">outerHeight</span> - <span class=\"number\">740</span>) / <span class=\"number\">2</span>)</span><br><span class=\"line\">  );</span><br><span class=\"line\">&#125;)(<span class=\"variable language_\">window</span>, <span class=\"variable language_\">document</span>.<span class=\"property\">title</span>, getSelection ? <span class=\"title function_\">getSelection</span>().<span class=\"title function_\">toString</span>() : <span class=\"string\">&quot;&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>If you want to use this bookmarklet, you have to remove all line breaks from the code, decode the url and save it as a bookmark … or you visit <a href=\"https://trello.com/add-card\">https://trello.com/add-card</a> and drag the link “Send to Trello” to your bookmark list. It comes out the same.</p>\n<p><img src=\"/post/Add-Link-to-Trello-on-Android-via-Share-Menu/trello-add-page.png\" alt=\"Create Link Card via Trello Add Card Page\"></p>\n<p>As I said above, the Trello Bookmarklet e.g. Add Card page works differently to the Android app from the same company in terms of the URL. Are different departments not talking to each other?</p>\n<p>However … for me, the bookmarklet is history, because there is a much better approach that uses the Add Card page also, but can be called up from the standard Android Share Menu.</p>\n<hr>\n<h2 id=\"Power-Tool-HTTP-Shortcuts\"><a href=\"#Power-Tool-HTTP-Shortcuts\" class=\"headerlink\" title=\"Power Tool: HTTP Shortcuts\"></a>Power Tool: HTTP Shortcuts</h2><p>The trigger for my new solution was my search for better interaction possibilities from my blog to the IndieWeb. One hit was the article <a href=\"https://snarfed.org/android-indieweb-interactions-with-the-http-shortcuts-app\">Android IndieWeb interactions with the HTTP Shortcuts app</a> by Ryan Barrett, which uses the app <a href=\"https://http-shortcuts.rmy.ch/\"><strong>HTTP Shortcuts</strong></a> by <strong>Roland Meyer</strong> to serve as a <strong>Share Target</strong> for LIKE, FOLLOW and REPLY actions. </p>\n<p>Share Target? A while ago I had the idea of using the <a href=\"https://developer.chrome.com/articles/web-share-target/\">Web Share Target API</a> to solve my problem above, but haven’t got round to setting up such a PWA yet.</p>\n<p>But I no longer have to do that, because the HTTP Shortcuts app not only offers me the option of serving as a share target, but also significantly more functions for creating Android shortcuts, which are extremely useful:</p>\n<ul>\n<li><strong>Browser Shortcut</strong> - Open the URL in the browser</li>\n<li><strong>Scripting Shortcut</strong> - Write JavaScript for advanced workflows</li>\n<li><strong>Multi-Shortcut</strong> - Trigger multiple shortcuts at once</li>\n</ul>\n<p>All these shortcuts can be used to send any HTTP requests and process the responses in a variety of ways. The feature list is impressive and well <a href=\"https://http-shortcuts.rmy.ch/documentation\">documented</a>.</p>\n<h3 id=\"Scripting-Shortcut-for-calling-Trello’s-Add-Card-Page\"><a href=\"#Scripting-Shortcut-for-calling-Trello’s-Add-Card-Page\" class=\"headerlink\" title=\"Scripting Shortcut for calling Trello’s Add Card Page\"></a>Scripting Shortcut for calling Trello’s Add Card Page</h3><p>For my case, I need a scripting shortcut to process the information shared by the Android sharing dialogue to call the Add Card page. This is done via static variables that are created in HTTP Shortcuts and can then be used later in the script:</p>\n<p><img src=\"/post/Add-Link-to-Trello-on-Android-via-Share-Menu/httpshortcuts-variables.png\" alt=\"Setting Up Variables\"></p>\n<p>Creating the shortcut is quite simple, as you can see from the screenshots. Select the type, assign a name, perhaps a suitable icon and (importantly) tick the option <strong>Show as app shortcut on launcher and promote as Direct Share target</strong>, which ensures that the shortcut appears in the Android Share menu.</p>\n<p><img src=\"/post/Add-Link-to-Trello-on-Android-via-Share-Menu/httpshortcuts-shortcut.png\" alt=\"Shortcuts List and Creating/Editing Shortcut\"></p>\n<p><img src=\"/post/Add-Link-to-Trello-on-Android-via-Share-Menu/httpshortcuts-shortcut-settings.png\" alt=\"Scripting Shortcut Settings\"></p>\n<p>The script is no less straightforward, because it simply assembles the URL to the Trello Add Card page with the static variables and opens it using the app’s built-in JavaScript function <code>openUrl</code>:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> url = <span class=\"title function_\">getVariable</span>(<span class=\"string\">&quot;SharedUrl&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> title = <span class=\"title function_\">getVariable</span>(<span class=\"string\">&quot;SharedTitle&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title function_\">getHostnameFromRegex</span> = (<span class=\"params\">url</span>) =&gt; &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> matches = url.<span class=\"title function_\">match</span>(<span class=\"regexp\">/^https?\\:\\/\\/([^\\/?#]+)(?:[\\/?#]|$)/i</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> matches &amp;&amp; matches[<span class=\"number\">1</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">const</span> hostname = <span class=\"title function_\">getHostnameFromRegex</span>(url);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> trelloAddUrl = </span><br><span class=\"line\">  <span class=\"string\">&quot;https://trello.com/add-card?source=&quot;</span> + hostname + </span><br><span class=\"line\">    <span class=\"string\">&quot;&amp;mode=popup&amp;url=&quot;</span> + <span class=\"built_in\">encodeURIComponent</span>(url) + </span><br><span class=\"line\">    <span class=\"string\">&quot;&amp;name=&quot;</span> + <span class=\"built_in\">encodeURIComponent</span>(title);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"title function_\">openUrl</span>(trelloAddUrl);</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h2><p>The result is convincing and frees me from the bookmarklet on my smartphone, but I will continue to use it on my desktop browser.</p>\n\n    <p class=\"download-link\">\n      <a class=\"button\" href=\"AddToTrello-Shortcut.zip\" download>\n        Download Shortcut Files for Import in HTTP Shortcut <strong>AddToTrello-Shortcut.zip</strong>\n      </a>\n    </p>\n    \n\n<p>The HTTP Shortcuts app, however, has really got me hooked. I see a lot of potential for automating things on my smartphone and will keep you updated as I develop more solutions with it. Thank you Roland for this gem …</p>\n<p><img src=\"/post/Add-Link-to-Trello-on-Android-via-Share-Menu/httpshortcuts-share.png\" alt=\"Shortcut as Share Target\"></p>\n",
            "tags": [
                "Trello",
                "Android"
            ]
        },
        {
            "id": "https://kiko.io/post/Experimenting-with-the-font-LEXEND/",
            "url": "https://kiko.io/post/Experimenting-with-the-font-LEXEND/",
            "title": "Experimenting with the font LEXEND",
            "image": "https://kiko.io/images/social-media/Experimenting-with-the-font-LEXEND.thumb.png",
            "date_published": "2023-11-12T17:24:00.000Z",
            "date_modified": null,
            "content_html": "<p>A few weeks ago, a blog entry (I can’t remember which one) drew my attention to a font called <a href=\"https://www.lexend.com/\"><strong>LEXEND</strong></a>. In this article, the author also went into the scientific background of the font, which was developed to simplify reading and thus support those with reading difficulties. The website <a href=\"https://www.lexend.com/\">lexend.com</a>, operated by The Lexend Group, therefore also advertises the font with all kinds of reading statistics, although it is open source and is also freely available via Google Fonts.</p>\n<p><img src=\"/post/Experimenting-with-the-font-LEXEND/lexend.png\" alt=\"Lexend\"></p>\n<p>I simply liked the font style and wanted to try it out on this blog, which has always used the <a href=\"https://www.opensans.com/\">Open Sans</a> font. It was harder than I thought…</p>\n<span id=\"more\"></span>\n\n<hr>\n<h2 id=\"The-Download-Odyssey\"><a href=\"#The-Download-Odyssey\" class=\"headerlink\" title=\"The Download Odyssey\"></a>The Download Odyssey</h2><p>At the bottom of the one-pager website lexend.com there is a form for the first name and e-mail address and a button “Subscribe &amp; Send me these Fonts”. Okay … Seriously? Fuel for the spam machine? But my spam filter seems to be good enough and so I had the mail sent to me, only to be offered a file called <code>readexpro-master.zip</code> for download via the tracker button in the mail called “Download the Latest Fonts”. Again … Seriously? I expect the Lexend font files and I get something else, without any hint or description? How quickly do the people at The Lexend Group want to destroy their reputation on the net? Where was the UNSUBSCRIBE link in the mail again?<br>But of course I could have used the less prominent <a href=\"https://fonts.google.com/?query=lexend\">link to Google Fonts</a> below the sample image in the mail, which actually leads to the expected font. But what the heck is ReadExPro? Research…</p>\n<p>The font was designed in 2018 by Bonnie Shaver-Troup and Thomas Jockin and is based on the Quicksand project by Andrew Paglinawan, which was initiated in 2008 and improved by Thomas Jockin for Google Fonts in 2016. However, lexend.com only mentions Shaver-Troup and her team, who started working on Lexend with Google in 2017. In 2021, Thomas Jockin forked the project and worked with Nadine Chahine on an expansion for Arabic and renamed the font <strong>Readex Pro</strong>.</p>\n<p>Ah … ok. And why doesn’t anyone tell you that on the Lexend site? So Lexend is only one half of the coin and Readex Pro makes it a whole? Why two names for it? And why do you get one when you expect the other? Mysterious and, in times of all kinds of dangers on the Internet, simply bordering on the dubious.</p>\n<p>But unfortunately this is not the end of the inconsistencies. Since the files in my download of ReadEx Pro are quite large and I have no need for Arabic characters, I downloaded the Lexend font package from <a href=\"https://fonts.google.com/specimen/Lexend\"><strong>Google Fonts</strong></a>, which ONLY contains TTF files and no WOFF2 (Webfonts), the compressed version. Google itself writes the following in its own <a href=\"https://fonts.google.com/knowledge/glossary/web_font\">Glossary of Web Fonts</a>, but then refrains from supplying them? Another: Seriously?</p>\n<blockquote>\n<p>WOFF (and its successor WOFF2) are compressed file formats created specifically for web fonts. Although regular OpenType fonts (TTF and OTF files) can be used as web fonts, such usage is not recommended as it usually contravenes licence agreements-and the files are significantly larger.</p>\n</blockquote>\n<p>However, if you embed the font directly from Google Fonts instead of downloading it, only WOFF2 is delivered and TTF is out of the picture. It may be a consistent approach by Google to offer as much as possible only online in order to be able to better analyse the traffic behind it, but especially in Germany, where a <a href=\"https://inplp.com/latest-news/article/the-year-of-google-fonts-warning-letters\">wave of warnings</a> has swept over website operators in the last two years precisely because of this data collection via Google Fonts, this leaves a bitter aftertaste and forces developers to do additional work where it would not be necessary.</p>\n<h3 id=\"Convert-TTF-to-WOFF2\"><a href=\"#Convert-TTF-to-WOFF2\" class=\"headerlink\" title=\"Convert TTF to WOFF2\"></a>Convert TTF to WOFF2</h3><p>A short detour …</p>\n<p>The Web Open Font Format (WOFF) has been around since 2012. The second version (WOFF2), in which the extremely efficient Brotli compression method is used, was drafted in 2014. All browsers support WOFF2 nowadays, so there is no longer any need to include WOFF, as is often still the case. The same applies to other historical and dead formats EOT and SVG.</p>\n<p>So if you have a font as TTF and want to use it on the web, you can either use the <a href=\"https://github.com/google/woff2\">open source compression from Google</a> on the command line or you can use a free online compressor such as the one from <a href=\"https://webfont.yabe.land/en/misc/convert-ttf-woff2/\">Yabe Webfonts</a>.</p>\n<p>To include the font in your CSS, you ONLY need the following code for modern browsers. If you have to support old favorites like IE 8 or similar, you have completely different problems anyway and should think about changing jobs.</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">@font-face</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">&#x27;MyWebFont&#x27;</span>;</span><br><span class=\"line\">  <span class=\"attribute\">src</span>: <span class=\"built_in\">url</span>(<span class=\"string\">&#x27;myfont.woff2&#x27;</span>) <span class=\"built_in\">format</span>(<span class=\"string\">&#x27;woff2&#x27;</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<p>But back to Lexend and a download that works. All fonts on Google Fonts can also be found on <strong>GitHub</strong> and so there is also a repository for Lexend: <a href=\"https://github.com/googlefonts/lexend\"><strong>googlefonts&#x2F;lexend</strong></a>. In it you will find both TTF and WOFF2 files, at least for the standard font Lexend, although not for the variants (Deca, Lexa, Giga etc.), which I don’t need for my part anyway.</p>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">\\lexend-main\\fonts\\lexend</span><br><span class=\"line\"></span><br><span class=\"line\">+---ttf</span><br><span class=\"line\">      Lexend-Black.ttf</span><br><span class=\"line\">      Lexend-Bold.ttf</span><br><span class=\"line\">      Lexend-ExtraBold.ttf</span><br><span class=\"line\">      Lexend-ExtraLight.ttf</span><br><span class=\"line\">      Lexend-Light.ttf</span><br><span class=\"line\">      Lexend-Medium.ttf</span><br><span class=\"line\">      Lexend-Regular.ttf</span><br><span class=\"line\">      Lexend-SemiBold.ttf</span><br><span class=\"line\">      Lexend-Thin.ttf</span><br><span class=\"line\">       </span><br><span class=\"line\">+---variable</span><br><span class=\"line\">      Lexend[HEXP,wght].ttf</span><br><span class=\"line\">       </span><br><span class=\"line\">+---webfonts</span><br><span class=\"line\">      Lexend-Black.woff2</span><br><span class=\"line\">      Lexend-Bold.woff2</span><br><span class=\"line\">      Lexend-ExtraBold.woff2</span><br><span class=\"line\">      Lexend-ExtraLight.woff2</span><br><span class=\"line\">      Lexend-Light.woff2</span><br><span class=\"line\">      Lexend-Medium.woff2</span><br><span class=\"line\">      Lexend-Regular.woff2</span><br><span class=\"line\">      Lexend-SemiBold.woff2</span><br><span class=\"line\">      Lexend-Thin.woff2</span><br></pre></td></tr></table></figure>\n\n<p>You might have noticed in the files list, that there are <strong>no italic or oblique font faces</strong>. There is a reason for this, because there are currently none for Lexend. Although there is a corresponding GitHub issue (<a href=\"https://github.com/google/fonts/issues/4237\">Update Lexend with Italics</a>), but it hasn’t really been going anywhere for over a year. Richard Hriech did publish a cursive variant called <a href=\"https://github.com/richardhriech/LexendItalic\">LexendItalic</a> last year, but the project looks more like a quick fix created within a day and therefore I haven’t tried it out.<br>However, the absence does not bother me, because according to the W3C, the browser mimics the so-called sloping effect if it cannot find an appropriate font. I think it does this quite well and saves me having to work with additional font files.</p>\n<hr>\n<h2 id=\"The-Integration-Madness\"><a href=\"#The-Integration-Madness\" class=\"headerlink\" title=\"The Integration Madness\"></a>The Integration Madness</h2><p>Let’s get straight to the point: My difficulties in using Lexend here on kiko.io were entirely homemade. Integrating the font made me realize all the CSS mistakes I’ve made in recent years, because Lexend has a significantly different character spacing than OpenSans I’ve been using so far. It has never been a good idea to lean too heavily on typography when designing layouts. The careless mixing of REM and PX was also my downfall. Everything looked pretty shitty … and gave me the incentive to refactor the entire CSS (or Stylus), regardless of whether I would continue to use Lexend or not.</p>\n<p>After many days of standardising, dismantling, recalculating, rewriting and also throwing away, the site had a completely new and better look for me, although (mostly) nothing had changed in the basic structure. The Lexend font, which I find much more suitable, also contributed to this and so I will leave it like that. Whether you can now read my posts faster, as the font promises, is for others to judge.</p>\n<p><button class=\"button\" id=\"fontToggle\" onclick=\"fontToggle();\">Toggle to Open Sans</button></p>\n<script>\n  let bFontToggle = false;\n  function fontToggle() {\n    if (bFontToggle === false) {\n      document.getElementById(\"body\").style.fontFamily = \"Open Sans\";\n      document.getElementById(\"body\").style.fontWeight = 400;\n      document.getElementById(\"fontToggle\").textContent = \"Reset to Lexend\";\n    } else {\n      window.location.reload();\n    }\n    bFontToggle = !bFontToggle;\n  }\n</script>\n\n<hr>\n<h2 id=\"More-Info\"><a href=\"#More-Info\" class=\"headerlink\" title=\"More Info\"></a>More Info</h2><ul>\n<li><a href=\"https://www.lexend.com/\">lexend.com</a></li>\n<li><a href=\"https://www.reddit.com/r/kindle/comments/zwdvil/lexend_italic_version_see_in_comments/?rdt=57956\">Lexend Italic Version</a></li>\n<li><a href=\"https://medium.com/@ace_studio/how-to-convert-a-ttf-variable-font-to-woff2-for-improved-web-performance-3a89da8d3b04\">How to Convert a TTF Variable Font to WOFF2 for Improved Web Performance</a></li>\n<li><a href=\"https://henry.codes/writing/how-to-convert-variable-ttf-font-files-to-woff2/\">How To Convert Variable TTF Font Files To WOFF2</a></li>\n</ul>\n",
            "tags": [
                "CSS",
                "Theming"
            ]
        },
        {
            "id": "https://kiko.io/post/SVWW-vs-Hansa-Rostock-2023-10-29/",
            "url": "https://kiko.io/post/SVWW-vs-Hansa-Rostock-2023-10-29/",
            "title": "SVWW vs. Hansa Rostock @ 2023-10-29",
            "image": "https://kiko.io/images/social-media/SVWW-vs-Hansa-Rostock-2023-10-29.thumb.png",
            "date_published": "2023-10-30T17:56:08.000Z",
            "date_modified": null,
            "content_html": "\n    <div class=\"float-matchgrid\">\n      <img src=\"/images/logos/SV-Wehen-Wiesbaden.svg\" />\n      <span>1:0</span>\n      <img src=\"/images/logos/Hansa-Rostock.svg\" />\n    </div>\n  \n\n<p>Football again. After my <a href=\"/post/SGE-vs-HJK-2023-10-26/\" title=\"SGE vs. HJK @ 2023-10-26\">little excursion into the Europa Conference League</a>, my team from <strong>SV Wehen Wiesbaden</strong> was called upon again on Sunday and with them the fans in the stadium. On the one hand because it was raining (and that is sometimes no fun in the front row) and on the other hand because the boys had won the last away game in Osnabrück and now had the opportunity to temporarily establish themselves in the midfield of the 2. Bundesliga. Another win was needed against an opponent from <strong>Rostock</strong> who, after a good start at the beginning of the season, had lost the last 6 games!</p>\n<p>Since I have no chance to park my car anywhere at the stadium, I have already planned before the season to always go there with the scooter, which is a pure pleasure in the summer. With 10 degrees and light rain it was diemal but rather suboptimal conditions. But anyway…</p>\n<p>I had expected that a lot of police, water cannon and other executive equipment would be on site, as it was already the case at the Schalke game, because the Hansa fans have a pretty bad reputation … But no. Not particularly many Rostockers have taken on the 700 kilometer journey and so the opposing stand was only half full and the police relaxed.</p>\n<span id=\"more\"></span>\n\n<p>The nice old lady to my left (I really have to ask her about her name) was also there again, after missing the last home game due to a wedding, as she told me. The silent one on my right also and also this time he didn’t speak a word, so I’m starting to wonder if he can talk at all. The howler monkeys behind me were of course also there again and they had in the course of the game again plenty of opportunity to insult the referee, opposing players or our coach in the worst way.</p>\n<p>This time there were only 8,600 spectators, which was probably also due to the weather. It was just cold and wet and I felt a bit sorry for the players, especially the goalkeepers. How do you keep warm when you’re standing on the field in shorts and not constantly running back and forth? A football mystery.</p>\n<hr>\n<h2 id=\"The-Game\"><a href=\"#The-Game\" class=\"headerlink\" title=\"The Game\"></a>The Game</h2><p>In the first 30 minutes the game was quite even. You could tell that both teams wanted a win, but the goal attempts, especially from Rostock, were nothing more than puny. Ours did a little better, but the ball still always went past the goal. Both teams were also a bit aggressive, for example, Perea from Rostock annoyed our keeper Stritzel so much that he extended his elbow and Perea sank to the ground like a striving man and rolled back and forth theatrically. An undignified spectacle, which the fans acknowledged with shrill whistles … and the referee with a penalty!</p>\n<p>Stritzel has saved fantastic balls this season, but not a penalty yet … until then, as he parried Kinsombi’s weak shot to the side. Yesss…!</p>\n<p>Nothing much happened until half-time, but our guys were slowly gaining the upper hand, as the game was played almost exclusively in the opponent’s half at the beginning of the second half, with occasional counter-attacks by Rostock, but they were too erratic to have any effect. Our defence stood firm.</p>\n\n      <div class=\"image-masonry\" id=\"image-masonry-64endx\">\n        <div><img class=\"no-caption\" src=\"/post/SVWW-vs-Hansa-Rostock-2023-10-29/PXL_20231029_122726572.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Hansa-Rostock-2023-10-29/PXL_20231029_122837500.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Hansa-Rostock-2023-10-29/PXL_20231029_121402556.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Hansa-Rostock-2023-10-29/PXL_20231029_123926894.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Hansa-Rostock-2023-10-29/PXL_20231029_140540817.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Hansa-Rostock-2023-10-29/PXL_20231029_141750690.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Hansa-Rostock-2023-10-29/PXL_20231029_142643939.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Hansa-Rostock-2023-10-29/PXL_20231029_142901228.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Hansa-Rostock-2023-10-29/PXL_20231029_142951071.jpg\" alt=\"\" /></div>\n      </div>\n      <script>\n        let macy_64endx = new Macy({\n          container: '#image-masonry-64endx',\n          trueOrder: false,\n          waitForImages: false,\n          useOwnImageLoader: false,\n          debug: true,\n          mobileFirst: true,\n          columns: 2,\n          margin: {\n            y: 6,\n            x: 6\n          },\n          breakAt: {\n            980: {\n              margin: {\n                x: 8,\n                y: 8\n              },\n              columns: 3\n            },\n            768: 2,\n            640: 3\n          }\n        });\n      </script>\n    \n\n<p>The increasing control of the game also led to more chances to score, but either it went just over or Rostock keeper Markus Kolke (who played a total of 8 years in Wiesbaden until 2019) fished it out of the corners. The closer we got to the end of the game, the more nervous the fans (or just me and my seatmate) got. OMG, that thing has to go in, now!</p>\n<p>The redemption came in the 89th minute: After a standard, Kolke parried Fechner’s shot forward and Prtajin only had to stick his head out … <strong>1:0</strong>!</p>\n<p>&#x21FE;&nbsp;<a href=\"https://www.kicker.de/wiesbaden-gegen-rostock-2023-bundesliga-4861758/analyse\">Match report on kicker.de</a></p>\n<hr>\n<h2 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h2><p>It was a nerve-wracking, but in the end a happy game. We fans would like to see more of these games, especially if it ends in a win. I haven’t seen our boys lose since I started going to the stadium thsi season. We can keep it up :D</p>\n\n    <a href=\"https://www.kicker.de/2-bundesliga/tabelle\">\n        <img src=\"tabelle-23-10-29.png\" alt=\"Table 2. Liga, Sunday 29. October 2023\" />\n    </a>\n    \n",
            "tags": [
                "SVWW",
                "2. Bundesliga"
            ]
        },
        {
            "id": "https://kiko.io/post/SGE-vs-HJK-2023-10-26/",
            "url": "https://kiko.io/post/SGE-vs-HJK-2023-10-26/",
            "title": "SGE vs. HJK @ 2023-10-26",
            "image": "https://kiko.io/images/social-media/SGE-vs-HJK-2023-10-26.thumb.png",
            "date_published": "2023-10-29T18:59:05.000Z",
            "date_modified": null,
            "content_html": "\n    <div class=\"float-matchgrid\">\n      <img src=\"/images/logos/Eintracht-Frankfurt.svg\" />\n      <span>6:0</span>\n      <img src=\"/images/logos/HJK-Helsinki.svg\" />\n    </div>\n  \n\n<p>My newly awakened love for German soccer reached a small peak last Thursday when my colleague Uli asked me, if I would like to go to the evening match of his favorite club <a href=\"https://en.wikipedia.org/wiki/Eintracht_Frankfurt\"><strong>Eintracht Frankfurt</strong></a> against <a href=\"https://en.wikipedia.org/wiki/Helsingin_Jalkapalloklubi\"><strong>HJK Helsinki</strong></a> as part of the preliminary round of the <a href=\"https://en.wikipedia.org/wiki/UEFA_Europa_Conference_League\">Europa Conference League</a>. He had come by a happy coincidence to two tickets. Of course! Let’s go!</p>\n<p>Now I’m not an Eintracht fan, by any means. In the Rhine-Main area, the Frankfurt club is either hated or loved by the people, because its fan base is a bit more aggressive, i.e. they are disreputable and with them the club. But I’ve never been to the <a href=\"https://de.wikipedia.org/wiki/Waldstadion\">Waldstadion</a> (as it used to be called) or the “Deutsche Bank Park” (as it’s called if you put money on the table), one of the big soccer arenas in Germany, where international matches and other big events are also held regularly.</p>\n<span id=\"more\"></span>\n\n<p>Getting to the stadium was an ordeal, because we had left our cars at the office and taken the cab, but the 55,500 spectators all seemed to want to park right in front of the arena so the traffic jam was immense. The last kilometer through the forest to the stadium and the Jürgen Grabowski grandstand to our seats were tough, at least for Uli, because his knee was hurting as usual. But the anticipation, a beer and an Äppler made up for everything.</p>\n<p>What I found amazing, as a Waldstadion newbie, was that we entered the building at ground level, but came out in row 30. The whole thing thus reminded of a nicely designed giant pit. The lighting of this massive area was perfect and the volume of the fans was loud, but not deafening. An architectural masterpiece. The wall of fans in the home curve with the many oversized flags that were waved throughout was impressive, even if I wondered the whole time, how the fans behind these giant flags would have noticed anything of the game for even a minute. But I think it was not about free view of the people there at all. Only about the atmosphere. I was in any case happy about my seat in row 9 pretty directly on the center line of the field and had to ask the people in the row of seats in front of me once in a while to sit down again so that I could see the game comfortably.</p>\n<p><img src=\"/post/SGE-vs-HJK-2023-10-26/PXL_20231026_185610309.jpg\" alt=\"Fan Block of Eintracht Frankfurt\"></p>\n<p>… vs … (cute)</p>\n<p><img src=\"/post/SGE-vs-HJK-2023-10-26/PXL_20231026_185615213.jpg\" alt=\"Fan Block of HJK Helsinki\"></p>\n<hr>\n<h2 id=\"The-Game\"><a href=\"#The-Game\" class=\"headerlink\" title=\"The Game\"></a>The Game</h2><p>The first 10 minutes of the game were unspectacular. They felt each other out and the Finns played diligently and should have been in the lead after 5 minutes, but got in the 9th minute after some guesswork from the referee with VAR support a penalty against them. </p>\n\n      <div class=\"image-masonry\" id=\"image-masonry-7jfv5s\">\n        <div><img class=\"no-caption\" src=\"/post/SGE-vs-HJK-2023-10-26/PXL_20231026_191040789.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SGE-vs-HJK-2023-10-26/PXL_20231026_191000090.jpg\" alt=\"\" /></div>\n      </div>\n      <script>\n        let macy_7jfv5s = new Macy({\n          container: '#image-masonry-7jfv5s',\n          trueOrder: false,\n          waitForImages: false,\n          useOwnImageLoader: false,\n          debug: true,\n          mobileFirst: true,\n          columns: 2,\n          margin: {\n            y: 6,\n            x: 6\n          },\n          breakAt: {\n            980: {\n              margin: {\n                x: 8,\n                y: 8\n              },\n              columns: 3\n            },\n            768: 2,\n            640: 3\n          }\n        });\n      </script>\n    \n\n \n    <video width=\"100%\" height=\"250px\" controls>\n      <source src=\"/post/SGE-vs-HJK-2023-10-26/PXL_20231026_191126332-short.mp4\" type=\"video/mp4\">\n    </video>\n  \n\n<p>After this 1:0 for Eintracht, the Frankfurt boys whirled themselves into a kind of frenzy of play. More and more fluidly and casually it went in the direction of the Finnish goal and Helsinki could only with effort hold against it. So it was after 30 minutes already 3:0 and at halftime 4:0. The goal to make it 3-0 was a really spectacular one: Omar Marmoush gets the ball in the penalty area and takes a shot, but the ball bounces off an opponent’s legs and comes back to him. He pulls off again and again the ball bounces off the legs of another player back to him. His third attempt was then a fine shot with the outside of his foot past all the players into the goal.</p>\n<p>In the break, the coach of the Finns seems to have been a little louder, because his guys played a little stronger and more determined, only to get another one in the 55th minute.</p>\n<p>With 10 minutes to go, things got emotional in the stadium: the coach substituted Timothy Chandler, a Frankfurt veteran who has been with the club for almost 10 years and his first appearance this season. The tens of thousands of fans were completely out of their minds, screaming “Tiiiimmmyyy” as soon as he got to the ball. It was crazy. How must it feel to be showered with so much fan love! Things almost got out of hand when Chandler sprinted forward on the right flank in the 89th minute and made a wonderful pass into the middle and Dina Ebimbe just had to slot it in for 6:0.</p>\n\n      <div class=\"image-masonry\" id=\"image-masonry-og32t8\">\n        <div><img class=\"no-caption\" src=\"/post/SGE-vs-HJK-2023-10-26/PXL_20231026_183650025.jpg\" alt=\"Attila, the Eintracht Eagle\" /></div><div><img class=\"no-caption\" src=\"/post/SGE-vs-HJK-2023-10-26/PXL_20231026_184409439.jpg\" alt=\"Game Comic\" /></div><div><img class=\"no-caption\" src=\"/post/SGE-vs-HJK-2023-10-26/PXL_20231026_183658672.jpg\" alt=\"Just before kickoff\" /></div><div><img class=\"no-caption\" src=\"/post/SGE-vs-HJK-2023-10-26/PXL_20231026_192703385.jpg\" alt=\"2:0\" /></div><div><img class=\"no-caption\" src=\"/post/SGE-vs-HJK-2023-10-26/PXL_20231026_193136300.jpg\" alt=\"Kickoff after 3:0\" /></div><div><img class=\"no-caption\" src=\"/post/SGE-vs-HJK-2023-10-26/PXL_20231026_205110961.jpg\" alt=\"Final whistle\" /></div><div><img class=\"no-caption\" src=\"/post/SGE-vs-HJK-2023-10-26/PXL_20231026_205742073.jpg\" alt=\"Lap of Honor\" /></div>\n      </div>\n      <script>\n        let macy_og32t8 = new Macy({\n          container: '#image-masonry-og32t8',\n          trueOrder: false,\n          waitForImages: false,\n          useOwnImageLoader: false,\n          debug: true,\n          mobileFirst: true,\n          columns: 2,\n          margin: {\n            y: 6,\n            x: 6\n          },\n          breakAt: {\n            980: {\n              margin: {\n                x: 8,\n                y: 8\n              },\n              columns: 3\n            },\n            768: 2,\n            640: 3\n          }\n        });\n      </script>\n    \n\n<p>&#x21FE;&nbsp;<a href=\"https://www.kicker.de/frankfurt-gegen-hjk-helsinki-2023-europa-conference-league-4890631/spielbericht\">Match report on kicker.de</a></p>\n<hr>\n<h2 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h2><p>It was really an experience to see this game in this arena and even if I would have enjoyed Helsinki sending Frankfurt home 4:0 (my funny tip to Uli before the game), it was nice that he could be happy about the victory.</p>\n",
            "tags": [
                "Eintracht"
            ]
        },
        {
            "id": "https://kiko.io/post/Handling-IPTC-metadata-on-Android-and-Windows/",
            "url": "https://kiko.io/post/Handling-IPTC-metadata-on-Android-and-Windows/",
            "title": "Handling IPTC metadata on Android and Windows",
            "image": "https://kiko.io/images/social-media/Handling-IPTC-metadata-on-Android-and-Windows.thumb.png",
            "date_published": "2023-10-28T12:00:55.000Z",
            "date_modified": null,
            "content_html": "<p>Most of the photos that I prepare for this website for example, I take with my big Nikon camera in RAW format and then edit them under Windows in <strong>Adobe Lightroom Classic</strong>. I always give the image a name and a few keywords, which are then also displayed on the photo page. Lightroom stores these as <a href=\"https://www.iptc.org/standards/photo-metadata/\"><strong>IPTC metadata</strong></a> in the sidecar file and writes them, when exporting the image, directly into the header of the generated JPG file.</p>\n<p>Now, however, I take pictures on the go with my Pixel smartphone and process them with the Google Photos Android app, and although the <strong>IPTC</strong> standard is only 30 years old, <strong>Google doesn’t support it!</strong> You can give the image a “description” but it is not written into the image as a metadata, but is probably lying around somewhere on the Google servers.</p>\n<span id=\"more\"></span>\n\n<p><img src=\"/post/Handling-IPTC-metadata-on-Android-and-Windows/google-photos-properties.png\" alt=\"Google Photos Properties\"></p>\n<p>Downloading the image via Google Photos and giving it a name and a few keywords using on-board tools under Windows doesn’t work either. There is the display of metadata in File Explorer under PROPERTIES and DETAILS, but editing TITLE or DESCRIPTION does not lead to IPTC metadata either, because these are <strong>not supported by Microsoft</strong>.</p>\n<p><img src=\"/post/Handling-IPTC-metadata-on-Android-and-Windows/windows-explorer-properties-metadata.png\" alt=\"Windows Explorer Properties Metadata\"></p>\n<p>Now you can ask yourself why IPTC is not important to the big companies, especially since it doesn’t seem to be the problem technically, as Adobe and other companies prove, but so what … I need a solution for my problem.</p>\n<hr>\n<h2 id=\"Android-Solution\"><a href=\"#Android-Solution\" class=\"headerlink\" title=\"Android Solution\"></a>Android Solution</h2><p>For Android, there is probably no better image metadata app than <a href=\"https://play.google.com/store/apps/details?id=net.xnano.android.exifpro\"><strong>EXIF Pro</strong></a>. Besides the GALLERY, which lists all images on the smartphone, it also has a browser to load other images and it supports all metadata formats, including IPTC. All metadata can be edited, added or deleted if you want to save space, for example.</p>\n<p>In my case, I just have to select the image in the app and use ADD in the IPTC section to select the <code>ObjectName</code> (for the name) and <code>Keywords</code> (for the keywords), enter the values and save the file. Done.</p>\n<p><img src=\"/post/Handling-IPTC-metadata-on-Android-and-Windows/android-exif-pro.png\" alt=\"Android EXIF Pro\"></p>\n<p>The app is based on the platform-independent Perl library <a href=\"https://exiftool.org/\"><strong>ExifTool by Phil Harvey</strong></a> … and as often as you research for ways to manipulate image metadata and whatever platform on the net, you will always come across Phil’s tool. It is the gold standard in this area, so to speak. The list of supported formats is more than impressive and that of meta formats leaves nothing to be desired.</p>\n<hr>\n<h2 id=\"Windows-Solution\"><a href=\"#Windows-Solution\" class=\"headerlink\" title=\"Windows Solution\"></a>Windows Solution</h2><p>My problem described above is actually already solved with the Android solution, but under Windows there is this IPTC gap too and it can be filled with … what do you think … the ExifTool from Phil Harvey ;)</p>\n<p>First of all, ExifTool is a pure command line tool and also comes without an installer or anything like that. For Windows there is a ZIP download with a single file inside: <code>exiftool(-k).exe</code>. You save it in a folder of your choice and drag &amp; drop an image file onto it and the metadata will be displayed in a terminal window. “-k” in the name means that ExifTool is called with this parameter, which makes sure that the terminal window stays open after processing.</p>\n<p>For use in the command line it is best to copy the file and rename it to <code>exiftool.exe</code> or you can download the <a href=\"https://oliverbetz.de/pages/Artikel/ExifTool-for-Windows\">installer variant by Oliver Betz</a>, which also makes a PATH entry to be able to call it from anywhere.</p>\n<p>To add the name and the keywords to a file, the following call is sufficient:</p>\n<figure class=\"highlight cmd\"><figcaption><span>(lines wrapped for readability)</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exiftool </span><br><span class=\"line\">  -overwrite_original</span><br><span class=\"line\">  -iptc:ObjectName=&quot;My New Name&quot;</span><br><span class=\"line\">  -iptc:Keywords=&quot;keyword1,keyword2,keyword3&quot;</span><br><span class=\"line\">  &quot;C:\\Pictures\\MyImage.jpg&quot;</span><br></pre></td></tr></table></figure>\n\n<p>Okay … You don’t buy Windows to use the command line. There is also a GUI called <a href=\"https://exiftool.org/gui/\">ExifToolGUI for Windows v5.xx</a> by Bogdan Hrastnik. It is already more than 10 years old and also comes without an installer, but it works great … if you have understood the somewhat strange concept of workspaces and adding new fields to them, or if you have somehow muddled your way through.</p>\n<p><img src=\"/post/Handling-IPTC-metadata-on-Android-and-Windows/exiftool-gui-edit.png\" alt=\"ExifTool GUI Editing\"></p>\n<hr>\n<h2 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h2><p>I wish IPTC would not only be supported by the <a href=\"https://www.iptc.org/standards/photo-metadata/software-support/\">handful of programs</a>, but like the technical meta format EXIF would become a standard in every image processing software, especially in the Big Five, who neglect it so far. But maybe my contribution here helped you to deal with it.</p>\n",
            "tags": [
                "Windows",
                "Android",
                "Imaging",
                "Metadata"
            ]
        },
        {
            "id": "https://kiko.io/post/Get-and-use-a-dominant-color-that-matches-the-header-image/",
            "url": "https://kiko.io/post/Get-and-use-a-dominant-color-that-matches-the-header-image/",
            "title": "Get and use a dominant color that matches the header image",
            "image": "https://kiko.io/images/social-media/Get-and-use-a-dominant-color-that-matches-the-header-image.thumb.png",
            "date_published": "2023-10-10T13:34:57.000Z",
            "date_modified": null,
            "content_html": "<p>The pages of this website are all structured according to the scheme <strong>Header</strong>, <strong>Content</strong>, <strong>Footer</strong>, where the header contains an individual hero image and, like the footer, has a dark gray background color. I chose dark gray at the time because I needed contrast and it matches all the other colors, since the header image is slowly overlaid by the header background color as you scroll.</p>\n<p>In July last year, in <a href=\"/post/Discoveries-19-Visual-Helpers/\" title=\"Discoveries #19 - Visual Helpers\">Discoveries #19 - Visual Helpers</a>, I introduced two tools that deal with determining the dominant color from an image, and since then I’ve been buzzing around in my head about using one of them to color the header and footer to match the image.</p>\n<p>After a short testing period I decided to use <a href=\"https://github.com/Vibrant-Colors\">Vibrant Colors</a> (also because of the good example by Konstantin Polunin on <a href=\"https://codepen.io/kopol/details/QWjwrPN\">Codepen</a>) and how it works and how I had to adapt the results to my needs I want to highlight in this post.</p>\n<span id=\"more\"></span>\n\n<p>The work on the project <a href=\"https://github.com/Vibrant-Colors/node-vibrant\">node-vibrant</a>, is probably based on <a href=\"https://github.com/jariz/vibrant.js/\">vibrant.js</a> (at least this archived repo refers to it) and is actually a Node.js solution, but you can also just use it in the browser. Since the determination of the total of 6 different colors (<strong>Vibrant</strong>, <strong>Muted</strong> and both with its variants of <strong>Light</strong> und <strong>Dark</strong> mode) from an image can possibly lead to performance problems in the browser, the maintainers have focused on Node.js and also built in a WebWorker solution. My approach is based on the already fully loaded page, including the header image and the display with the original dark gray background color. So the new color is simply icing and thus should not lead to problems.</p>\n<p>Here is an example of the 6 extracted colors with one of my images from Konstantine’s codepen, mentioned above:</p>\n\n    <a href=\"https://codepen.io/kopol/details/QWjwrPN\">\n        <img src=\"codepen-sample-kopol-QWjwrPN.png\" alt=\"Vibrant Codepen Sample\" />\n    </a>\n    \n\n<hr>\n<h2 id=\"Setup\"><a href=\"#Setup\" class=\"headerlink\" title=\"Setup\"></a>Setup</h2><p>The installation is done quickly … Execute <code>npm install node-vibrant</code> in the console, copy out the file <strong>vibrant.min.js</strong> into the distribution script folder and include it into the HTML page header:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/js/dist/vibrant.min.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"Preparation\"><a href=\"#Preparation\" class=\"headerlink\" title=\"Preparation\"></a>Preparation</h2><p>Depending on the size of the image to be read out, the determination may take some time. Therefore, it is advisable, as in my case, not only to compress the images, but also to let them preload in the head of the page. For this you can use the <code>rel=preload</code> mechanism, which ensures that a resource is loaded fast.</p>\n\n    <div>\n        <blockquote><p>The preload value of the <link> element’s rel attribute lets you declare fetch requests in the HTML’s <head>, specifying resources that your page will need very soon, which you want to start loading early in the page lifecycle, before browsers’ main rendering machinery kicks in.</p>\n</blockquote>\n        <cite><a href=\"https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/rel/preload\">--- MDN Web Docs</a></cite>\n    </div>\n  \n\n<p>By adding an ID to the LINK it will be easy later on to get the URL of the image to throw at the library:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;preload&quot;</span> <span class=\"attr\">as</span>=<span class=\"string\">&quot;image&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">id</span>=<span class=\"string\">&quot;photo-preload&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">href</span>=<span class=\"string\">&quot;/photos/normal/20-08 Mallorca-7333.jpg&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">      <span class=\"attr\">imagesrcset</span>=<span class=\"string\">&quot;/photos/mobile/20-08 Mallorca-7333.jpg 480w, /photos/tablet/20-08 Mallorca-7333.jpg 768w&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"Usage-First-Attempt\"><a href=\"#Usage-First-Attempt\" class=\"headerlink\" title=\"Usage, First Attempt\"></a>Usage, First Attempt</h2><p>Thus prepared, it is easy to read out the preferred RGB color value in a script that is embedded in the footer of the page, using Vibrant Color:</p>\n<figure class=\"highlight js\"><figcaption><span>after-footer.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">setVibrantColor</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// get url of preloaded image</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> img = $(<span class=\"string\">&quot;#photo-preload&quot;</span>).<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;href&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// call Vibrant Color</span></span><br><span class=\"line\">  <span class=\"title class_\">Vibrant</span>.<span class=\"title function_\">from</span>(img).<span class=\"title function_\">getPalette</span>().<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">palette</span> =&gt;</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// get vibrant color swatch</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> swatch = palette.<span class=\"property\">Vibrant</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// helper to format output</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"title function_\">_rgbToString</span> = (<span class=\"params\">_rgb</span>) =&gt; <span class=\"string\">`rgb(<span class=\"subst\">$&#123;_rgb[<span class=\"number\">0</span>]&#125;</span>, <span class=\"subst\">$&#123;_rgb[<span class=\"number\">1</span>]&#125;</span>, <span class=\"subst\">$&#123;_rgb[<span class=\"number\">2</span>]&#125;</span>)`</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// get formatted RGB value of swatch</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> rgb = <span class=\"title function_\">_rgbToString</span>(swatch.<span class=\"title function_\">getRgb</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// set new background color to header and footer</span></span><br><span class=\"line\">    $(<span class=\"string\">&quot;#header, #footer&quot;</span>).<span class=\"title function_\">css</span>(<span class=\"string\">&quot;background-color&quot;</span>, rgb);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$(<span class=\"variable language_\">document</span>).<span class=\"title function_\">ready</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  <span class=\"title function_\">setVibrantColor</span>();</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>The MUTED variants were out of the question for me after a bit of trial and error, because for me this color has too little to do with what the eye immediately draws out of the image. This can be seen in the example above: the green of the MUTED colors is by no means dominant. That’s why I decided to use VIBRANT.</p>\n<hr>\n<h2 id=\"Usage-Second-Attempt\"><a href=\"#Usage-Second-Attempt\" class=\"headerlink\" title=\"Usage, Second Attempt\"></a>Usage, Second Attempt</h2><p>But there is also a problem with the VIBRANT variant: under certain circumstances the extracted color is <strong>too bright</strong> for the background with white text in the foreground. Vibrant Color offers the possibility to create matching text colors, but neither worked for me, nor did I want to get away from white. If you additionally offer a dark theme like I do, the selected color will definitely be too light.</p>\n<p>Besides the possibility to read out the RGB color from the so-called swatches, the library also offers the output <a href=\"https://developer.mozilla.org/en-US/docs/Web/CSS/color_value/hsl\">HSL (Hue&#x2F;Saturation&#x2F;Lightness)</a>. By adjusting the L-value downwards, the desired contrast can be achieved again.</p>\n<p>The HSL values in Vibrant Colors are only available as decimal numbers, i.e. it is necessary to convert them using the HSL specification:</p>\n<figure class=\"highlight js\"><figcaption><span>after-footer.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">setVibrantColor</span>(<span class=\"params\">theme</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// get url of preloaded image</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> img = $(<span class=\"string\">&quot;#photo-preload&quot;</span>).<span class=\"title function_\">attr</span>(<span class=\"string\">&quot;href&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// call Vibrant Color</span></span><br><span class=\"line\">  <span class=\"title class_\">Vibrant</span>.<span class=\"title function_\">from</span>(img).<span class=\"title function_\">getPalette</span>().<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">palette</span> =&gt;</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// get vibrant color swatch</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> swatch = palette.<span class=\"property\">Vibrant</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// get HSL from swatch and convert values</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> _hsl = swatch.<span class=\"title function_\">getHsl</span>();</span><br><span class=\"line\">    <span class=\"keyword\">let</span> h = (_hsl[<span class=\"number\">0</span>] * <span class=\"number\">360</span>); <span class=\"comment\">// in relation to the HSL color wheel</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> s = (_hsl[<span class=\"number\">1</span>] * <span class=\"number\">100</span>); <span class=\"comment\">// percentage</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> l = (_hsl[<span class=\"number\">2</span>] * <span class=\"number\">100</span>); <span class=\"comment\">// percentage</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// overwrite l with new fixed hue depending on theme</span></span><br><span class=\"line\">    l = (theme === <span class=\"string\">&quot;dark&quot;</span>) ? <span class=\"number\">20</span> : <span class=\"number\">35</span>; </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// helper to format output, limited to 4 decimal places</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"title function_\">_hslToString</span> = (<span class=\"params\">h, s, l</span>) =&gt; </span><br><span class=\"line\">      <span class=\"string\">`hsl(<span class=\"subst\">$&#123;h.toFixed(<span class=\"number\">4</span>)&#125;</span>, <span class=\"subst\">$&#123;s.toFixed(<span class=\"number\">4</span>)&#125;</span>%, <span class=\"subst\">$&#123;l.toFixed(<span class=\"number\">4</span>)&#125;</span>%)`</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// get formatted HSL value</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> hsl = <span class=\"title function_\">_hslToString</span>(h, s, l);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// set new background color to header and footer</span></span><br><span class=\"line\">    $(<span class=\"string\">&quot;#header, #footer&quot;</span>).<span class=\"title function_\">css</span>(<span class=\"string\">&quot;background-color&quot;</span>, hsl);</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"Usage-Final-Attempt\"><a href=\"#Usage-Final-Attempt\" class=\"headerlink\" title=\"Usage, Final Attempt\"></a>Usage, Final Attempt</h2><p>HSL generally has the problem that colors appear brighter than others depending on the saturation. Therefore, the <a href=\"https://en.wikipedia.org/wiki/HSL_and_HSV\">HSV color model</a> is often preferred, because it corresponds more closely to human color perception.</p>\n<p>A complete conversion to HSV seemed a bit too much for my case. Therefore, I limited myself to downscaling the lightness proportionally from a saturation value of 70%:</p>\n<figure class=\"highlight js\"><figcaption><span>after-footer.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">setVibrantColor</span>(<span class=\"params\">theme</span>) &#123;</span><br><span class=\"line\">    ...</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// overwrite l with new fixed hue depending on theme</span></span><br><span class=\"line\">    l = (theme === <span class=\"string\">&quot;dark&quot;</span>) ? <span class=\"number\">20</span> : <span class=\"number\">35</span>; </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// calculate hue reduction when saturation too high</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> reduce = (s &gt; <span class=\"number\">70</span>) ? <span class=\"number\">10</span> - ((<span class=\"number\">100</span> - s) / <span class=\"number\">4</span>) : <span class=\"number\">0</span>; </span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// take half of reduction when dark theme</span></span><br><span class=\"line\">    l -= (theme === <span class=\"string\">&quot;dark&quot;</span>) ? reduce / <span class=\"number\">2</span> : reduce; </span><br><span class=\"line\"></span><br><span class=\"line\">    ...</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"The-Result\"><a href=\"#The-Result\" class=\"headerlink\" title=\"The Result\"></a>The Result</h3><p>The result convinces me, even if it is not (yet) perfect. But that is primarily due to the choice of the dominant color of the library. According to my color perception, it could be different from time to time … like for example for the page of this post. My eye would have expected some kind of violet. </p>\n<p>But on other pages it works fine, even the reduced lightness, because my header image at the top is darkened too with a gradient to let the text pop out more.</p>\n<img src=\"/post/Get-and-use-a-dominant-color-that-matches-the-header-image/scroll-header-vibrant-back.gif\" title=\"Scrolling with default dark vibrant header background\" style=\"max-width: 40vw\" />\n",
            "tags": [
                "CSS",
                "Imaging",
                "Theming"
            ]
        },
        {
            "id": "https://kiko.io/post/SVWW-vs-HSV-2023-10-07/",
            "url": "https://kiko.io/post/SVWW-vs-HSV-2023-10-07/",
            "title": "SVWW vs. HSV @ 2023-10-07",
            "image": "https://kiko.io/images/social-media/SVWW-vs-HSV-2023-10-07.thumb.png",
            "date_published": "2023-10-07T15:46:04.000Z",
            "date_modified": null,
            "content_html": "\n    <div class=\"float-matchgrid\">\n      <img src=\"/images/logos/SV-Wehen-Wiesbaden.svg\" />\n      <span>1:1</span>\n      <img src=\"/images/logos/Hamburger-SV.svg\" />\n    </div>\n  \n\n<p>Since my youth I am a (small) fan of the <strong>Hamburger Sportverein (HSV)</strong>. Magath, Hrubesch, Keegan were my sporting heroes back then. This was certainly also related to the fact that the club was one of the best in Europe in the early 80s. Two championships, European Cup victory and a strong team left an impression on me. As the last founding member of the 1. Bundesliga, however, it was always in danger of relegation in the last 10 years and then really relegated to the 2. Bundesliga in 2018 after 55 years. What followed were sad attempts to climb back up. Always so close that the saying prevailed: “How can you tell that it’s springtime in Germany? The trees are sprouting and HSV is fucking up the promotion!”</p>\n<p>In my first post in this series, I described how my hometown club from Wiesbaden made it into the 2. Bundeliga and this particular home game this weekend has a special appeal for me, of course. The favorite club from my youth against the one from my present. My Wehen Wiesbaden against my HSV.</p>\n<span id=\"more\"></span>\n\n<p>Unfortunately I missed the game two weeks ago against <strong>Elversberg</strong>, because I had already made a promise to go to Mannheim to the Bundesgartenschau, but maybe it was a good thing, because my team was in a bad mood and lost 0:2. Just like the last away game against <strong>Hannover</strong> (2:0) and the cup game against <strong>RB Leipzig</strong> at home in between (2:3), where I actually wanted to go, but due to a small error in understanding did not get into the stadium. So it was time to go back to the arena, because with me SVWW always had something to cheer about, even if it was just a draw that felt like a win.</p>\n<p>I also have a few HSV fans in my circle of friends and so I made use of my right of first refusal of 4 more tickets for this game. I sat on my permanent seat in the front row and my friends at a few rows behind me. The elderly lady on my left was not present this time, but a nice man who had taken her place was. The silent one on my right did not come at all and his seat thus remained empty.</p>\n<hr>\n<h2 id=\"The-Game\"><a href=\"#The-Game\" class=\"headerlink\" title=\"The Game\"></a>The Game</h2><p>HSV is actually in shape this year to make it back to the Bundesliga. They have already dropped a few points, but have been on the promotion places from the beginning. This year it should be something and accordingly dominant have the Hamburg the game against once again deep standing Wiesbadener also started. Very sure of the ball and winning almost every duel, they were unable to capitalize on this in the first half. They brought the ball very close to the goal, but not into it, and you could tell that the guests were getting a little more annoyed as time went on.</p>\n<p>This was expressed shortly before the half-time break also in a few unsportsmanlike conduct. Dropping and claiming foul play is simply stupid and only provokes catcalls. The one or other time is overall bad referee but also fell for the trick or has made other nonsensical decisions, which caused the “right” fans around me to nastiest insults.</p>\n\n      <div class=\"image-masonry\" id=\"image-masonry-j7x17i\">\n        <div><img class=\"no-caption\" src=\"/post/SVWW-vs-HSV-2023-10-07/PXL_20231007_103936756.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-HSV-2023-10-07/PXL_20231007_104935878.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-HSV-2023-10-07/PXL_20231007_105740138.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-HSV-2023-10-07/PXL_20231007_105912858.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-HSV-2023-10-07/PXL_20231007_110002467.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-HSV-2023-10-07/PXL_20231007_110827714.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-HSV-2023-10-07/PXL_20231007_111728897.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-HSV-2023-10-07/PXL_20231007_123948926.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-HSV-2023-10-07/PXL_20231007_125719562.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-HSV-2023-10-07/PXL_20231007_125751495.jpg\" alt=\"\" /></div>\n      </div>\n      <script>\n        let macy_j7x17i = new Macy({\n          container: '#image-masonry-j7x17i',\n          trueOrder: false,\n          waitForImages: false,\n          useOwnImageLoader: false,\n          debug: true,\n          mobileFirst: true,\n          columns: 2,\n          margin: {\n            y: 6,\n            x: 6\n          },\n          breakAt: {\n            980: {\n              margin: {\n                x: 8,\n                y: 8\n              },\n              columns: 3\n            },\n            768: 2,\n            640: 3\n          }\n        });\n      </script>\n    \n\n<p>After the break, the game continued just as it had stopped a quarter of an hour earlier: HSV played beautifully, safely but ineffectively. They even scored a goal, but it was disallowed for offside. The SVWW was defending with all men in their own half, sometimes desperately, and only rarely managed to counterattack.</p>\n<p>9 minutes before the end, the Wiesbadener were then once in front of the opposing goal and from a rather harmless header and a weak defense of the goalkeeper became a goal! <strong>1:0!</strong> Unbelievable!</p>\n<p>The remaining 9 minutes plus 6 minutes of injury time can be called spectacular: HSV ran frantically and tried everything to put the f***ing ball in the goal and in the 87th minute the ball was actually in our net … <strong>1:1</strong>! But that was not enough for the guests. They kept increasing the pressure to win this game. Partly too hectic and headless, but we had real trouble to fend them off. However, one of these defensive actions in the penalty area led to a penalty kick for HSV in the 97th minute. Damn! No! … but the penalty taker slammed the thing against the crossbar! YESSS!</p>\n<p>&#x21FE;&nbsp;<a href=\"https://www.kicker.de/wiesbaden-gegen-hsv-2023-bundesliga-4861740/spielbericht\">Match report on kicker.de</a></p>\n<hr>\n<h2 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h2><p>Another one of those draws that feels like a win. It’s a pity that it wasn’t enough for a win, but you have to admit that HSV was really a class above. They’re really playing for promotion and we’re playing to stay in the league. What gives me courage is that the Wiesbaden team fights so passionately and never gives up. Every opponent has a very hard time with this defense and that’s a good approach to still play in the 2nd Bundesliga next year.</p>\n\n    <a href=\"https://www.kicker.de/2-bundesliga/tabelle\">\n        <img src=\"tabelle-23-10-07.png\" alt=\"Table 2. Liga, Saturday 07. October 2023\" />\n    </a>\n    \n",
            "tags": [
                "SVWW",
                "2. Bundesliga"
            ]
        },
        {
            "id": "https://kiko.io/post/Majorcan-Details/",
            "url": "https://kiko.io/post/Majorcan-Details/",
            "title": "Majorcan Details",
            "image": "https://kiko.io/images/social-media/Majorcan-Details.thumb.png",
            "date_published": "2023-10-03T11:52:10.000Z",
            "date_modified": null,
            "content_html": "<p>Summer is over and I’m spending some of my free time post-processing in Lightroom the many photos I’ve taken over the past few months. As a casual photographer, I mostly use my vacation and weekend trips to take my Nikon for a walk and let its chip card glow. My better half is constantly wondering why I stopped there or here again, even if she likes the results afterwards. The point is that I am a color-and-shape junkie. Of course I also do landscapes and portraits, but the details of things have done it to me the most. Colors &amp; Shapes …</p>\n<p>In July I was for a few days with friends on a finca in the south of Mallorca and of course I used every opportunity to stick my lens everywhere where there were interesting details to be expected. I don’t know if it had anything to do with the heat, but most of the motifs have a very earthy touch. I probably wanted to stay somewhere underground all the time, because 40 degrees Celsius in the shade was then also a bit too much for me.</p>\n<span id=\"more\"></span>\n\n<p>Usually the best photos end up unnoticed as <a href=\"/post/Pool-Photo-Generator/\" title=\"Pool Photo Generator\">pool photos</a> here on my blog until I use one as a header image, but now I make a separate post out of each set before I publish the individual photos on other sites like <a href=\"https://500px.com/p/kikon\">500px</a> or <a href=\"https://pixelfed.social/kristofz\">Pixelfed</a>.</p>\n\n      <div class=\"photo-list\" id=\"photo-list-7r1kny\">\n        \n        <figure>\n          <a href=\"/photos/23-07 Mallorca-0300\" class=\"no-break\">\n            <img src=\"23-07 Mallorca-0300.jpg\">\n          </a>\n          <figcaption>Lots of Things</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-07 Mallorca-0305\" class=\"no-break\">\n            <img src=\"23-07 Mallorca-0305.jpg\">\n          </a>\n          <figcaption>Mallorquin Letterbox</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-07 Mallorca-0339\" class=\"no-break\">\n            <img src=\"23-07 Mallorca-0339.jpg\">\n          </a>\n          <figcaption>Basket Parking</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-07 Mallorca-0342\" class=\"no-break\">\n            <img src=\"23-07 Mallorca-0342.jpg\">\n          </a>\n          <figcaption>Aigua Tub</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-07 Mallorca-0357\" class=\"no-break\">\n            <img src=\"23-07 Mallorca-0357.jpg\">\n          </a>\n          <figcaption>Tomato Beauties</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-07 Mallorca-0542\" class=\"no-break\">\n            <img src=\"23-07 Mallorca-0542.jpg\">\n          </a>\n          <figcaption>Veltins Crown</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-07 Mallorca-0755\" class=\"no-break\">\n            <img src=\"23-07 Mallorca-0755.jpg\">\n          </a>\n          <figcaption>Rusty Grate</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-07 Mallorca-0758\" class=\"no-break\">\n            <img src=\"23-07 Mallorca-0758.jpg\">\n          </a>\n          <figcaption>Sticker Direction</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-07 Mallorca-0773\" class=\"no-break\">\n            <img src=\"23-07 Mallorca-0773.jpg\">\n          </a>\n          <figcaption>Table Greenery</figcaption>\n        </figure>\n    \n      </div>\n    \n",
            "tags": [
                "Publishing",
                "Imaging"
            ]
        },
        {
            "id": "https://kiko.io/post/Mastodon-Share-Bottom-Sheet-Dialog/",
            "url": "https://kiko.io/post/Mastodon-Share-Bottom-Sheet-Dialog/",
            "title": "Mastodon Share Bottom Sheet Dialog",
            "image": "https://kiko.io/images/social-media/Mastodon-Share-Bottom-Sheet-Dialog.thumb.png",
            "date_published": "2023-09-28T07:57:54.000Z",
            "date_modified": null,
            "content_html": "<p>Social media thrives on sharing. Thoughts, experiences, self-dramatizations or even texts or posts from other people. This is especially true for microblogging on (formerly) Twitter and (today) Mastodon. To make this easy, the platforms often offer a SHARE endpoint (URL), such as the famous</p>\n<p><code>http://www.twitter.com/share?text=My impossible thoughts on X</code></p>\n<p>… or any dirt buttons to collect user data.</p>\n<p>A few months after the groundbreaking of Mastodon 2016, such a feature was also <a href=\"https://github.com/mastodon/mastodon/issues/442\">discussed and implemented</a> on GitHub and out came: </p>\n<p><code>https://&lt;your-instance&gt;/share&amp;text=My benevolent thoughts on the Fediverse</code></p>\n<p>But … where Twitter had it easy due to its central structure (twitter.com … period.), we Mastodon users all fidget around on <strong>different instances</strong>, i.e. each instance has its own <code>/SHARE</code> endpoint and so it’s a bit harder to stick a share button on your own blog, because you have to ask the user where he lives.</p>\n<p>Of course, online services like <a href=\"https://toot.kytta.dev/\">toot.kytta.dev</a>, <a href=\"https://s2f.kytta.dev/\">s2f.kytta.dev</a>, <a href=\"https://mastodonshare.com/\">mastodonshare.com</a> sprouted immediately, but also the button providers expanded their portfolio or new ones were launched, like <a href=\"https://shareon.js.org/\">shareon.js.org</a>, <a href=\"https://share-on-mastodon.social/\">share-on-mastodon.social</a>, <a href=\"https://www.shareaholic.com/website-tools/social-share-buttons/mastodon/\">shareaholic.com</a>.</p>\n<p>But seriously … does it take an external service to ask the user for an instance name and redirect him to an URL (and run the risk of falling victim to data collection mania)? Because that’s all it is. All of the above do it exactly that way.</p>\n<p><img src=\"/post/Mastodon-Share-Bottom-Sheet-Dialog/indieweb-social-share.png\" alt=\"indieweb.social Share\"></p>\n<p>So we come to the ready-made developer solutions e.g. How-To tutorials. Here, too, there are a lot of hits after a search: <a href=\"https://github.com/codesyntax/mastodon-share-button\">Mastodon-share-button (WebComponent)</a>, <a href=\"https://github.com/Aly-ve/Mastodon-share-button\">Mastodon-share-button (JS)</a>, <a href=\"https://www.bentasker.co.uk/posts/documentation/general/adding-a-share-on-mastodon-button-to-a-website.html\">Adding a Share On Mastodon button to a website</a>, <a href=\"https://christianheilmann.com/2023/08/18/adding-a-share-to-mastodon-link-to-any-web-site-and-here/\">Adding a “share to mastodon” link to any web site – and here</a>, <a href=\"\"></a> … and I’ll join them here for my Hexo-driven blog.</p>\n<span id=\"more\"></span>\n\n<hr>\n<h2 id=\"My-Mastodon-Share-Variant\"><a href=\"#My-Mastodon-Share-Variant\" class=\"headerlink\" title=\"My Mastodon Share Variant\"></a>My Mastodon Share Variant</h2><p>It’s really not hard to develop an appealing looking and working JavaScript solution to the “problem”. Where <a href=\"https://toot.cafe/@codepo8\">Christian Heilmann</a> (last link in the list above) relies on a simple <code>window.prompt</code>, I recently introduced my Bottom Sheet dialogs in this blog (<a href=\"/post/Show-pages-meta-data-JSON-LD-in-Bottom-Sheet/\" title=\"Show pages meta data (JSON-LD) in Bottom Sheet\">here</a> and <a href=\"/post/Extension-of-downupPopup-Back-Button-Escape-Key-More/\" title=\"Extension of downupPopup: Back Button, Escape Key &amp; More\">here</a>), which are perfectly suited for this.</p>\n<p>Each shareable post should get a SHARE button that lets a bottom sheet pop out where the user can enter their instance name, which is then remembered for next time, and already contains suggested text (title, description, and url of the post) for the Mastodon toot.</p>\n<h3 id=\"The-Button\"><a href=\"#The-Button\" class=\"headerlink\" title=\"The Button\"></a>The Button</h3><p>In every post the interaction section is rendered and there is now a new button, which calls a new dialog method, described later on:</p>\n<figure class=\"highlight js\"><figcaption><span>themes\\landscape\\layout\\_partial\\post\\interaction.ejs</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">&lt;button onclick=<span class=\"string\">&quot;dialog.shareOnMastodon();&quot;</span> <span class=\"keyword\">class</span>=<span class=\"string\">&quot;share mastodon&quot;</span>&gt;<span class=\"title class_\">Share</span> on <span class=\"title class_\">Mastodon</span>&lt;/button&gt;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Adding-a-dialog-template-to-the-DOM\"><a href=\"#Adding-a-dialog-template-to-the-DOM\" class=\"headerlink\" title=\"Adding a dialog template to the DOM\"></a>Adding a dialog template to the DOM</h3><p>For my dialog I first needed a UI, preferably a template in the DOM to avoid having to fiddle with HTML in the JS code:</p>\n<figure class=\"highlight html\"><figcaption><span>themes\\landscape\\layout\\_partial\\templates\\mastodon-share-dialog.ejs</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;mastodon-share-dialog&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mastodon-share-content&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;mastodon-share-intro&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/images/mastodon.svg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;Mastodon&quot;</span>&gt;</span></span><br><span class=\"line\">        There are many Mastodon instances out there. </span><br><span class=\"line\">        Tell me yours and I will redirect you to the share dialog of your server:</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;mastodon-instance&quot;</span>&gt;</span>Your Mastodon Instance<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;mastodon-instance-wrapper&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>https://<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;mastodon-instance&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;intance&quot;</span> <span class=\"attr\">required</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;mastodon-text&quot;</span>&gt;</span>Text to share ...<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;mastodon-text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">rows</span>=<span class=\"string\">&quot;8&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;mastodon-share&quot;</span>&gt;</span>Share<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>The template is embedded in <code>layout.ejs</code> near the closing HTML tag. It contains mainly an INPUT for the instance name, a TEXTAREA for the suggested text and a button for the action. I’ll leave out the styles here, because if you adopt my implementation, the CSS (or Stylus) will be completely different.</p>\n<h3 id=\"Extending-the-dialog-script\"><a href=\"#Extending-the-dialog-script\" class=\"headerlink\" title=\"Extending the dialog script\"></a>Extending the dialog script</h3><p>Ok … let’s extend the <strong>dialog.js</strong> code, I first described <a href=\"/post/Show-pages-meta-data-JSON-LD-in-Bottom-Sheet/\" title=\"Show pages meta data (JSON-LD) in Bottom Sheet\">here</a>, with a new method as used at the button:</p>\n<figure class=\"highlight js\"><figcaption><span>themes\\landscape\\source\\js\\dialog.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> dpDialog = &#123; </span><br><span class=\"line\">  <span class=\"string\">&#x27;base&#x27;</span>: &#123; ... &#125;,</span><br><span class=\"line\">  <span class=\"string\">&#x27;init&#x27;</span>: <span class=\"keyword\">function</span>(<span class=\"params\">options</span>) &#123; ... &#125;,</span><br><span class=\"line\">  <span class=\"string\">&#x27;show&#x27;</span>: <span class=\"keyword\">function</span>(<span class=\"params\">callback</span>) &#123; ... &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"string\">&#x27;shareOnMastodon&#x27;</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123; </span><br><span class=\"line\">     dpDialog.<span class=\"property\">base</span>.<span class=\"title function_\">init</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">headerText</span>: <span class=\"string\">&quot;Share on Mastodon&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">urlHash</span>: <span class=\"string\">&quot;share&quot;</span>, <span class=\"comment\">// show hash in url</span></span><br><span class=\"line\">      <span class=\"attr\">minContentHeight</span>: <span class=\"number\">400</span>, <span class=\"comment\">// limit height of dialog</span></span><br><span class=\"line\">      <span class=\"attr\">width</span>: <span class=\"string\">&quot;min(600px, 100%)&quot;</span> <span class=\"comment\">// center dialog with max width 600px</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Grab the template and make it a jQuery object</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> content = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;mastodon-share-dialog&quot;</span>).<span class=\"property\">content</span>.<span class=\"title function_\">cloneNode</span>(<span class=\"literal\">true</span>);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> jContent = $(content);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Read the cookie if the user has already used the dialog ...</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> instance = <span class=\"title function_\">getCookie</span>(<span class=\"string\">&quot;mastodon-instance&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (instance) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ... and enter it in the INPUT</span></span><br><span class=\"line\">    jContent.<span class=\"title function_\">find</span>(<span class=\"string\">&quot;#mastodon-instance&quot;</span>).<span class=\"title function_\">val</span>(instance);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Create a suggestion text from the page metadata</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> title = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;meta[name=&quot;title&quot;]&#x27;</span>).<span class=\"property\">content</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> description = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;meta[name=&quot;description&quot;]&#x27;</span>).<span class=\"property\">content</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> permalink = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;link[rel=&quot;canonical&quot;]&#x27;</span>).<span class=\"property\">href</span>;</span><br><span class=\"line\">  jContent.<span class=\"title function_\">find</span>(<span class=\"string\">&quot;#mastodon-text&quot;</span>).<span class=\"title function_\">val</span>(title + <span class=\"string\">&quot;\\n\\n&quot;</span> + description + <span class=\"string\">&quot;\\n\\n&quot;</span> + permalink);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Set the BUTTON action ...</span></span><br><span class=\"line\">  jContent.<span class=\"title function_\">find</span>(<span class=\"string\">&quot;#mastodon-share&quot;</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span>(<span class=\"params\">e</span>) &#123; </span><br><span class=\"line\">    <span class=\"keyword\">const</span> eInstance = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;mastodon-instance&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> eText = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;mastodon-text&quot;</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// Let the browser validate the input attribute REQUIRED</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> isValid = eInstance.<span class=\"title function_\">reportValidity</span>();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (isValid) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// Save the entered instance name to a cookie</span></span><br><span class=\"line\">      <span class=\"title function_\">setCookie</span>(<span class=\"string\">&quot;mastodon-instance&quot;</span>, eInstance.<span class=\"property\">value</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// Generate the share URL for the instance</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> shareUrl = <span class=\"string\">`https://<span class=\"subst\">$&#123;eInstance.value&#125;</span>/share?text=<span class=\"subst\">$&#123;<span class=\"built_in\">encodeURIComponent</span>(eText.value)&#125;</span>`</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// Open the share URL in a new window and close the dialog</span></span><br><span class=\"line\">      <span class=\"variable language_\">window</span>.<span class=\"title function_\">open</span>(shareUrl, <span class=\"string\">&#x27;_blank&#x27;</span>);</span><br><span class=\"line\">      dpDialog.<span class=\"property\">base</span>.<span class=\"property\">element</span>.<span class=\"title function_\">downupPopup</span>(<span class=\"string\">&quot;close&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Add the dialog to the DOM</span></span><br><span class=\"line\">  jContent.<span class=\"title function_\">appendTo</span>(dpDialog.<span class=\"property\">base</span>.<span class=\"property\">content</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Open the dialog and set the focus in the INPUT</span></span><br><span class=\"line\">  dpDialog.<span class=\"property\">base</span>.<span class=\"title function_\">show</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;mastodon-instance&quot;</span>).<span class=\"title function_\">focus</span>();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"The-Result\"><a href=\"#The-Result\" class=\"headerlink\" title=\"The Result\"></a>The Result</h3><p>This is it … and here you can see the result of my implementation:</p>\n<p><img src=\"/post/Mastodon-Share-Bottom-Sheet-Dialog/mastodon-share-dialog.gif\" alt=\"Mastodon Share Dialog on kiko.io\"></p>\n<p>… or look at the button in the bottom right corner and use it ;)</p>\n<p>As I said, it’s just a tool to make it easier for the user to share your content via a URL of their instance to their audience. There is no external stuff, data collection or influence on what is shared. Just JavaScript, HTML running in the browser and one cookie for convenience.</p>\n<p>You can find all files as usual on the GitHub repo of this blog at <a href=\"https://github.com/kristofzerbe/kiko.io\">https://github.com/kristofzerbe/kiko.io</a></p>\n",
            "tags": [
                "Publishing",
                "Social Media",
                "Mastodon",
                "JavaScript"
            ]
        },
        {
            "id": "https://kiko.io/post/Contribute-with-Conventional-Commits/",
            "url": "https://kiko.io/post/Contribute-with-Conventional-Commits/",
            "title": "Contribute with Conventional Commits",
            "image": "https://kiko.io/images/social-media/Contribute-with-Conventional-Commits.thumb.png",
            "date_published": "2023-09-15T15:57:40.000Z",
            "date_modified": null,
            "content_html": "<p>I’ll be honest … I need some Git training. From time to time I contribute small things to GitHub projects and sometimes get confused with all the commands. <code>Fork</code>, <code>Clone</code>, <code>Commit</code>, <code>Stage</code>, <code>Pull Request</code> … all things that mean something to me, but that I certainly haven’t internalized. And so it happens that I sometimes mess up a pull request or something similar.</p>\n<p>Sure, my blog here also lives in GitHub, both in terms of source control and hosting on GitHub Pages, but here I’m the only one committing. No issues, no branches, no pull requests or anything else. I change something, hit commit and I’m done.</p>\n<p>Another point I can’t dismiss: I’m a Windows guy who likes to click buttons. The command line is not for me at all.<br><em>What was the name of the parameter? Do I have to write <code>--param=xxx</code> or <code>/param:xxx</code> … damn where is the button?</em><br>My brain is probably too small for that.</p>\n<p>Visual Studio Code is a big help there … it has buttons! But that doesn’t save me when it comes to Git, because you have to know in which order to press which of these buttons!</p>\n<span id=\"more\"></span>\n\n<p>Yesterday I discovered a small bug in my favorite Mastodon client <a href=\"https://elk.zone/\">Elk</a>, which could be solved with one line of CSS. So … cloned the thing, looked for the source file, inserted the line … and googled how to submit the change on my repo clone as a pull request to the Elk project, and found this great tutorial on Medium from someone, with the name Supritha:</p>\n<p><a href=\"https://levelup.gitconnected.com/how-to-create-a-pull-request-on-github-using-vs-code-f03db28308c4\">&gt;&gt;&gt; How to Create a Pull Request on GitHub using VS Code</a></p>\n<p>Fantastic. The pull request was a breeze. BUT … on the pull request page of Elk on GitHub the first check threw an error regarding <strong>Semantic Pull Request</strong>, with the message the title was wrong … what the heck?</p>\n<p>While I was reading the documentation (after the first attempt to change the title to something reasonable and another failure), one of the Elk developers <a href=\"https://github.com/userquin\">Joaquín</a> was so nice and corrected the title and pointed me to the very doc I was reading:</p>\n<p><strong><a href=\"https://www.conventionalcommits.org/en/v1.0.0/#summary\">&gt;&gt;&gt; Conventional Commits &lt;&lt;&lt;</a></strong></p>\n<p>Okay … I was already happy that nothing went wrong this time, but that was too early, as so often in IT ;)</p>\n<p>Here to read: <a href=\"https://github.com/elk-zone/elk/pull/2394\">fix(ui): Empty lines in posts from Pixelfed are doubled&#x2F;tripled (#2392)</a></p>\n<p>Since I am a structured person, I liked the commit message rules used by the Elk team, because they open up a space to make the commits easier to evaluate automatically afterwards. I think a great help for projects of this scale … currently 202 contributors!</p>\n<p>Actually I don’t have a Git project where the <strong>Convertional Commits</strong> would be useful, but for my future Me … READ THIS POST!</p>\n<p>(And for my employees, in case they read this: I have an idea that we should definitely establish soon … ;)</p>\n",
            "tags": [
                "VS Code",
                "Publishing",
                "Git/GitHub"
            ]
        },
        {
            "id": "https://kiko.io/post/Discoveries-26-JavaScript-HowTo-s/",
            "url": "https://kiko.io/post/Discoveries-26-JavaScript-HowTo-s/",
            "title": "Discoveries #26 - JavaScript HowTo's",
            "image": "https://kiko.io/images/social-media/Discoveries-26-JavaScript-HowTo-s.thumb.png",
            "date_published": "2023-09-12T05:53:45.000Z",
            "date_modified": null,
            "content_html": "<p>Over time, everyone accumulates links somewhere about procedures that one has not yet internalized. This is also the case with me and JavaScript development. “Damn … what was that about Call | Proxy | Map | &lt;You name it&gt;?!”. Here are 11 of them …</p>\n\n        <ul class=\"anchorlist\">\n            <li data-anchor=\"#processing-images-with-sharp-in-node-js\">Processing images with sharp in Node.js</li><li data-anchor=\"#use-console-log-like-a-pro-\">Use console.log() like a pro!</li><li data-anchor=\"#simple-swipe-with-vanilla-javascript\">Simple Swipe with Vanilla JavaScript</li><li data-anchor=\"#the-file-system-access-api-simplifying-access-to-local-files\">The File System Access API: simplifying access to local files</li><li data-anchor=\"#an-introduction-to-webassembly-for-javascript-developers\">An introduction to WebAssembly for JavaScript Developers</li><li data-anchor=\"#getting-started-with-the-map-and-set-typed-collections\">Getting Started with the Map and Set Typed Collections</li><li data-anchor=\"#javascript-currying-a-practical-example\">JavaScript Currying: A Practical Example</li><li data-anchor=\"#how-to-use-the-call-apply-and-bind-functions-in-javascript\">How to Use the Call, Apply, and Bind Functions in JavaScript</li><li data-anchor=\"#how-javascript-s-proxy-object-works\">How JavaScript's Proxy Object Works</li><li data-anchor=\"#javascript-waitfor-polling\">JavaScript waitFor Polling</li><li data-anchor=\"#how-to-measure-page-loading-time-with-performance-api\">How to measure page loading time with Performance API</li>\n        </ul>\n    \n\n<span id=\"more\"></span>\n\n\n    <hr id=\"processing-images-with-sharp-in-node-js\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      Processing images with sharp in Node.js\n    </h2>\n    <small>by Pascal Akunne&nbsp;<br><a href=\"https://blog.logrocket.com/processing-images-sharp-node-js/\">https://blog.logrocket.com/processing-images-sharp-node-js/</a></small>\n    <p>Whenever images are to be processed in a NodeJS application, one is well advised to use the Sharp library. Pascal introduces the most important functions in his article.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://blog.logrocket.com/processing-images-sharp-node-js/\">\n      <img class=\"limit\" src=\"processing-images-with-sharp-in-node-js.png\" alt=\"Processing images with sharp in Node.js\" />\n    </a>\n  \n\n\n    <hr id=\"use-console-log-like-a-pro-\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      Use console.log() like a pro!\n    </h2>\n    <small>by Marko Denic&nbsp;<br><a href=\"https://denic.hashnode.dev/use-consolelog-like-a-pro\">https://denic.hashnode.dev/use-consolelog-like-a-pro</a></small>\n    <p>Using console.log() for JavaScript debugging is the most common practice among developers. But, there is a lot more, as Marko shows us.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://denic.hashnode.dev/use-consolelog-like-a-pro\">\n      <img class=\"limit\" src=\"use-console-log-like-a-pro-.png\" alt=\"Use console.log() like a pro!\" />\n    </a>\n  \n\n\n    <hr id=\"simple-swipe-with-vanilla-javascript\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      Simple Swipe with Vanilla JavaScript\n    </h2>\n    <small>by Ana Tudor&nbsp;<br><a href=\"https://css-tricks.com/simple-swipe-with-vanilla-javascript/\">https://css-tricks.com/simple-swipe-with-vanilla-javascript/</a></small>\n    <p>This 2018 article by Ana walks you step-by-step through implementing swipe gestures using an image gallery example with the least amount of code she could think of.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://css-tricks.com/simple-swipe-with-vanilla-javascript/\">\n      <img class=\"limit\" src=\"simple-swipe-with-vanilla-javascript.png\" alt=\"Simple Swipe with Vanilla JavaScript\" />\n    </a>\n  \n\n\n    <hr id=\"the-file-system-access-api-simplifying-access-to-local-files\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      The File System Access API: simplifying access to local files\n    </h2>\n    <small>by Thomas Steiner & Pete LePage&nbsp;<br><a href=\"https://web.dev/file-system-access/\">https://web.dev/file-system-access/</a></small>\n    <p>The File System Access API allows web apps to read or save changes directly to files and folders on the user&#39;s device. Thomas and Peter, both working at Googles Chrome team, show us with examples how this works.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://web.dev/file-system-access/\">\n      <img class=\"limit\" src=\"the-file-system-access-api-simplifying-access-to-local-files.png\" alt=\"The File System Access API: simplifying access to local files\" />\n    </a>\n  \n\n\n    <hr id=\"an-introduction-to-webassembly-for-javascript-developers\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      An introduction to WebAssembly for JavaScript Developers\n    </h2>\n    <small>by Pascal Pares&nbsp;<br><a href=\"https://pascalpares.appspot.ovh/webassembly-for-javascript-developers/\">https://pascalpares.appspot.ovh/webassembly-for-javascript-developers/</a></small>\n    <p>Pascals article from 2021 is based on the specs of WebAssembly from 2019 and is very useful as an introduction for JavaScript Developers, because it includes a lot of sample code.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://pascalpares.appspot.ovh/webassembly-for-javascript-developers/\">\n      <img class=\"limit\" src=\"an-introduction-to-webassembly-for-javascript-developers.png\" alt=\"An introduction to WebAssembly for JavaScript Developers\" />\n    </a>\n  \n\n\n    <hr id=\"getting-started-with-the-map-and-set-typed-collections\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      Getting Started with the Map and Set Typed Collections\n    </h2>\n    <small>by Robert Laws&nbsp;<br><a href=\"https://javascript.plainenglish.io/javascript-getting-started-with-the-map-and-set-typed-collections-2ba173b0ce9f\">https://javascript.plainenglish.io/javascript-getting-started-with-the-map-and-set-typed-collections-2ba173b0ce9f</a></small>\n    <p>JavaScript has not only the classic arrays to offer, but also other objects for collecting data. Robert has a brief description of Set and Map.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://javascript.plainenglish.io/javascript-getting-started-with-the-map-and-set-typed-collections-2ba173b0ce9f\">\n      <img class=\"limit\" src=\"getting-started-with-the-map-and-set-typed-collections.png\" alt=\"Getting Started with the Map and Set Typed Collections\" />\n    </a>\n  \n\n\n    <hr id=\"javascript-currying-a-practical-example\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      JavaScript Currying: A Practical Example\n    </h2>\n    <small>by Karthick Ragavendran&nbsp;<br><a href=\"https://javascript.plainenglish.io/javascript-currying-practical-example-512cf1099e81\">https://javascript.plainenglish.io/javascript-currying-practical-example-512cf1099e81</a></small>\n    <p>In mathematics and computer science, currying is the technique of converting a function that takes multiple arguments into a sequence of functions, each of which takes a single argument … a better description than Karthick’s introduction I could not think of either</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://javascript.plainenglish.io/javascript-currying-practical-example-512cf1099e81\">\n      <img class=\"limit\" src=\"javascript-currying-a-practical-example.png\" alt=\"JavaScript Currying: A Practical Example\" />\n    </a>\n  \n\n\n    <hr id=\"how-to-use-the-call-apply-and-bind-functions-in-javascript\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      How to Use the Call, Apply, and Bind Functions in JavaScript\n    </h2>\n    <small>by Keyur Paralkar&nbsp;<br><a href=\"https://www.freecodecamp.org/news/understand-call-apply-and-bind-in-javascript-with-examples/\">https://www.freecodecamp.org/news/understand-call-apply-and-bind-in-javascript-with-examples/</a></small>\n    <p>Call, Apply and Bind are not so common in daily JavaScript development, but they are useful tools because they can be used to change the execution context, as Keyur shows us.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://www.freecodecamp.org/news/understand-call-apply-and-bind-in-javascript-with-examples/\">\n      <img class=\"limit\" src=\"how-to-use-the-call-apply-and-bind-functions-in-javascript.png\" alt=\"How to Use the Call, Apply, and Bind Functions in JavaScript\" />\n    </a>\n  \n\n\n    <hr id=\"how-javascript-s-proxy-object-works\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      How JavaScript's Proxy Object Works\n    </h2>\n    <small>by Keyur Paralkar&nbsp;<br><a href=\"https://www.freecodecamp.org/news/javascript-proxy-object/\">https://www.freecodecamp.org/news/javascript-proxy-object/</a></small>\n    <p>Again Keyur. In this post he goes into detail about the proxy object, helps you create another object on behalf of the original object, to get more control over the interaction with the original object</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://www.freecodecamp.org/news/javascript-proxy-object/\">\n      <img class=\"limit\" src=\"how-javascript-s-proxy-object-works.png\" alt=\"How JavaScript's Proxy Object Works\" />\n    </a>\n  \n\n\n    <hr id=\"javascript-waitfor-polling\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      JavaScript waitFor Polling\n    </h2>\n    <small>by David Walsh&nbsp;<br><a href=\"https://davidwalsh.name/waitfor\">https://davidwalsh.name/waitfor</a></small>\n    <p>By now, every JavaScript developer should be familiar with asynchronous programming using async&#x2F;await and Promises. But there are use cases where polling makes more sense, as David shows.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://davidwalsh.name/waitfor\">\n      <img class=\"limit\" src=\"javascript-waitfor-polling.png\" alt=\"JavaScript waitFor Polling\" />\n    </a>\n  \n\n\n    <hr id=\"how-to-measure-page-loading-time-with-performance-api\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      How to measure page loading time with Performance API\n    </h2>\n    <small>by Silvestar Bistrović&nbsp;<br><a href=\"https://www.silvestar.codes/articles/how-to-measure-page-loading-time-with-performance-api/\">https://www.silvestar.codes/articles/how-to-measure-page-loading-time-with-performance-api/</a></small>\n    <p>MDN recommends using the Performance API to gauge the performance of websites and web applications. It’s useful to show how much time did it take to load a page.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://www.silvestar.codes/articles/how-to-measure-page-loading-time-with-performance-api/\">\n      <img class=\"limit\" src=\"how-to-measure-page-loading-time-with-performance-api.png\" alt=\"How to measure page loading time with Performance API\" />\n    </a>\n  \n\n",
            "tags": [
                "Collection"
            ]
        },
        {
            "id": "https://kiko.io/post/Versengold-in-Concert/",
            "url": "https://kiko.io/post/Versengold-in-Concert/",
            "title": "Versengold in Concert",
            "image": "https://kiko.io/images/social-media/Versengold-in-Concert.thumb.png",
            "date_published": "2023-09-10T08:59:19.000Z",
            "date_modified": null,
            "content_html": "<p>Since my youth with I hardrock&#x2F;metal fan, but from good music I let myself convince, even if it does not fit into this scheme. This is what happened with the German medieval&#x2F;folk band <a href=\"https://de.wikipedia.org/wiki/Versengold\"><strong>Versengold</strong></a> from Bremen, to whose concert in Bochum my better half dragged me one day. And what can I say … the guys are so much fun with their easy-going manner, their good, funny and sometimes profound German lyrics and their shanty-like music, from which the North German sailor tradition can be clearly heard.</p>\n<span id=\"more\"></span>\n\n<p>In the meantime we were on two more concerts in Frankfurt, then in Marburg (Open-Air) and in Mainz on the “Night of the Ballads”. Most recently we saw them two weeks ago at the MPS (“Mittelalterlich Phantasie Spectaculum”, a medieval festival) in Speyer, where they played open-air with other bands from the “industry”. On the one hand, I think it’s great that the guys, even if they now fill large halls in Germany, have not forgotten their origins, and on the other hand, I now had the opportunity to get very close to the stage with my camera.</p>\n<p>Here are the results:</p>\n\n      <div class=\"image-masonry\" id=\"image-masonry-ztk0pd\">\n        <div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0092.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0094.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0103.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0104.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0105.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0106.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0108.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0111.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0115.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0123.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0126.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0128.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0131.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0136.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0150.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0151.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0152.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0153.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0156.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0157.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0159.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0162.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0169.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0171.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0172.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0173.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0177.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0179.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0182.jpg\" alt=\"\" /></div>\n      </div>\n      <script>\n        let macy_ztk0pd = new Macy({\n          container: '#image-masonry-ztk0pd',\n          trueOrder: false,\n          waitForImages: false,\n          useOwnImageLoader: false,\n          debug: true,\n          mobileFirst: true,\n          columns: 2,\n          margin: {\n            y: 6,\n            x: 6\n          },\n          breakAt: {\n            980: {\n              margin: {\n                x: 8,\n                y: 8\n              },\n              columns: 3\n            },\n            768: 2,\n            640: 3\n          }\n        });\n      </script>\n    \n\n<p>Love you guys…!</p>\n",
            "tags": [
                "Concert"
            ]
        },
        {
            "id": "https://kiko.io/post/SVWW-vs-Schalke-2023-09-02/",
            "url": "https://kiko.io/post/SVWW-vs-Schalke-2023-09-02/",
            "title": "SVWW vs. Schalke @ 2023-09-02",
            "image": "https://kiko.io/images/social-media/SVWW-vs-Schalke-2023-09-02.thumb.png",
            "date_published": "2023-09-02T15:24:24.000Z",
            "date_modified": null,
            "content_html": "\n    <div class=\"float-matchgrid\">\n      <img src=\"/images/logos/SV-Wehen-Wiesbaden.svg\" />\n      <span>1:1</span>\n      <img src=\"/images/logos/Schalke-04.svg\" />\n    </div>\n  \n\n<p>On this game, some in my circle of friends have feverishly awaited, especially my neighbor and friend, who for years is an ardent fan of one of the traditional clubs <strong>Schalke 04</strong>. We got six additional tickets for the game in time and with a crowd of 11,003 fans, this was also urgently necessary. The stadium (12,566 standing and seated) was full to the roof. Only one of three blocks of the guests was empty. Some Schalke fans seem to have expected nothing from the game in Wiesbaden. No wonder after table position 15 after the last match day.</p>\n<p>Since season ticket holders get into the stadium a little faster and my friends sat a little scattered in different blocks, I lost sight of them at some point, but that was not tragic, because they had fun.</p>\n<p>To my delight, the booth operators, who I had to criticize last time, actually did a better job today. Two cash registers: one for cash and another for card&#x2F;smartphone&#x2F;watch payers. The sale of beer and bratwurst went much more quickly, only I had to stand in line a bit at the fan shop, because I was not yet recognizable as a fan: it had to get a cap and a jersey, of course, finally.</p>\n<span id=\"more\"></span>\n\n<p>My fellow fans in row 1 were rather quiet today, despite the good weather and the atmosphere around. In my back there was now and then a comment like “Now RUN!” or “Go ahead. The goal is in THIS direction!”, but I could understand them, because our team hardly dared to cross the center line in the first half. I still don’t know the name of the nice lady next to me, but I will. She suffered today like many rather quietly.</p>\n<hr>\n<h2 id=\"The-Game\"><a href=\"#The-Game\" class=\"headerlink\" title=\"The Game\"></a>The Game</h2><p>In the first half we were, as they say in the jargon “compact in defense”, which means nothing else, that no one dared to run forward with the ball. Except for once, when after about 20 minutes Kianz Froese, our Canadian striker, ran into the box on the left side at full gallop, but unfortunately missed the goal by a hair’s breadth. Damn! Our team let the opponent play and again straddled every ball off their feet.</p>\n<p>It wasn’t, however, that Schalke dominated the game. We carelessly let them just do it and the fans had their fun when they shot the ball into the clouds again after a lot of roaring and stomping. Funny.</p>\n<p>At the beginning of the second half, this continued seamlessly, even if you noticed that the coach in the cabin must have yelled at one or the other and these were now somewhat more active … and suddenly the ball was in our net … <strong>0:1</strong>! What? How? A goal in the 54. minute for Schalke out of (almost) nothing! I have to watch that again on TV … :|</p>\n\n      <div class=\"image-masonry\" id=\"image-masonry-u1iyym\">\n        <div><img class=\"no-caption\" src=\"/post/SVWW-vs-Schalke-2023-09-02/PXL_20230902_104957617.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Schalke-2023-09-02/PXL_20230902_105327820.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Schalke-2023-09-02/PXL_20230902_105347190.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Schalke-2023-09-02/PXL_20230902_105548827.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Schalke-2023-09-02/PXL_20230902_105749100.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Schalke-2023-09-02/PXL_20230902_124411594.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Schalke-2023-09-02/PXL_20230902_111931000.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Schalke-2023-09-02/PXL_20230902_120730081.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Schalke-2023-09-02/PXL_20230902_125820397.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Schalke-2023-09-02/PXL_20230902_130050774.jpg\" alt=\"\" /></div>\n      </div>\n      <script>\n        let macy_u1iyym = new Macy({\n          container: '#image-masonry-u1iyym',\n          trueOrder: false,\n          waitForImages: false,\n          useOwnImageLoader: false,\n          debug: true,\n          mobileFirst: true,\n          columns: 2,\n          margin: {\n            y: 6,\n            x: 6\n          },\n          breakAt: {\n            980: {\n              margin: {\n                x: 8,\n                y: 8\n              },\n              columns: 3\n            },\n            768: 2,\n            640: 3\n          }\n        });\n      </script>\n    \n\n<p>After our guys had digested the shock, after 10 minutes or so, they began … yes indeed … to play football! Also because Kauczinski had replaced a few snoozers. In the last 20 minutes it went with steam on the opponents goal, but we ran slightly out of time. In the 90th minute, 6 minutes of injury time were displayed and it was almost hectic … kick and rush. With success! In the 95th minute it was <strong>1:1</strong>, thanks to the leg of <strong>Reinthaler</strong>, from which bounced a defensive attempt, and in the 97th almost 2:1 … huuuuh, damn close.</p>\n<p>Before the game I had bet on a 1:1 and was unfortunately&#x2F;fortunately right. <strong>It felt like a victory.</strong></p>\n<p>&#x21FE;&nbsp;<a href=\"https://www.kicker.de/wiesbaden-gegen-schalke-2023-bundesliga-4861704/spielbericht\">Match report on kicker.de</a></p>\n<hr>\n<h2 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h2><p>Today we are in 6th place in the table and I don’t really understand why the team was so anxious. Yes, it’s Schalke 04, but they’re further down so far and we certainly don’t need to hide!</p>\n\n    <a href=\"https://www.kicker.de/2-bundesliga/tabelle\">\n        <img src=\"tabelle-23-09-02.png\" alt=\"Table 2. Liga, Saturday 02. September 2023\" />\n    </a>\n    \n",
            "tags": [
                "SVWW",
                "2. Bundesliga"
            ]
        },
        {
            "id": "https://kiko.io/post/Image-Masonry-Tag-Plugin-for-Hexo/",
            "url": "https://kiko.io/post/Image-Masonry-Tag-Plugin-for-Hexo/",
            "title": "Image Masonry Tag Plugin for Hexo",
            "image": "https://kiko.io/images/social-media/Image-Masonry-Tag-Plugin-for-Hexo.thumb.png",
            "date_published": "2023-09-01T14:07:37.000Z",
            "date_modified": null,
            "content_html": "<p>Displaying a few more images than usual in a post is always a bit tricky, because you have to make sure they don’t get too big and drown out the text. But they should not be too small either and the arrangement is also important to consider.</p>\n<p>For this purpose I have so far used my <a href=\"/post/Hexo-Tag-Plugin-Collection/#image-slide\">Image Slider Tag Plugin</a>, but with this you only ever see one of the images and have to scroll through the rest horizontally. A medium sized overview, best in the so called masonry format, where images are automatically assembled based on their size on a limited area, would be much better for some cases. There are a variety of CSS or JavaScript solutions out there on the net, but the most suitable for me was <a href=\"http://macyjs.com/\"><strong>Macy.js</strong></a> … and how I integrated it into my Hexo environment is what I want to describe here.</p>\n<span id=\"more\"></span>\n\n<p>Like (<a href=\"https://github.com/ganlanyuan/tiny-slider\">Tiny Slider</a>), Macy.js is also based on JavaScript, as the name already expresses. The setup in HTML is very simple: a certain number of wrappers are arranged in a container, each of which contains an image:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;macy-container&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/photos/normal/D50_0053.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/photos/normal/D50_0075.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/photos/normal/D50_0086.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/photos/normal/D50_1092.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/photos/normal/D50_1147.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/photos/normal/D50_1577.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/photos/normal/_D50_3251.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>  </span><br></pre></td></tr></table></figure>\n\n<p>It does not matter whether the images are the same size or whether they are in portrait or landscape format. Macy.js then takes care of the sensible arrangement of the images in the container. All that is missing now is the call to the script:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> macy = <span class=\"keyword\">new</span> <span class=\"title class_\">Macy</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">container</span>: <span class=\"string\">&#x27;#macy-container&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">trueOrder</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"attr\">waitForImages</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"attr\">useOwnImageLoader</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"attr\">debug</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">mobileFirst</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">columns</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">  <span class=\"attr\">margin</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">y</span>: <span class=\"number\">6</span>,</span><br><span class=\"line\">    <span class=\"attr\">x</span>: <span class=\"number\">6</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">breakAt</span>: &#123;</span><br><span class=\"line\">    <span class=\"number\">1024</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">margin</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">x</span>: <span class=\"number\">8</span>,</span><br><span class=\"line\">        <span class=\"attr\">y</span>: <span class=\"number\">8</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"attr\">columns</span>: <span class=\"number\">4</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"number\">768</span>: <span class=\"number\">3</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>For more information on the available parameters (and there are some interesting), please visit <a href=\"https://github.com/bigbite/macy.js\">https://github.com/bigbite/macy.js</a>.</p>\n<hr>\n<h2 id=\"The-Tag-Plugin\"><a href=\"#The-Tag-Plugin\" class=\"headerlink\" title=\"The Tag Plugin\"></a>The Tag Plugin</h2><p>To make it easy for Hexo users, I created a tag plugin from the code above and added it to my <a href=\"https://github.com/kristofzerbe/hexo-tag-plugins#image-masonry\">Hexo Tag Plugin Collection on GitHub</a>.</p>\n<p><strong>Usage Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% image_masonry</span><br><span class=\"line\">  <span class=\"string\">&quot;../../photos/normal/D50_0053.jpg|Thomas&#x27; Ruby Prince I&quot;</span></span><br><span class=\"line\">  <span class=\"string\">&quot;../../photos/normal/_D50_3251.jpg|No Name&quot;</span></span><br><span class=\"line\">  <span class=\"string\">&quot;../../photos/normal/D50_0086.jpg|Thomas&#x27; German Flag&quot;</span></span><br><span class=\"line\">  <span class=\"string\">&quot;../../photos/normal/D50_1147.jpg|Poppy Green&quot;</span></span><br><span class=\"line\">  <span class=\"string\">&quot;../../photos/normal/D50_0075.jpg|Thomas Wild Tulips&quot;</span></span><br><span class=\"line\">  <span class=\"string\">&quot;../../photos/normal/D50_7474.jpg|Garden Beauties XIV&quot;</span></span><br><span class=\"line\">  <span class=\"string\">&quot;../../photos/normal/D50_4451.jpg|Garden Beauties I&quot;</span></span><br><span class=\"line\">  <span class=\"string\">&quot;../../photos/normal/D50_1577.jpg|Floral Magic XIV&quot;</span></span><br><span class=\"line\">%&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>Live Output:</strong></p>\n\n      <div class=\"image-masonry\" id=\"image-masonry-gq0vzg\">\n        <div><img class=\"no-caption\" src=\"/post/Image-Masonry-Tag-Plugin-for-Hexo/../../photos/normal/D50_0053.jpg\" alt=\"Thomas' Ruby Prince I\" /></div><div><img class=\"no-caption\" src=\"/post/Image-Masonry-Tag-Plugin-for-Hexo/../../photos/normal/_D50_3251.jpg\" alt=\"No Name\" /></div><div><img class=\"no-caption\" src=\"/post/Image-Masonry-Tag-Plugin-for-Hexo/../../photos/normal/D50_0086.jpg\" alt=\"Thomas' German Flag\" /></div><div><img class=\"no-caption\" src=\"/post/Image-Masonry-Tag-Plugin-for-Hexo/../../photos/normal/D50_1147.jpg\" alt=\"Poppy Green\" /></div><div><img class=\"no-caption\" src=\"/post/Image-Masonry-Tag-Plugin-for-Hexo/../../photos/normal/D50_0075.jpg\" alt=\"Thomas Wild Tulips\" /></div><div><img class=\"no-caption\" src=\"/post/Image-Masonry-Tag-Plugin-for-Hexo/../../photos/normal/D50_7474.jpg\" alt=\"Garden Beauties XIV\" /></div><div><img class=\"no-caption\" src=\"/post/Image-Masonry-Tag-Plugin-for-Hexo/../../photos/normal/D50_4451.jpg\" alt=\"Garden Beauties I\" /></div><div><img class=\"no-caption\" src=\"/post/Image-Masonry-Tag-Plugin-for-Hexo/../../photos/normal/D50_1577.jpg\" alt=\"Floral Magic XIV\" /></div>\n      </div>\n      <script>\n        let macy_gq0vzg = new Macy({\n          container: '#image-masonry-gq0vzg',\n          trueOrder: false,\n          waitForImages: false,\n          useOwnImageLoader: false,\n          debug: true,\n          mobileFirst: true,\n          columns: 2,\n          margin: {\n            y: 6,\n            x: 6\n          },\n          breakAt: {\n            980: {\n              margin: {\n                x: 8,\n                y: 8\n              },\n              columns: 3\n            },\n            768: 2,\n            640: 3\n          }\n        });\n      </script>\n    \n",
            "tags": [
                "Hexo",
                "GitHub",
                "Plugin"
            ]
        },
        {
            "id": "https://kiko.io/post/Convert-HTML-into-Plain-Text-in-Hexo/",
            "url": "https://kiko.io/post/Convert-HTML-into-Plain-Text-in-Hexo/",
            "title": "Convert HTML into Plain Text in Hexo",
            "image": "https://kiko.io/images/social-media/Convert-HTML-into-Plain-Text-in-Hexo.thumb.png",
            "date_published": "2023-08-31T19:58:36.000Z",
            "date_modified": null,
            "content_html": "<p>Hexo, on which this blog is based, is a Static Site Generator (SSG) that generates a whole structure of HTML files from individual Markdown files in which the articles were written. Besides the actual posts, also overview pages like the archives and others. For the latter, however, it only needs an excerpt from the actual article, which Hexo automatically creates from the initially generated HTML content and which is also available as HTML.</p>\n<p>For my <a href=\"/post/Show-pages-meta-data-JSON-LD-in-Bottom-Sheet/\" title=\"Show pages meta data (JSON-LD) in Bottom Sheet\">Page Meta dialog</a>, however, I recently needed the excerpt as plain text to make it easier to transfer it manually to a Mastodon post, for example. My initial attempts to extract the plain text from the original Markdown turned out to be quite difficult, because in Hexo not only Markdown is used, but also special <a href=\"https://hexo.io/docs/tag-plugins\">Tag Plugins</a> in Nunjucks format and of course plain HTML. Long speech, short sense … after the first dozen RegEx-Replace calls, I got doubts to be on the right way and remembered <code>Page.Excerpt</code>, the variant already generated by Hexo in HTML.</p>\n<span id=\"more\"></span>\n\n<p>Now you would think that JavaScript has some built-in function to extract the plain text out of a bunch of HTML tags, but this is actually not the case. You have to take a little detour to do this:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">convertHtml2PlainText</span>(<span class=\"params\">excerpt</span>) &#123;  </span><br><span class=\"line\">  <span class=\"keyword\">let</span> e = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&quot;div&quot;</span>);</span><br><span class=\"line\">  e.<span class=\"property\">innerHTML</span> = excerpt;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> e.<span class=\"property\">textContent</span> || e.<span class=\"property\">innerText</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> plainText = <span class=\"title function_\">convertHtml2PlainText</span>(page.<span class=\"property\">excerpt</span>);</span><br></pre></td></tr></table></figure>\n\n<p>Fine, my problem is solved … hmm… NO, because Node.js does not know a <code>document</code>, because a DOM exists only in the browser. But … there are libraries like <a href=\"https://github.com/jsdom/jsdom\"><strong>jsdom</strong></a> that make a DOM available in Node.js:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123; <span class=\"variable constant_\">JSDOM</span> &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;jsdom&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">convertHtml2PlainText</span>(<span class=\"params\">excerpt</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> dom = <span class=\"keyword\">new</span> <span class=\"title function_\">JSDOM</span>(<span class=\"string\">&#x27;&lt;!DOCTYPE html&gt;&#x27;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> e = dom.<span class=\"property\">window</span>.<span class=\"property\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&quot;div&quot;</span>);</span><br><span class=\"line\">  e.<span class=\"property\">innerHTML</span> = excerpt;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> e.<span class=\"property\">textContent</span> || e.<span class=\"property\">innerText</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> plainText = <span class=\"title function_\">convertHtml2PlainText</span>(page.<span class=\"property\">excerpt</span>);</span><br></pre></td></tr></table></figure>\n\n<p>Nice … but also doesn’t work, because I need the piece of code in an <a href=\"https://ejs.co/\"><strong>EJS</strong></a> template, but when processing the same to HTML, the included JavaScript code is executed, but loading external libraries via <code>require()</code> is not supported.</p>\n<p>And once again Hexo’s <a href=\"https://hexo.io/api/helper.html\">Tag Helpers</a> come to my rescue:</p>\n<figure class=\"highlight js\"><figcaption><span>helper-excerpt-plain.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123; <span class=\"variable constant_\">JSDOM</span> &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;jsdom&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.<span class=\"property\">extend</span>.<span class=\"property\">helper</span>.<span class=\"title function_\">register</span>(<span class=\"string\">&#x27;excerpt_plain&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">excerpt</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> dom = <span class=\"keyword\">new</span> <span class=\"title function_\">JSDOM</span>(<span class=\"string\">&#x27;&lt;!DOCTYPE html&gt;&#x27;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> e = dom.<span class=\"property\">window</span>.<span class=\"property\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&quot;div&quot;</span>);</span><br><span class=\"line\">  e.<span class=\"property\">innerHTML</span> = excerpt;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> e.<span class=\"property\">textContent</span> || e.<span class=\"property\">innerText</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>For the sake of beauty, I also cut out leading and double line breaks after the conversion and put the result in a custom meta tag in the head of the HTML page to have access to it later via JavaScript running in the browser: </p>\n<figure class=\"highlight js\"><figcaption><span>head.ejs</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> excerpt = <span class=\"title function_\">excerpt_plain</span>(page.<span class=\"property\">excerpt</span>)</span><br><span class=\"line\">  .<span class=\"title function_\">replace</span>(<span class=\"regexp\">/^(\\r\\n|\\n|\\r)/</span>, <span class=\"string\">&quot;&quot;</span>) <span class=\"comment\">// Remove leading break</span></span><br><span class=\"line\">  .<span class=\"title function_\">replace</span>(<span class=\"regexp\">/(\\r\\n|\\n|\\r)&#123;2,&#125;/g</span>, <span class=\"string\">&quot; &quot;</span>) <span class=\"comment\">// Remove multiple breaks</span></span><br><span class=\"line\">  .<span class=\"title function_\">trim</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=<span class=\"string\">&quot;excerpt&quot;</span> content=<span class=\"string\">&quot;&lt;%= excerpt %&gt;&quot;</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p>Et voilá … I have my excerpt as plain text to show in my Page Meta dialog.</p>\n",
            "tags": [
                "Hexo",
                "Node.js",
                "Meta"
            ]
        },
        {
            "id": "https://kiko.io/post/Pool-Photo-Generator/",
            "url": "https://kiko.io/post/Pool-Photo-Generator/",
            "title": "Pool Photo Generator",
            "image": "https://kiko.io/images/social-media/Pool-Photo-Generator.thumb.png",
            "date_published": "2023-08-20T22:00:00.000Z",
            "date_modified": null,
            "content_html": "<p>Since the existence of this blog, the posts all have a custom header image that I generate from my own photos. Already three years ago (omg … really?) I described in an article how to do this with Hexo: <a href=\"/post/Automatic-Header-Images-in-Hexo/\" title=\"Automatic Header Images in Hexo\">Automatic Header Images in Hexo</a>.</p>\n<p>To keep it short, I use a pool folder for this, in which I keep in subfolders next to a <code>meta.txt</code>, for the title of the image and an external url on 500px for interactions to the image, three variants that I need for a new post:</p>\n<ul>\n<li>mobile.jpg (width 480px)</li>\n<li>tablet.jpg (width 768px)</li>\n<li>normal.jpg (width 1280px)</li>\n</ul>\n<p>The only piece of the puzzle that was still missing was the automatic generation of these three image variants and the meta file based on a selected photo that I want to add to the pool of available header images. So far it was fun to generate the header images manually either on the desktop or on the smartphone, but it really doesn’t have to be. My goal now was to write a script where I just throw a selected photo into a folder and the NodeJS script does the rest.</p>\n<p>My photo workflow is based on Adobe Lightroom Classic and one of the steps is to give a title to the good ones I use here as well. So the script had to include four steps when iterating over the inbound folder’s JPG files:</p>\n<ol>\n<li>create new pool folder</li>\n<li>read meta data (IPTC -&gt; title) and write it to meta.txt</li>\n<li>create the three image variants</li>\n<li>delete the processed image from the inbound folder</li>\n</ol>\n<span id=\"more\"></span>\n\n<hr>\n<h2 id=\"The-Script\"><a href=\"#The-Script\" class=\"headerlink\" title=\"The Script\"></a>The Script</h2><p>I implemented the script as a class with the following skeleton:</p>\n<figure class=\"highlight js\"><figcaption><span>pool-photo-generator.cjs</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&#x27;use strict&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">[requirements ...]</span><br><span class=\"line\"></span><br><span class=\"line\">[vars ...]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">PoolPhotoGenerator</span> &#123; </span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * Contructor of PoolPhotoGenerator</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">String</span>&#125; inboundFolder </span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">String</span>&#125; poolFolder </span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">inboundFolder, poolFolder</span>) &#123; ... &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * Runs the generation of inbound photos to pool photos</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"title function_\">generate</span>(<span class=\"params\"></span>) &#123; ... &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * Helper function to create image variant</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">String</span>&#125; imgSource </span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">String</span>&#125; imgTarget </span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">Number</span>&#125; sizeWidth </span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"keyword\">async</span> <span class=\"title function_\">createImageVariant</span>(<span class=\"params\">imgSource, imgTarget, sizeWidth</span>) &#123; ... &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>.<span class=\"property\">PoolPhotoGenerator</span> = <span class=\"title class_\">PoolPhotoGenerator</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Requirements\"><a href=\"#Requirements\" class=\"headerlink\" title=\"Requirements\"></a>Requirements</h3><p>To handle files and folders in NodeJS you need at least <code>fs</code> and <code>path</code>:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;fs&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;path&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>For image processing there’s no better solution as <a href=\"https://sharp.pixelplumbing.com/\">Sharp</a>:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> sharp = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;sharp&#x27;</span>);</span><br><span class=\"line\">sharp.<span class=\"title function_\">cache</span>(<span class=\"literal\">false</span>); <span class=\"comment\">//prevents keeping source file open</span></span><br></pre></td></tr></table></figure>\n\n<p>Similarly powerful, but intended for reading image metadata is <a href=\"https://mutiny.cz/exifr/\">EXIFR</a>:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> exifr = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;exifr&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Vars\"><a href=\"#Vars\" class=\"headerlink\" title=\"Vars\"></a>Vars</h3><p>I just needed three vars for holding the full qualified path of the current execution folder and the names of the two incoming parameters:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> _currentPath = __dirname;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> _inboundFolder;</span><br><span class=\"line\"><span class=\"keyword\">let</span> _poolFolder;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Constructor\"><a href=\"#Constructor\" class=\"headerlink\" title=\"Constructor\"></a>Constructor</h3><p>In this case, the constructor only serves to provide and check the necessary parameters of the class:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">constructor</span>(<span class=\"params\">inboundFolder, poolFolder</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  _inboundFolder = path.<span class=\"title function_\">join</span>(_currentPath, inboundFolder);</span><br><span class=\"line\">  _poolFolder = path.<span class=\"title function_\">join</span>(_currentPath, poolFolder);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!fs.<span class=\"title function_\">existsSync</span>(_inboundFolder)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"string\">&quot;Inbound folder not found&quot;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!fs.<span class=\"title function_\">existsSync</span>(_poolFolder)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"string\">&quot;Pool folder not found&quot;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Function-‘generate’\"><a href=\"#Function-‘generate’\" class=\"headerlink\" title=\"Function ‘generate’\"></a>Function ‘generate’</h3><p>This is the main function to call, and it first reads the input folder for JPG and cycles through all the hits. Then for each file the above four steps are executed:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">generate</span>(<span class=\"params\"></span>) &#123; </span><br><span class=\"line\">    <span class=\"keyword\">let</span> self = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> inboundFiles = fs.<span class=\"title function_\">readdirSync</span>(_inboundFolder);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> jpgFiles = inboundFiles.<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">file</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> path.<span class=\"title function_\">extname</span>(file).<span class=\"title function_\">toLowerCase</span>() === <span class=\"string\">&quot;.jpg&quot;</span>;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    jpgFiles.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">file</span>) =&gt;</span> &#123; </span><br><span class=\"line\">      <span class=\"keyword\">const</span> imgFile = path.<span class=\"title function_\">join</span>(_inboundFolder, file);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// Step 1: Create new pool folder</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> newPhotoFolder = path.<span class=\"title function_\">join</span>(_poolFolder, file.<span class=\"title function_\">replace</span>(path.<span class=\"title function_\">extname</span>(file), <span class=\"string\">&#x27;&#x27;</span>));</span><br><span class=\"line\">        fs.<span class=\"title function_\">mkdirSync</span>(newPhotoFolder);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// Step 2: Read TITLE from IPTC and write to meta.txt</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> iptcMeta = exifr.<span class=\"title function_\">parse</span>(imgFile, &#123; <span class=\"attr\">iptc</span>: <span class=\"literal\">true</span> &#125;).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">output</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> title = output.<span class=\"property\">ObjectName</span> || <span class=\"string\">&quot;No Title&quot;</span>;</span><br><span class=\"line\">        fs.<span class=\"title function_\">writeFile</span>(path.<span class=\"title function_\">join</span>(newPhotoFolder, <span class=\"string\">&quot;meta.txt&quot;</span>), title);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// Step 3: Create image variants</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> createMobile = self.<span class=\"title function_\">createImageVariant</span>(imgFile, path.<span class=\"title function_\">join</span>(newPhotoFolder, <span class=\"string\">&quot;mobile.jpg&quot;</span>), <span class=\"number\">480</span>);</span><br><span class=\"line\">      <span class=\"keyword\">const</span> createTablet = self.<span class=\"title function_\">createImageVariant</span>(imgFile, path.<span class=\"title function_\">join</span>(newPhotoFolder, <span class=\"string\">&quot;tablet.jpg&quot;</span>), <span class=\"number\">768</span>);</span><br><span class=\"line\">      <span class=\"keyword\">const</span> createNormal = self.<span class=\"title function_\">createImageVariant</span>(imgFile, path.<span class=\"title function_\">join</span>(newPhotoFolder, <span class=\"string\">&quot;normal.jpg&quot;</span>), <span class=\"number\">1280</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// Step 4: Delete processed JPG in inbound folder, when everything is done</span></span><br><span class=\"line\">      <span class=\"title class_\">Promise</span>.<span class=\"title function_\">all</span>([</span><br><span class=\"line\">          iptcMeta, </span><br><span class=\"line\">          createMobile, </span><br><span class=\"line\">          createTablet, </span><br><span class=\"line\">          createNormal</span><br><span class=\"line\">        ]).<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">          fs.<span class=\"title function_\">unlinkSync</span>(imgFile);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Function-‘createImageVariant’\"><a href=\"#Function-‘createImageVariant’\" class=\"headerlink\" title=\"Function ‘createImageVariant’\"></a>Function ‘createImageVariant’</h3><p>This helper function reduces the original image to the desired size and saves it in the destination (pool) folder as a JPG:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"title function_\">createImageVariant</span>(<span class=\"params\">imgSource, imgTarget, sizeWidth</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">await</span> <span class=\"title function_\">sharp</span>(imgSource)</span><br><span class=\"line\">    .<span class=\"title function_\">resize</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">fit</span>: sharp.<span class=\"property\">fit</span>.<span class=\"property\">contain</span>,</span><br><span class=\"line\">      <span class=\"attr\">width</span>: sizeWidth</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .<span class=\"title function_\">jpeg</span>(&#123; <span class=\"attr\">quality</span>: <span class=\"number\">90</span>, <span class=\"attr\">mozjpeg</span>: <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\">    .<span class=\"title function_\">toFile</span>(imgTarget);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>In the above code I have omitted some syntactical sugar. You can find the complete script here: <a href=\"https://github.com/kristofzerbe/kiko.io/blob/master/lib/pool-photo-generator.cjs\">https://github.com/kristofzerbe/kiko.io/blob/master/lib/pool-photo-generator.cjs</a></p>\n<hr>\n<h2 id=\"The-Runner\"><a href=\"#The-Runner\" class=\"headerlink\" title=\"The Runner\"></a>The Runner</h2><p>I integrated the call to the generator into my Hexo workflow, but also wrote a small runner to run it independently:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * This is only for executing the selector manually. </span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\"> * Execution:</span></span><br><span class=\"line\"><span class=\"comment\"> * node &quot;./lib/_run_pool-photo-generator.cjs&quot;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">PoolPhotoGenerator</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;../lib/pool-photo-generator.cjs&quot;</span>).<span class=\"property\">PoolPhotoGenerator</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> inboundFolder = <span class=\"string\">&quot;../new_photos&quot;</span>; <span class=\"comment\">//my inbound folder</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> poolFolder = <span class=\"string\">&quot;../static/pool&quot;</span>; <span class=\"comment\">//my pool folder</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> generator = <span class=\"keyword\">new</span> <span class=\"title class_\">PoolPhotoGenerator</span>(inboundFolder, poolFolder);</span><br><span class=\"line\">generator.<span class=\"title function_\">generate</span>();</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h2><p>Last but not least, in my existing Lightroom workflow, I configured the wonderful <a href=\"http://regex.info/blog/lightroom-goodies/collection-publisher\">plugin Jeffrey’s “Collection Publisher”</a> to create the new pool photos directly through it into the Inbound folder. Once the changes are committed to Github, where the blog is hosted and the deployment action happens, the new header images are created and displayed at <a href=\"https://kiko.io/photos\">https:\\kiko.io\\photos</a> and are available for a new post.</p>\n",
            "tags": [
                "Imaging",
                "Node.js"
            ]
        }
    ]
}