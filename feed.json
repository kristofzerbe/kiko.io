{
    "version": "https://jsonfeed.org/version/1",
    "title": "kiko.io Posts",
    "description": "Blog about memorable tech stuff by Kristof Zerbe",
    "home_page_url": "https://kiko.io",
    "feed_url": "https://kiko.io/feed.json",
    "icon": "https://kiko.io/images/icon-72x72.png",
    "favicon": "https://kiko.io/images/favicon-32x32.png",
    "author": {
        "name": "Kristof Zerbe",
        "url": "https://kiko.io",
        "avatar": "https://kiko.io/images/kristof-zerbe.png"
    },
    "items": [
        {
            "id": "https://kiko.io/post/SVWW-vs-HSV-2023-10-07/",
            "url": "https://kiko.io/post/SVWW-vs-HSV-2023-10-07/",
            "title": "SVWW vs. HSV @ 2023-10-07",
            "image": "https://kiko.io/images/social-media/SVWW-vs-HSV-2023-10-07.thumb.png",
            "date_published": "2023-10-07T15:46:04.000Z",
            "date_modified": null,
            "content_html": "<p>Since my youth I am a (small) fan of the <strong>Hamburger Sportverein (HSV)</strong>. Magath, Hrubesch, Keegan were my sporting heroes back then. This was certainly also related to the fact that the club was one of the best in Europe in the early 80s. Two championships, European Cup victory and a strong team left an impression on me. As the last founding member of the 1. Bundesliga, however, it was always in danger of relegation in the last 10 years and then really relegated to the 2. Bundesliga in 2018 after 55 years. What followed were sad attempts to climb back up. Always so close that the saying prevailed: “How can you tell that it’s springtime in Germany? The trees are sprouting and HSV is fucking up the promotion!”</p>\n<p>In my first post in this series, I described how my hometown club from Wiesbaden made it into the 2. Bundeliga and this particular home game this weekend has a special appeal for me, of course. The favorite club from my youth against the one from my present. My Wehen Wiesbaden against my HSV.</p>\n<span id=\"more\"></span>\n\n<p>Unfortunately I missed the game two weeks ago against <strong>Elversberg</strong>, because I had already made a promise to go to Mannheim to the Bundesgartenschau, but maybe it was a good thing, because my team was in a bad mood and lost 0:2. Just like the last away game against <strong>Hannover</strong> (2:0) and the cup game against <strong>RB Leipzig</strong> at home in between (2:3), where I actually wanted to go, but due to a small error in understanding did not get into the stadium. So it was time to go back to the arena, because with me SVWW always had something to cheer about, even if it was just a draw that felt like a win.</p>\n<p>I also have a few HSV fans in my circle of friends and so I made use of my right of first refusal of 4 more tickets for this game. I sat on my permanent seat in the front row and my friends at a few rows behind me. The elderly lady on my left was not present this time, but a nice man who had taken her place was. The silent one on my right did not come at all and his seat thus remained empty.</p>\n<hr>\n<h2 id=\"The-Game\"><a href=\"#The-Game\" class=\"headerlink\" title=\"The Game\"></a>The Game</h2><p>HSV is actually in shape this year to make it back to the Bundesliga. They have already dropped a few points, but have been on the promotion places from the beginning. This year it should be something and accordingly dominant have the Hamburg the game against once again deep standing Wiesbadener also started. Very sure of the ball and winning almost every duel, they were unable to capitalize on this in the first half. They brought the ball very close to the goal, but not into it, and you could tell that the guests were getting a little more annoyed as time went on.</p>\n<p>This was expressed shortly before the half-time break also in a few unsportsmanlike conduct. Dropping and claiming foul play is simply stupid and only provokes catcalls. The one or other time is overall bad referee but also fell for the trick or has made other nonsensical decisions, which caused the “right” fans around me to nastiest insults.</p>\n\n      <div class=\"image-masonry\" id=\"image-masonry-kpr3xu\">\n        <div><img class=\"no-caption\" src=\"/post/SVWW-vs-HSV-2023-10-07/PXL_20231007_103936756.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-HSV-2023-10-07/PXL_20231007_104935878.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-HSV-2023-10-07/PXL_20231007_105740138.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-HSV-2023-10-07/PXL_20231007_105912858.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-HSV-2023-10-07/PXL_20231007_110002467.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-HSV-2023-10-07/PXL_20231007_110827714.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-HSV-2023-10-07/PXL_20231007_111728897.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-HSV-2023-10-07/PXL_20231007_123948926.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-HSV-2023-10-07/PXL_20231007_125719562.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-HSV-2023-10-07/PXL_20231007_125751495.jpg\" alt=\"\" /></div>\n      </div>\n      <script>\n        let macy = new Macy({\n          container: '#image-masonry-kpr3xu',\n          trueOrder: false,\n          waitForImages: false,\n          useOwnImageLoader: false,\n          debug: true,\n          mobileFirst: true,\n          columns: 2,\n          margin: {\n            y: 6,\n            x: 6\n          },\n          breakAt: {\n            980: {\n              margin: {\n                x: 8,\n                y: 8\n              },\n              columns: 3\n            },\n            768: 2,\n            640: 3\n          }\n        });\n      </script>\n    \n\n<p>After the break, the game continued just as it had stopped a quarter of an hour earlier: HSV played beautifully, safely but ineffectively. They even scored a goal, but it was disallowed for offside. The SVWW was defending with all men in their own half, sometimes desperately, and only rarely managed to counterattack.</p>\n<p>9 minutes before the end, the Wiesbadener were then once in front of the opposing goal and from a rather harmless header and a weak defense of the goalkeeper became a goal! <strong>1:0!</strong> Unbelievable!</p>\n<p>The remaining 9 minutes plus 6 minutes of injury time can be called spectacular: HSV ran frantically and tried everything to put the f***ing ball in the goal and in the 87th minute the ball was actually in our net … <strong>1:1</strong>! But that was not enough for the guests. They kept increasing the pressure to win this game. Partly too hectic and headless, but we had real trouble to fend them off. However, one of these defensive actions in the penalty area led to a penalty kick for HSV in the 97th minute. Damn! No! … but the penalty taker slammed the thing against the crossbar! YESSS!</p>\n<p>&#x21FE;&nbsp;<a href=\"https://www.kicker.de/wiesbaden-gegen-hsv-2023-bundesliga-4861740/spielbericht\">Match report on kicker.de</a></p>\n<hr>\n<h2 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h2><p>Another one of those draws that feels like a win. It’s a pity that it wasn’t enough for a win, but you have to admit that HSV was really a class above. They’re really playing for promotion and we’re playing to stay in the league. What gives me courage is that the Wiesbaden team fights so passionately and never gives up. Every opponent has a very hard time with this defense and that’s a good approach to still play in the 2nd Bundesliga next year.</p>\n\n    <a href=\"https://www.kicker.de/2-bundesliga/tabelle\">\n        <img src=\"tabelle-23-10-07.png\" alt=\"Table 2. Liga, Saturday 07. October 2023\" />\n    </a>\n    \n",
            "tags": [
                "SVWW",
                "2. Bundesliga"
            ]
        },
        {
            "id": "https://kiko.io/post/Majorcan-Details/",
            "url": "https://kiko.io/post/Majorcan-Details/",
            "title": "Majorcan Details",
            "image": "https://kiko.io/images/social-media/Majorcan-Details.thumb.png",
            "date_published": "2023-10-03T11:52:10.000Z",
            "date_modified": null,
            "content_html": "<p>Summer is over and I’m spending some of my free time post-processing in Lightroom the many photos I’ve taken over the past few months. As a casual photographer, I mostly use my vacation and weekend trips to take my Nikon for a walk and let its chip card glow. My better half is constantly wondering why I stopped there or here again, even if she likes the results afterwards. The point is that I am a color-and-shape junkie. Of course I also do landscapes and portraits, but the details of things have done it to me the most. Colors &amp; Shapes …</p>\n<p>In July I was for a few days with friends on a finca in the south of Mallorca and of course I used every opportunity to stick my lens everywhere where there were interesting details to be expected. I don’t know if it had anything to do with the heat, but most of the motifs have a very earthy touch. I probably wanted to stay somewhere underground all the time, because 40 degrees Celsius in the shade was then also a bit too much for me.</p>\n<span id=\"more\"></span>\n\n<p>Usually the best photos end up unnoticed as <a href=\"/post/Pool-Photo-Generator/\" title=\"Pool Photo Generator\">pool photos</a> here on my blog until I use one as a header image, but now I make a separate post out of each set before I publish the individual photos on other sites like <a href=\"https://500px.com/p/kikon\">500px</a> or <a href=\"https://pixelfed.social/kristofz\">Pixelfed</a>.</p>\n\n      <div class=\"photo-list\" id=\"photo-list-izdo9w\">\n        \n        <figure>\n          <a href=\"/photos/23-07 Mallorca-0300\" class=\"no-break\">\n            <img src=\"23-07 Mallorca-0300.jpg\">\n          </a>\n          <figcaption>Lots of Things</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-07 Mallorca-0305\" class=\"no-break\">\n            <img src=\"23-07 Mallorca-0305.jpg\">\n          </a>\n          <figcaption>Mallorquin Letterbox</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-07 Mallorca-0339\" class=\"no-break\">\n            <img src=\"23-07 Mallorca-0339.jpg\">\n          </a>\n          <figcaption>Basket Parking</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-07 Mallorca-0342\" class=\"no-break\">\n            <img src=\"23-07 Mallorca-0342.jpg\">\n          </a>\n          <figcaption>Aigua Tub</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-07 Mallorca-0357\" class=\"no-break\">\n            <img src=\"23-07 Mallorca-0357.jpg\">\n          </a>\n          <figcaption>Tomato Beauties</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-07 Mallorca-0542\" class=\"no-break\">\n            <img src=\"23-07 Mallorca-0542.jpg\">\n          </a>\n          <figcaption>Veltins Crown</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-07 Mallorca-0755\" class=\"no-break\">\n            <img src=\"23-07 Mallorca-0755.jpg\">\n          </a>\n          <figcaption>Rusty Grate</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-07 Mallorca-0758\" class=\"no-break\">\n            <img src=\"23-07 Mallorca-0758.jpg\">\n          </a>\n          <figcaption>Sticker Direction</figcaption>\n        </figure>\n    \n        <figure>\n          <a href=\"/photos/23-07 Mallorca-0773\" class=\"no-break\">\n            <img src=\"23-07 Mallorca-0773.jpg\">\n          </a>\n          <figcaption>Table Greenery</figcaption>\n        </figure>\n    \n      </div>\n    \n",
            "tags": [
                "Publishing",
                "Imaging"
            ]
        },
        {
            "id": "https://kiko.io/post/Mastodon-Share-Bottom-Sheet-Dialog/",
            "url": "https://kiko.io/post/Mastodon-Share-Bottom-Sheet-Dialog/",
            "title": "Mastodon Share Bottom Sheet Dialog",
            "image": "https://kiko.io/images/social-media/Mastodon-Share-Bottom-Sheet-Dialog.thumb.png",
            "date_published": "2023-09-28T07:57:54.000Z",
            "date_modified": null,
            "content_html": "<p>Social media thrives on sharing. Thoughts, experiences, self-dramatizations or even texts or posts from other people. This is especially true for microblogging on (formerly) Twitter and (today) Mastodon. To make this easy, the platforms often offer a SHARE endpoint (URL), such as the famous</p>\n<p><code>http://www.twitter.com/share?text=My impossible thoughts on X</code></p>\n<p>… or any dirt buttons to collect user data.</p>\n<p>A few months after the groundbreaking of Mastodon 2016, such a feature was also <a href=\"https://github.com/mastodon/mastodon/issues/442\">discussed and implemented</a> on GitHub and out came: </p>\n<p><code>https://&lt;your-instance&gt;/share&amp;text=My benevolent thoughts on the Fediverse</code></p>\n<p>But … where Twitter had it easy due to its central structure (twitter.com … period.), we Mastodon users all fidget around on <strong>different instances</strong>, i.e. each instance has its own <code>/SHARE</code> endpoint and so it’s a bit harder to stick a share button on your own blog, because you have to ask the user where he lives.</p>\n<p>Of course, online services like <a href=\"https://toot.kytta.dev/\">toot.kytta.dev</a>, <a href=\"https://s2f.kytta.dev/\">s2f.kytta.dev</a>, <a href=\"https://mastodonshare.com/\">mastodonshare.com</a> sprouted immediately, but also the button providers expanded their portfolio or new ones were launched, like <a href=\"https://shareon.js.org/\">shareon.js.org</a>, <a href=\"https://share-on-mastodon.social/\">share-on-mastodon.social</a>, <a href=\"https://www.shareaholic.com/website-tools/social-share-buttons/mastodon/\">shareaholic.com</a>.</p>\n<p>But seriously … does it take an external service to ask the user for an instance name and redirect him to an URL (and run the risk of falling victim to data collection mania)? Because that’s all it is. All of the above do it exactly that way.</p>\n<p><img src=\"/post/Mastodon-Share-Bottom-Sheet-Dialog/indieweb-social-share.png\" alt=\"indieweb.social Share\"></p>\n<p>So we come to the ready-made developer solutions e.g. How-To tutorials. Here, too, there are a lot of hits after a search: <a href=\"https://github.com/codesyntax/mastodon-share-button\">Mastodon-share-button (WebComponent)</a>, <a href=\"https://github.com/Aly-ve/Mastodon-share-button\">Mastodon-share-button (JS)</a>, <a href=\"https://www.bentasker.co.uk/posts/documentation/general/adding-a-share-on-mastodon-button-to-a-website.html\">Adding a Share On Mastodon button to a website</a>, <a href=\"https://christianheilmann.com/2023/08/18/adding-a-share-to-mastodon-link-to-any-web-site-and-here/\">Adding a “share to mastodon” link to any web site – and here</a>, <a href=\"\"></a> … and I’ll join them here for my Hexo-driven blog.</p>\n<span id=\"more\"></span>\n\n<hr>\n<h2 id=\"My-Mastodon-Share-Variant\"><a href=\"#My-Mastodon-Share-Variant\" class=\"headerlink\" title=\"My Mastodon Share Variant\"></a>My Mastodon Share Variant</h2><p>It’s really not hard to develop an appealing looking and working JavaScript solution to the “problem”. Where <a href=\"https://toot.cafe/@codepo8\">Christian Heilmann</a> (last link in the list above) relies on a simple <code>window.prompt</code>, I recently introduced my Bottom Sheet dialogs in this blog (<a href=\"/post/Show-pages-meta-data-JSON-LD-in-Bottom-Sheet/\" title=\"Show pages meta data (JSON-LD) in Bottom Sheet\">here</a> and <a href=\"/post/Extension-of-downupPopup-Back-Button-Escape-Key-More/\" title=\"Extension of downupPopup: Back Button, Escape Key &amp; More\">here</a>), which are perfectly suited for this.</p>\n<p>Each shareable post should get a SHARE button that lets a bottom sheet pop out where the user can enter their instance name, which is then remembered for next time, and already contains suggested text (title, description, and url of the post) for the Mastodon toot.</p>\n<h3 id=\"The-Button\"><a href=\"#The-Button\" class=\"headerlink\" title=\"The Button\"></a>The Button</h3><p>In every post the interaction section is rendered and there is now a new button, which calls a new dialog method, described later on:</p>\n<figure class=\"highlight js\"><figcaption><span>themes\\landscape\\layout\\_partial\\post\\interaction.ejs</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">&lt;button onclick=<span class=\"string\">&quot;dialog.shareOnMastodon();&quot;</span> <span class=\"keyword\">class</span>=<span class=\"string\">&quot;share mastodon&quot;</span>&gt;<span class=\"title class_\">Share</span> on <span class=\"title class_\">Mastodon</span>&lt;/button&gt;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Adding-a-dialog-template-to-the-DOM\"><a href=\"#Adding-a-dialog-template-to-the-DOM\" class=\"headerlink\" title=\"Adding a dialog template to the DOM\"></a>Adding a dialog template to the DOM</h3><p>For my dialog I first needed a UI, preferably a template in the DOM to avoid having to fiddle with HTML in the JS code:</p>\n<figure class=\"highlight html\"><figcaption><span>themes\\landscape\\layout\\_partial\\templates\\mastodon-share-dialog.ejs</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">template</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;mastodon-share-dialog&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;mastodon-share-content&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;mastodon-share-intro&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/images/mastodon.svg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;Mastodon&quot;</span>&gt;</span></span><br><span class=\"line\">        There are many Mastodon instances out there. </span><br><span class=\"line\">        Tell me yours and I will redirect you to the share dialog of your server:</span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;mastodon-instance&quot;</span>&gt;</span>Your Mastodon Instance<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;mastodon-instance-wrapper&quot;</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">span</span>&gt;</span>https://<span class=\"tag\">&lt;/<span class=\"name\">span</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">input</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;mastodon-instance&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;intance&quot;</span> <span class=\"attr\">required</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">label</span> <span class=\"attr\">for</span>=<span class=\"string\">&quot;mastodon-text&quot;</span>&gt;</span>Text to share ...<span class=\"tag\">&lt;/<span class=\"name\">label</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">textarea</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;mastodon-text&quot;</span> <span class=\"attr\">name</span>=<span class=\"string\">&quot;text&quot;</span> <span class=\"attr\">rows</span>=<span class=\"string\">&quot;8&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">textarea</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">button</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;mastodon-share&quot;</span>&gt;</span>Share<span class=\"tag\">&lt;/<span class=\"name\">button</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">section</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">template</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>The template is embedded in <code>layout.ejs</code> near the closing HTML tag. It contains mainly an INPUT for the instance name, a TEXTAREA for the suggested text and a button for the action. I’ll leave out the styles here, because if you adopt my implementation, the CSS (or Stylus) will be completely different.</p>\n<h3 id=\"Extending-the-dialog-script\"><a href=\"#Extending-the-dialog-script\" class=\"headerlink\" title=\"Extending the dialog script\"></a>Extending the dialog script</h3><p>Ok … let’s extend the <strong>dialog.js</strong> code, I first described <a href=\"/post/Show-pages-meta-data-JSON-LD-in-Bottom-Sheet/\" title=\"Show pages meta data (JSON-LD) in Bottom Sheet\">here</a>, with a new method as used at the button:</p>\n<figure class=\"highlight js\"><figcaption><span>themes\\landscape\\source\\js\\dialog.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> dpDialog = &#123; </span><br><span class=\"line\">  <span class=\"string\">&#x27;base&#x27;</span>: &#123; ... &#125;,</span><br><span class=\"line\">  <span class=\"string\">&#x27;init&#x27;</span>: <span class=\"keyword\">function</span>(<span class=\"params\">options</span>) &#123; ... &#125;,</span><br><span class=\"line\">  <span class=\"string\">&#x27;show&#x27;</span>: <span class=\"keyword\">function</span>(<span class=\"params\">callback</span>) &#123; ... &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"string\">&#x27;shareOnMastodon&#x27;</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123; </span><br><span class=\"line\">     dpDialog.<span class=\"property\">base</span>.<span class=\"title function_\">init</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">headerText</span>: <span class=\"string\">&quot;Share on Mastodon&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">urlHash</span>: <span class=\"string\">&quot;share&quot;</span>, <span class=\"comment\">// show hash in url</span></span><br><span class=\"line\">      <span class=\"attr\">minContentHeight</span>: <span class=\"number\">400</span>, <span class=\"comment\">// limit height of dialog</span></span><br><span class=\"line\">      <span class=\"attr\">width</span>: <span class=\"string\">&quot;min(600px, 100%)&quot;</span> <span class=\"comment\">// center dialog with max width 600px</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Grab the template and make it a jQuery object</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> content = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;mastodon-share-dialog&quot;</span>).<span class=\"property\">content</span>.<span class=\"title function_\">cloneNode</span>(<span class=\"literal\">true</span>);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> jContent = $(content);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Read the cookie if the user has already used the dialog ...</span></span><br><span class=\"line\">  <span class=\"keyword\">let</span> instance = <span class=\"title function_\">getCookie</span>(<span class=\"string\">&quot;mastodon-instance&quot;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (instance) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// ... and enter it in the INPUT</span></span><br><span class=\"line\">    jContent.<span class=\"title function_\">find</span>(<span class=\"string\">&quot;#mastodon-instance&quot;</span>).<span class=\"title function_\">val</span>(instance);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Create a suggestion text from the page metadata</span></span><br><span class=\"line\">  <span class=\"keyword\">const</span> title = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;meta[name=&quot;title&quot;]&#x27;</span>).<span class=\"property\">content</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> description = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;meta[name=&quot;description&quot;]&#x27;</span>).<span class=\"property\">content</span>;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> permalink = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;link[rel=&quot;canonical&quot;]&#x27;</span>).<span class=\"property\">href</span>;</span><br><span class=\"line\">  jContent.<span class=\"title function_\">find</span>(<span class=\"string\">&quot;#mastodon-text&quot;</span>).<span class=\"title function_\">val</span>(title + <span class=\"string\">&quot;\\n\\n&quot;</span> + description + <span class=\"string\">&quot;\\n\\n&quot;</span> + permalink);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Set the BUTTON action ...</span></span><br><span class=\"line\">  jContent.<span class=\"title function_\">find</span>(<span class=\"string\">&quot;#mastodon-share&quot;</span>).<span class=\"title function_\">click</span>(<span class=\"keyword\">function</span>(<span class=\"params\">e</span>) &#123; </span><br><span class=\"line\">    <span class=\"keyword\">const</span> eInstance = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;mastodon-instance&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">const</span> eText = <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;mastodon-text&quot;</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// Let the browser validate the input attribute REQUIRED</span></span><br><span class=\"line\">    <span class=\"keyword\">const</span> isValid = eInstance.<span class=\"title function_\">reportValidity</span>();</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (isValid) &#123;</span><br><span class=\"line\">      <span class=\"comment\">// Save the entered instance name to a cookie</span></span><br><span class=\"line\">      <span class=\"title function_\">setCookie</span>(<span class=\"string\">&quot;mastodon-instance&quot;</span>, eInstance.<span class=\"property\">value</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// Generate the share URL for the instance</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> shareUrl = <span class=\"string\">`https://<span class=\"subst\">$&#123;eInstance.value&#125;</span>/share?text=<span class=\"subst\">$&#123;<span class=\"built_in\">encodeURIComponent</span>(eText.value)&#125;</span>`</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// Open the share URL in a new window and close the dialog</span></span><br><span class=\"line\">      <span class=\"variable language_\">window</span>.<span class=\"title function_\">open</span>(shareUrl, <span class=\"string\">&#x27;_blank&#x27;</span>);</span><br><span class=\"line\">      dpDialog.<span class=\"property\">base</span>.<span class=\"property\">element</span>.<span class=\"title function_\">downupPopup</span>(<span class=\"string\">&quot;close&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Add the dialog to the DOM</span></span><br><span class=\"line\">  jContent.<span class=\"title function_\">appendTo</span>(dpDialog.<span class=\"property\">base</span>.<span class=\"property\">content</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// Open the dialog and set the focus in the INPUT</span></span><br><span class=\"line\">  dpDialog.<span class=\"property\">base</span>.<span class=\"title function_\">show</span>(<span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&quot;mastodon-instance&quot;</span>).<span class=\"title function_\">focus</span>();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"The-Result\"><a href=\"#The-Result\" class=\"headerlink\" title=\"The Result\"></a>The Result</h3><p>This is it … and here you can see the result of my implementation:</p>\n<p><img src=\"/post/Mastodon-Share-Bottom-Sheet-Dialog/mastodon-share-dialog.gif\" alt=\"Mastodon Share Dialog on kiko.io\"></p>\n<p>… or look at the button in the bottom right corner and use it ;)</p>\n<p>As I said, it’s just a tool to make it easier for the user to share your content via a URL of their instance to their audience. There is no external stuff, data collection or influence on what is shared. Just JavaScript, HTML running in the browser and one cookie for convenience.</p>\n<p>You can find all files as usual on the GitHub repo of this blog at <a href=\"https://github.com/kristofzerbe/kiko.io\">https://github.com/kristofzerbe/kiko.io</a></p>\n",
            "tags": [
                "Publishing",
                "Social Media",
                "Mastodon",
                "JavaScript"
            ]
        },
        {
            "id": "https://kiko.io/post/Contribute-with-Conventional-Commits/",
            "url": "https://kiko.io/post/Contribute-with-Conventional-Commits/",
            "title": "Contribute with Conventional Commits",
            "image": "https://kiko.io/images/social-media/Contribute-with-Conventional-Commits.thumb.png",
            "date_published": "2023-09-15T15:57:40.000Z",
            "date_modified": null,
            "content_html": "<p>I’ll be honest … I need some Git training. From time to time I contribute small things to GitHub projects and sometimes get confused with all the commands. <code>Fork</code>, <code>Clone</code>, <code>Commit</code>, <code>Stage</code>, <code>Pull Request</code> … all things that mean something to me, but that I certainly haven’t internalized. And so it happens that I sometimes mess up a pull request or something similar.</p>\n<p>Sure, my blog here also lives in GitHub, both in terms of source control and hosting on GitHub Pages, but here I’m the only one committing. No issues, no branches, no pull requests or anything else. I change something, hit commit and I’m done.</p>\n<p>Another point I can’t dismiss: I’m a Windows guy who likes to click buttons. The command line is not for me at all.<br><em>What was the name of the parameter? Do I have to write <code>--param=xxx</code> or <code>/param:xxx</code> … damn where is the button?</em><br>My brain is probably too small for that.</p>\n<p>Visual Studio Code is a big help there … it has buttons! But that doesn’t save me when it comes to Git, because you have to know in which order to press which of these buttons!</p>\n<span id=\"more\"></span>\n\n<p>Yesterday I discovered a small bug in my favorite Mastodon client <a href=\"https://elk.zone/\">Elk</a>, which could be solved with one line of CSS. So … cloned the thing, looked for the source file, inserted the line … and googled how to submit the change on my repo clone as a pull request to the Elk project, and found this great tutorial on Medium from someone, with the name Supritha:</p>\n<p><a href=\"https://levelup.gitconnected.com/how-to-create-a-pull-request-on-github-using-vs-code-f03db28308c4\">&gt;&gt;&gt; How to Create a Pull Request on GitHub using VS Code</a></p>\n<p>Fantastic. The pull request was a breeze. BUT … on the pull request page of Elk on GitHub the first check threw an error regarding <strong>Semantic Pull Request</strong>, with the message the title was wrong … what the heck?</p>\n<p>While I was reading the documentation (after the first attempt to change the title to something reasonable and another failure), one of the Elk developers <a href=\"https://github.com/userquin\">Joaquín</a> was so nice and corrected the title and pointed me to the very doc I was reading:</p>\n<p><strong><a href=\"https://www.conventionalcommits.org/en/v1.0.0/#summary\">&gt;&gt;&gt; Conventional Commits &lt;&lt;&lt;</a></strong></p>\n<p>Okay … I was already happy that nothing went wrong this time, but that was too early, as so often in IT ;)</p>\n<p>Here to read: <a href=\"https://github.com/elk-zone/elk/pull/2394\">fix(ui): Empty lines in posts from Pixelfed are doubled&#x2F;tripled (#2392)</a></p>\n<p>Since I am a structured person, I liked the commit message rules used by the Elk team, because they open up a space to make the commits easier to evaluate automatically afterwards. I think a great help for projects of this scale … currently 202 contributors!</p>\n<p>Actually I don’t have a Git project where the <strong>Convertional Commits</strong> would be useful, but for my future Me … READ THIS POST!</p>\n<p>(And for my employees, in case they read this: I have an idea that we should definitely establish soon … ;)</p>\n",
            "tags": [
                "VS Code",
                "Publishing",
                "Git/GitHub"
            ]
        },
        {
            "id": "https://kiko.io/post/Discoveries-26-JavaScript-HowTo-s/",
            "url": "https://kiko.io/post/Discoveries-26-JavaScript-HowTo-s/",
            "title": "Discoveries #26 - JavaScript HowTo's",
            "image": "https://kiko.io/images/social-media/Discoveries-26-JavaScript-HowTo-s.thumb.png",
            "date_published": "2023-09-12T05:53:45.000Z",
            "date_modified": null,
            "content_html": "<p>Over time, everyone accumulates links somewhere about procedures that one has not yet internalized. This is also the case with me and JavaScript development. “Damn … what was that about Call | Proxy | Map | &lt;You name it&gt;?!”. Here are 11 of them …</p>\n\n        <ul class=\"anchorlist\">\n            <li data-anchor=\"#processing-images-with-sharp-in-node-js\">Processing images with sharp in Node.js</li><li data-anchor=\"#use-console-log-like-a-pro-\">Use console.log() like a pro!</li><li data-anchor=\"#simple-swipe-with-vanilla-javascript\">Simple Swipe with Vanilla JavaScript</li><li data-anchor=\"#the-file-system-access-api-simplifying-access-to-local-files\">The File System Access API: simplifying access to local files</li><li data-anchor=\"#an-introduction-to-webassembly-for-javascript-developers\">An introduction to WebAssembly for JavaScript Developers</li><li data-anchor=\"#getting-started-with-the-map-and-set-typed-collections\">Getting Started with the Map and Set Typed Collections</li><li data-anchor=\"#javascript-currying-a-practical-example\">JavaScript Currying: A Practical Example</li><li data-anchor=\"#how-to-use-the-call-apply-and-bind-functions-in-javascript\">How to Use the Call, Apply, and Bind Functions in JavaScript</li><li data-anchor=\"#how-javascript-s-proxy-object-works\">How JavaScript's Proxy Object Works</li><li data-anchor=\"#javascript-waitfor-polling\">JavaScript waitFor Polling</li><li data-anchor=\"#how-to-measure-page-loading-time-with-performance-api\">How to measure page loading time with Performance API</li>\n        </ul>\n    \n\n<span id=\"more\"></span>\n\n\n    <hr id=\"processing-images-with-sharp-in-node-js\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      Processing images with sharp in Node.js\n    </h2>\n    <small>by Pascal Akunne&nbsp;<br><a href=\"https://blog.logrocket.com/processing-images-sharp-node-js/\">https://blog.logrocket.com/processing-images-sharp-node-js/</a></small>\n    <p>Whenever images are to be processed in a NodeJS application, one is well advised to use the Sharp library. Pascal introduces the most important functions in his article.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://blog.logrocket.com/processing-images-sharp-node-js/\">\n      <img class=\"limit\" src=\"processing-images-with-sharp-in-node-js.png\" alt=\"Processing images with sharp in Node.js\" />\n    </a>\n  \n\n\n    <hr id=\"use-console-log-like-a-pro-\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      Use console.log() like a pro!\n    </h2>\n    <small>by Marko Denic&nbsp;<br><a href=\"https://denic.hashnode.dev/use-consolelog-like-a-pro\">https://denic.hashnode.dev/use-consolelog-like-a-pro</a></small>\n    <p>Using console.log() for JavaScript debugging is the most common practice among developers. But, there is a lot more, as Marko shows us.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://denic.hashnode.dev/use-consolelog-like-a-pro\">\n      <img class=\"limit\" src=\"use-console-log-like-a-pro-.png\" alt=\"Use console.log() like a pro!\" />\n    </a>\n  \n\n\n    <hr id=\"simple-swipe-with-vanilla-javascript\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      Simple Swipe with Vanilla JavaScript\n    </h2>\n    <small>by Ana Tudor&nbsp;<br><a href=\"https://css-tricks.com/simple-swipe-with-vanilla-javascript/\">https://css-tricks.com/simple-swipe-with-vanilla-javascript/</a></small>\n    <p>This 2018 article by Ana walks you step-by-step through implementing swipe gestures using an image gallery example with the least amount of code she could think of.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://css-tricks.com/simple-swipe-with-vanilla-javascript/\">\n      <img class=\"limit\" src=\"simple-swipe-with-vanilla-javascript.png\" alt=\"Simple Swipe with Vanilla JavaScript\" />\n    </a>\n  \n\n\n    <hr id=\"the-file-system-access-api-simplifying-access-to-local-files\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      The File System Access API: simplifying access to local files\n    </h2>\n    <small>by Thomas Steiner & Pete LePage&nbsp;<br><a href=\"https://web.dev/file-system-access/\">https://web.dev/file-system-access/</a></small>\n    <p>The File System Access API allows web apps to read or save changes directly to files and folders on the user&#39;s device. Thomas and Peter, both working at Googles Chrome team, show us with examples how this works.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://web.dev/file-system-access/\">\n      <img class=\"limit\" src=\"the-file-system-access-api-simplifying-access-to-local-files.png\" alt=\"The File System Access API: simplifying access to local files\" />\n    </a>\n  \n\n\n    <hr id=\"an-introduction-to-webassembly-for-javascript-developers\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      An introduction to WebAssembly for JavaScript Developers\n    </h2>\n    <small>by Pascal Pares&nbsp;<br><a href=\"https://pascalpares.appspot.ovh/webassembly-for-javascript-developers/\">https://pascalpares.appspot.ovh/webassembly-for-javascript-developers/</a></small>\n    <p>Pascals article from 2021 is based on the specs of WebAssembly from 2019 and is very useful as an introduction for JavaScript Developers, because it includes a lot of sample code.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://pascalpares.appspot.ovh/webassembly-for-javascript-developers/\">\n      <img class=\"limit\" src=\"an-introduction-to-webassembly-for-javascript-developers.png\" alt=\"An introduction to WebAssembly for JavaScript Developers\" />\n    </a>\n  \n\n\n    <hr id=\"getting-started-with-the-map-and-set-typed-collections\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      Getting Started with the Map and Set Typed Collections\n    </h2>\n    <small>by Robert Laws&nbsp;<br><a href=\"https://javascript.plainenglish.io/javascript-getting-started-with-the-map-and-set-typed-collections-2ba173b0ce9f\">https://javascript.plainenglish.io/javascript-getting-started-with-the-map-and-set-typed-collections-2ba173b0ce9f</a></small>\n    <p>JavaScript has not only the classic arrays to offer, but also other objects for collecting data. Robert has a brief description of Set and Map.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://javascript.plainenglish.io/javascript-getting-started-with-the-map-and-set-typed-collections-2ba173b0ce9f\">\n      <img class=\"limit\" src=\"getting-started-with-the-map-and-set-typed-collections.png\" alt=\"Getting Started with the Map and Set Typed Collections\" />\n    </a>\n  \n\n\n    <hr id=\"javascript-currying-a-practical-example\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      JavaScript Currying: A Practical Example\n    </h2>\n    <small>by Karthick Ragavendran&nbsp;<br><a href=\"https://javascript.plainenglish.io/javascript-currying-practical-example-512cf1099e81\">https://javascript.plainenglish.io/javascript-currying-practical-example-512cf1099e81</a></small>\n    <p>In mathematics and computer science, currying is the technique of converting a function that takes multiple arguments into a sequence of functions, each of which takes a single argument … a better description than Karthick’s introduction I could not think of either</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://javascript.plainenglish.io/javascript-currying-practical-example-512cf1099e81\">\n      <img class=\"limit\" src=\"javascript-currying-a-practical-example.png\" alt=\"JavaScript Currying: A Practical Example\" />\n    </a>\n  \n\n\n    <hr id=\"how-to-use-the-call-apply-and-bind-functions-in-javascript\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      How to Use the Call, Apply, and Bind Functions in JavaScript\n    </h2>\n    <small>by Keyur Paralkar&nbsp;<br><a href=\"https://www.freecodecamp.org/news/understand-call-apply-and-bind-in-javascript-with-examples/\">https://www.freecodecamp.org/news/understand-call-apply-and-bind-in-javascript-with-examples/</a></small>\n    <p>Call, Apply and Bind are not so common in daily JavaScript development, but they are useful tools because they can be used to change the execution context, as Keyur shows us.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://www.freecodecamp.org/news/understand-call-apply-and-bind-in-javascript-with-examples/\">\n      <img class=\"limit\" src=\"how-to-use-the-call-apply-and-bind-functions-in-javascript.png\" alt=\"How to Use the Call, Apply, and Bind Functions in JavaScript\" />\n    </a>\n  \n\n\n    <hr id=\"how-javascript-s-proxy-object-works\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      How JavaScript's Proxy Object Works\n    </h2>\n    <small>by Keyur Paralkar&nbsp;<br><a href=\"https://www.freecodecamp.org/news/javascript-proxy-object/\">https://www.freecodecamp.org/news/javascript-proxy-object/</a></small>\n    <p>Again Keyur. In this post he goes into detail about the proxy object, helps you create another object on behalf of the original object, to get more control over the interaction with the original object</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://www.freecodecamp.org/news/javascript-proxy-object/\">\n      <img class=\"limit\" src=\"how-javascript-s-proxy-object-works.png\" alt=\"How JavaScript's Proxy Object Works\" />\n    </a>\n  \n\n\n    <hr id=\"javascript-waitfor-polling\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      JavaScript waitFor Polling\n    </h2>\n    <small>by David Walsh&nbsp;<br><a href=\"https://davidwalsh.name/waitfor\">https://davidwalsh.name/waitfor</a></small>\n    <p>By now, every JavaScript developer should be familiar with asynchronous programming using async&#x2F;await and Promises. But there are use cases where polling makes more sense, as David shows.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://davidwalsh.name/waitfor\">\n      <img class=\"limit\" src=\"javascript-waitfor-polling.png\" alt=\"JavaScript waitFor Polling\" />\n    </a>\n  \n\n\n    <hr id=\"how-to-measure-page-loading-time-with-performance-api\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      How to measure page loading time with Performance API\n    </h2>\n    <small>by Silvestar Bistrović&nbsp;<br><a href=\"https://www.silvestar.codes/articles/how-to-measure-page-loading-time-with-performance-api/\">https://www.silvestar.codes/articles/how-to-measure-page-loading-time-with-performance-api/</a></small>\n    <p>MDN recommends using the Performance API to gauge the performance of websites and web applications. It’s useful to show how much time did it take to load a page.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://www.silvestar.codes/articles/how-to-measure-page-loading-time-with-performance-api/\">\n      <img class=\"limit\" src=\"how-to-measure-page-loading-time-with-performance-api.png\" alt=\"How to measure page loading time with Performance API\" />\n    </a>\n  \n\n",
            "tags": [
                "Collection"
            ]
        },
        {
            "id": "https://kiko.io/post/Versengold-in-Concert/",
            "url": "https://kiko.io/post/Versengold-in-Concert/",
            "title": "Versengold in Concert",
            "image": "https://kiko.io/images/social-media/Versengold-in-Concert.thumb.png",
            "date_published": "2023-09-10T08:59:19.000Z",
            "date_modified": null,
            "content_html": "<p>Since my youth with I hardrock&#x2F;metal fan, but from good music I let myself convince, even if it does not fit into this scheme. This is what happened with the German medieval&#x2F;folk band <a href=\"https://de.wikipedia.org/wiki/Versengold\"><strong>Versengold</strong></a> from Bremen, to whose concert in Bochum my better half dragged me one day. And what can I say … the guys are so much fun with their easy-going manner, their good, funny and sometimes profound German lyrics and their shanty-like music, from which the North German sailor tradition can be clearly heard.</p>\n<span id=\"more\"></span>\n\n<p>In the meantime we were on two more concerts in Frankfurt, then in Marburg (Open-Air) and in Mainz on the “Night of the Ballads”. Most recently we saw them two weeks ago at the MPS (“Mittelalterlich Phantasie Spectaculum”, a medieval festival) in Speyer, where they played open-air with other bands from the “industry”. On the one hand, I think it’s great that the guys, even if they now fill large halls in Germany, have not forgotten their origins, and on the other hand, I now had the opportunity to get very close to the stage with my camera.</p>\n<p>Here are the results:</p>\n\n      <div class=\"image-masonry\" id=\"image-masonry-osfgo5\">\n        <div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0092.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0094.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0103.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0104.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0105.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0106.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0108.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0111.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0115.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0123.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0126.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0128.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0131.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0136.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0150.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0151.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0152.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0153.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0156.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0157.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0159.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0162.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0169.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0171.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0172.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0173.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0177.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0179.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/Versengold-in-Concert/23-08-26 MPS Speyer-0182.jpg\" alt=\"\" /></div>\n      </div>\n      <script>\n        let macy = new Macy({\n          container: '#image-masonry-osfgo5',\n          trueOrder: false,\n          waitForImages: false,\n          useOwnImageLoader: false,\n          debug: true,\n          mobileFirst: true,\n          columns: 2,\n          margin: {\n            y: 6,\n            x: 6\n          },\n          breakAt: {\n            980: {\n              margin: {\n                x: 8,\n                y: 8\n              },\n              columns: 3\n            },\n            768: 2,\n            640: 3\n          }\n        });\n      </script>\n    \n\n<p>Love you guys…!</p>\n",
            "tags": [
                "Concert"
            ]
        },
        {
            "id": "https://kiko.io/post/SVWW-vs-Schalke-2023-09-02/",
            "url": "https://kiko.io/post/SVWW-vs-Schalke-2023-09-02/",
            "title": "SVWW vs. Schalke @ 2023-09-02",
            "image": "https://kiko.io/images/social-media/SVWW-vs-Schalke-2023-09-02.thumb.png",
            "date_published": "2023-09-02T15:24:24.000Z",
            "date_modified": null,
            "content_html": "<p>On this game, some in my circle of friends have feverishly awaited, especially my neighbor and friend, who for years is an ardent fan of one of the traditional clubs <strong>Schalke 04</strong>. We got six additional tickets for the game in time and with a crowd of 11,003 fans, this was also urgently necessary. The stadium (12,566 standing and seated) was full to the roof. Only one of three blocks of the guests was empty. Some Schalke fans seem to have expected nothing from the game in Wiesbaden. No wonder after table position 15 after the last match day.</p>\n<p>Since season ticket holders get into the stadium a little faster and my friends sat a little scattered in different blocks, I lost sight of them at some point, but that was not tragic, because they had fun.</p>\n<p>To my delight, the booth operators, who I had to criticize last time, actually did a better job today. Two cash registers: one for cash and another for card&#x2F;smartphone&#x2F;watch payers. The sale of beer and bratwurst went much more quickly, only I had to stand in line a bit at the fan shop, because I was not yet recognizable as a fan: it had to get a cap and a jersey, of course, finally.</p>\n<span id=\"more\"></span>\n\n<p>My fellow fans in row 1 were rather quiet today, despite the good weather and the atmosphere around. In my back there was now and then a comment like “Now RUN!” or “Go ahead. The goal is in THIS direction!”, but I could understand them, because our team hardly dared to cross the center line in the first half. I still don’t know the name of the nice lady next to me, but I will. She suffered today like many rather quietly.</p>\n<hr>\n<h2 id=\"The-Game\"><a href=\"#The-Game\" class=\"headerlink\" title=\"The Game\"></a>The Game</h2><p>In the first half we were, as they say in the jargon “compact in defense”, which means nothing else, that no one dared to run forward with the ball. Except for once, when after about 20 minutes Kianz Froese, our Canadian striker, ran into the box on the left side at full gallop, but unfortunately missed the goal by a hair’s breadth. Damn! Our team let the opponent play and again straddled every ball off their feet.</p>\n<p>It wasn’t, however, that Schalke dominated the game. We carelessly let them just do it and the fans had their fun when they shot the ball into the clouds again after a lot of roaring and stomping. Funny.</p>\n<p>At the beginning of the second half, this continued seamlessly, even if you noticed that the coach in the cabin must have yelled at one or the other and these were now somewhat more active … and suddenly the ball was in our net … <strong>0:1</strong>! What? How? A goal in the 54. minute for Schalke out of (almost) nothing! I have to watch that again on TV … :|</p>\n\n      <div class=\"image-masonry\" id=\"image-masonry-9suc43\">\n        <div><img class=\"no-caption\" src=\"/post/SVWW-vs-Schalke-2023-09-02/PXL_20230902_104957617.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Schalke-2023-09-02/PXL_20230902_105327820.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Schalke-2023-09-02/PXL_20230902_105347190.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Schalke-2023-09-02/PXL_20230902_105548827.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Schalke-2023-09-02/PXL_20230902_105749100.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Schalke-2023-09-02/PXL_20230902_124411594.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Schalke-2023-09-02/PXL_20230902_111931000.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Schalke-2023-09-02/PXL_20230902_120730081.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Schalke-2023-09-02/PXL_20230902_125820397.jpg\" alt=\"\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Schalke-2023-09-02/PXL_20230902_130050774.jpg\" alt=\"\" /></div>\n      </div>\n      <script>\n        let macy = new Macy({\n          container: '#image-masonry-9suc43',\n          trueOrder: false,\n          waitForImages: false,\n          useOwnImageLoader: false,\n          debug: true,\n          mobileFirst: true,\n          columns: 2,\n          margin: {\n            y: 6,\n            x: 6\n          },\n          breakAt: {\n            980: {\n              margin: {\n                x: 8,\n                y: 8\n              },\n              columns: 3\n            },\n            768: 2,\n            640: 3\n          }\n        });\n      </script>\n    \n\n<p>After our guys had digested the shock, after 10 minutes or so, they began … yes indeed … to play football! Also because Kauczinski had replaced a few snoozers. In the last 20 minutes it went with steam on the opponents goal, but we ran slightly out of time. In the 90th minute, 6 minutes of injury time were displayed and it was almost hectic … kick and rush. With success! In the 95th minute it was <strong>1:1</strong>, thanks to the leg of <strong>Reinthaler</strong>, from which bounced a defensive attempt, and in the 97th almost 2:1 … huuuuh, damn close.</p>\n<p>Before the game I had bet on a 1:1 and was unfortunately&#x2F;fortunately right. <strong>It felt like a victory.</strong></p>\n<p>&#x21FE;&nbsp;<a href=\"https://www.kicker.de/wiesbaden-gegen-schalke-2023-bundesliga-4861704/spielbericht\">Match report on kicker.de</a></p>\n<hr>\n<h2 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h2><p>Today we are in 6th place in the table and I don’t really understand why the team was so anxious. Yes, it’s Schalke 04, but they’re further down so far and we certainly don’t need to hide!</p>\n\n    <a href=\"https://www.kicker.de/2-bundesliga/tabelle\">\n        <img src=\"tabelle-23-09-02.png\" alt=\"Table 2. Liga, Saturday 02. September 2023\" />\n    </a>\n    \n",
            "tags": [
                "SVWW",
                "2. Bundesliga"
            ]
        },
        {
            "id": "https://kiko.io/post/Image-Masonry-Tag-Plugin-for-Hexo/",
            "url": "https://kiko.io/post/Image-Masonry-Tag-Plugin-for-Hexo/",
            "title": "Image Masonry Tag Plugin for Hexo",
            "image": "https://kiko.io/images/social-media/Image-Masonry-Tag-Plugin-for-Hexo.thumb.png",
            "date_published": "2023-09-01T14:07:37.000Z",
            "date_modified": null,
            "content_html": "<p>Displaying a few more images than usual in a post is always a bit tricky, because you have to make sure they don’t get too big and drown out the text. But they should not be too small either and the arrangement is also important to consider.</p>\n<p>For this purpose I have so far used my <a href=\"/post/Hexo-Tag-Plugin-Collection/#image-slide\">Image Slider Tag Plugin</a>, but with this you only ever see one of the images and have to scroll through the rest horizontally. A medium sized overview, best in the so called masonry format, where images are automatically assembled based on their size on a limited area, would be much better for some cases. There are a variety of CSS or JavaScript solutions out there on the net, but the most suitable for me was <a href=\"http://macyjs.com/\"><strong>Macy.js</strong></a> … and how I integrated it into my Hexo environment is what I want to describe here.</p>\n<span id=\"more\"></span>\n\n<p>Like (<a href=\"https://github.com/ganlanyuan/tiny-slider\">Tiny Slider</a>), Macy.js is also based on JavaScript, as the name already expresses. The setup in HTML is very simple: a certain number of wrappers are arranged in a container, each of which contains an image:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;macy-container&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/photos/normal/D50_0053.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/photos/normal/D50_0075.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/photos/normal/D50_0086.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/photos/normal/D50_1092.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/photos/normal/D50_1147.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/photos/normal/D50_1577.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">img</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/photos/normal/_D50_3251.jpg&quot;</span> <span class=\"attr\">alt</span>=<span class=\"string\">&quot;&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span>  </span><br></pre></td></tr></table></figure>\n\n<p>It does not matter whether the images are the same size or whether they are in portrait or landscape format. Macy.js then takes care of the sensible arrangement of the images in the container. All that is missing now is the call to the script:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">let</span> macy = <span class=\"keyword\">new</span> <span class=\"title class_\">Macy</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">container</span>: <span class=\"string\">&#x27;#macy-container&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">trueOrder</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"attr\">waitForImages</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"attr\">useOwnImageLoader</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">  <span class=\"attr\">debug</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">mobileFirst</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">  <span class=\"attr\">columns</span>: <span class=\"number\">2</span>,</span><br><span class=\"line\">  <span class=\"attr\">margin</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">y</span>: <span class=\"number\">6</span>,</span><br><span class=\"line\">    <span class=\"attr\">x</span>: <span class=\"number\">6</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">breakAt</span>: &#123;</span><br><span class=\"line\">    <span class=\"number\">1024</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">margin</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">x</span>: <span class=\"number\">8</span>,</span><br><span class=\"line\">        <span class=\"attr\">y</span>: <span class=\"number\">8</span></span><br><span class=\"line\">      &#125;,</span><br><span class=\"line\">      <span class=\"attr\">columns</span>: <span class=\"number\">4</span></span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"number\">768</span>: <span class=\"number\">3</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>For more information on the available parameters (and there are some interesting), please visit <a href=\"https://github.com/bigbite/macy.js\">https://github.com/bigbite/macy.js</a>.</p>\n<hr>\n<h2 id=\"The-Tag-Plugin\"><a href=\"#The-Tag-Plugin\" class=\"headerlink\" title=\"The Tag Plugin\"></a>The Tag Plugin</h2><p>To make it easy for Hexo users, I created a tag plugin from the code above and added it to my <a href=\"https://github.com/kristofzerbe/hexo-tag-plugins#image-masonry\">Hexo Tag Plugin Collection on GitHub</a>.</p>\n<p><strong>Usage Example:</strong></p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#123;% image_masonry</span><br><span class=\"line\">  <span class=\"string\">&quot;../../photos/normal/D50_0053.jpg|Thomas&#x27; Ruby Prince I&quot;</span></span><br><span class=\"line\">  <span class=\"string\">&quot;../../photos/normal/_D50_3251.jpg|No Name&quot;</span></span><br><span class=\"line\">  <span class=\"string\">&quot;../../photos/normal/D50_0086.jpg|Thomas&#x27; German Flag&quot;</span></span><br><span class=\"line\">  <span class=\"string\">&quot;../../photos/normal/D50_1147.jpg|Poppy Green&quot;</span></span><br><span class=\"line\">  <span class=\"string\">&quot;../../photos/normal/D50_0075.jpg|Thomas Wild Tulips&quot;</span></span><br><span class=\"line\">  <span class=\"string\">&quot;../../photos/normal/D50_7474.jpg|Garden Beauties XIV&quot;</span></span><br><span class=\"line\">  <span class=\"string\">&quot;../../photos/normal/D50_4451.jpg|Garden Beauties I&quot;</span></span><br><span class=\"line\">  <span class=\"string\">&quot;../../photos/normal/D50_1577.jpg|Floral Magic XIV&quot;</span></span><br><span class=\"line\">%&#125;</span><br></pre></td></tr></table></figure>\n\n<p><strong>Live Output:</strong></p>\n\n      <div class=\"image-masonry\" id=\"image-masonry-jpjiv0\">\n        <div><img class=\"no-caption\" src=\"/post/Image-Masonry-Tag-Plugin-for-Hexo/../../photos/normal/D50_0053.jpg\" alt=\"Thomas' Ruby Prince I\" /></div><div><img class=\"no-caption\" src=\"/post/Image-Masonry-Tag-Plugin-for-Hexo/../../photos/normal/_D50_3251.jpg\" alt=\"No Name\" /></div><div><img class=\"no-caption\" src=\"/post/Image-Masonry-Tag-Plugin-for-Hexo/../../photos/normal/D50_0086.jpg\" alt=\"Thomas' German Flag\" /></div><div><img class=\"no-caption\" src=\"/post/Image-Masonry-Tag-Plugin-for-Hexo/../../photos/normal/D50_1147.jpg\" alt=\"Poppy Green\" /></div><div><img class=\"no-caption\" src=\"/post/Image-Masonry-Tag-Plugin-for-Hexo/../../photos/normal/D50_0075.jpg\" alt=\"Thomas Wild Tulips\" /></div><div><img class=\"no-caption\" src=\"/post/Image-Masonry-Tag-Plugin-for-Hexo/../../photos/normal/D50_7474.jpg\" alt=\"Garden Beauties XIV\" /></div><div><img class=\"no-caption\" src=\"/post/Image-Masonry-Tag-Plugin-for-Hexo/../../photos/normal/D50_4451.jpg\" alt=\"Garden Beauties I\" /></div><div><img class=\"no-caption\" src=\"/post/Image-Masonry-Tag-Plugin-for-Hexo/../../photos/normal/D50_1577.jpg\" alt=\"Floral Magic XIV\" /></div>\n      </div>\n      <script>\n        let macy = new Macy({\n          container: '#image-masonry-jpjiv0',\n          trueOrder: false,\n          waitForImages: false,\n          useOwnImageLoader: false,\n          debug: true,\n          mobileFirst: true,\n          columns: 2,\n          margin: {\n            y: 6,\n            x: 6\n          },\n          breakAt: {\n            980: {\n              margin: {\n                x: 8,\n                y: 8\n              },\n              columns: 3\n            },\n            768: 2,\n            640: 3\n          }\n        });\n      </script>\n    \n",
            "tags": [
                "Hexo",
                "GitHub",
                "Plugin"
            ]
        },
        {
            "id": "https://kiko.io/post/Convert-HTML-into-Plain-Text-in-Hexo/",
            "url": "https://kiko.io/post/Convert-HTML-into-Plain-Text-in-Hexo/",
            "title": "Convert HTML into Plain Text in Hexo",
            "image": "https://kiko.io/images/social-media/Convert-HTML-into-Plain-Text-in-Hexo.thumb.png",
            "date_published": "2023-08-31T19:58:36.000Z",
            "date_modified": null,
            "content_html": "<p>Hexo, on which this blog is based, is a Static Site Generator (SSG) that generates a whole structure of HTML files from individual Markdown files in which the articles were written. Besides the actual posts, also overview pages like the archives and others. For the latter, however, it only needs an excerpt from the actual article, which Hexo automatically creates from the initially generated HTML content and which is also available as HTML.</p>\n<p>For my <a href=\"/post/Show-pages-meta-data-JSON-LD-in-Bottom-Sheet/\" title=\"Show pages meta data (JSON-LD) in Bottom Sheet\">Page Meta dialog</a>, however, I recently needed the excerpt as plain text to make it easier to transfer it manually to a Mastodon post, for example. My initial attempts to extract the plain text from the original Markdown turned out to be quite difficult, because in Hexo not only Markdown is used, but also special <a href=\"https://hexo.io/docs/tag-plugins\">Tag Plugins</a> in Nunjucks format and of course plain HTML. Long speech, short sense … after the first dozen RegEx-Replace calls, I got doubts to be on the right way and remembered <code>Page.Excerpt</code>, the variant already generated by Hexo in HTML.</p>\n<span id=\"more\"></span>\n\n<p>Now you would think that JavaScript has some built-in function to extract the plain text out of a bunch of HTML tags, but this is actually not the case. You have to take a little detour to do this:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">convertHtml2PlainText</span>(<span class=\"params\">excerpt</span>) &#123;  </span><br><span class=\"line\">  <span class=\"keyword\">let</span> e = <span class=\"variable language_\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&quot;div&quot;</span>);</span><br><span class=\"line\">  e.<span class=\"property\">innerHTML</span> = excerpt;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> e.<span class=\"property\">textContent</span> || e.<span class=\"property\">innerText</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> plainText = <span class=\"title function_\">convertHtml2PlainText</span>(page.<span class=\"property\">excerpt</span>);</span><br></pre></td></tr></table></figure>\n\n<p>Fine, my problem is solved … hmm… NO, because Node.js does not know a <code>document</code>, because a DOM exists only in the browser. But … there are libraries like <a href=\"https://github.com/jsdom/jsdom\"><strong>jsdom</strong></a> that make a DOM available in Node.js:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123; <span class=\"variable constant_\">JSDOM</span> &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;jsdom&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">convertHtml2PlainText</span>(<span class=\"params\">excerpt</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">const</span> dom = <span class=\"keyword\">new</span> <span class=\"title function_\">JSDOM</span>(<span class=\"string\">&#x27;&lt;!DOCTYPE html&gt;&#x27;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> e = dom.<span class=\"property\">window</span>.<span class=\"property\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&quot;div&quot;</span>);</span><br><span class=\"line\">  e.<span class=\"property\">innerHTML</span> = excerpt;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> e.<span class=\"property\">textContent</span> || e.<span class=\"property\">innerText</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> plainText = <span class=\"title function_\">convertHtml2PlainText</span>(page.<span class=\"property\">excerpt</span>);</span><br></pre></td></tr></table></figure>\n\n<p>Nice … but also doesn’t work, because I need the piece of code in an <a href=\"https://ejs.co/\"><strong>EJS</strong></a> template, but when processing the same to HTML, the included JavaScript code is executed, but loading external libraries via <code>require()</code> is not supported.</p>\n<p>And once again Hexo’s <a href=\"https://hexo.io/api/helper.html\">Tag Helpers</a> come to my rescue:</p>\n<figure class=\"highlight js\"><figcaption><span>helper-excerpt-plain.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123; <span class=\"variable constant_\">JSDOM</span> &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;jsdom&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.<span class=\"property\">extend</span>.<span class=\"property\">helper</span>.<span class=\"title function_\">register</span>(<span class=\"string\">&#x27;excerpt_plain&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">excerpt</span>)&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">const</span> dom = <span class=\"keyword\">new</span> <span class=\"title function_\">JSDOM</span>(<span class=\"string\">&#x27;&lt;!DOCTYPE html&gt;&#x27;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">let</span> e = dom.<span class=\"property\">window</span>.<span class=\"property\">document</span>.<span class=\"title function_\">createElement</span>(<span class=\"string\">&quot;div&quot;</span>);</span><br><span class=\"line\">  e.<span class=\"property\">innerHTML</span> = excerpt;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> e.<span class=\"property\">textContent</span> || e.<span class=\"property\">innerText</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>For the sake of beauty, I also cut out leading and double line breaks after the conversion and put the result in a custom meta tag in the head of the HTML page to have access to it later via JavaScript running in the browser: </p>\n<figure class=\"highlight js\"><figcaption><span>head.ejs</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> excerpt = <span class=\"title function_\">excerpt_plain</span>(page.<span class=\"property\">excerpt</span>)</span><br><span class=\"line\">  .<span class=\"title function_\">replace</span>(<span class=\"regexp\">/^(\\r\\n|\\n|\\r)/</span>, <span class=\"string\">&quot;&quot;</span>) <span class=\"comment\">// Remove leading break</span></span><br><span class=\"line\">  .<span class=\"title function_\">replace</span>(<span class=\"regexp\">/(\\r\\n|\\n|\\r)&#123;2,&#125;/g</span>, <span class=\"string\">&quot; &quot;</span>) <span class=\"comment\">// Remove multiple breaks</span></span><br><span class=\"line\">  .<span class=\"title function_\">trim</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;meta name=<span class=\"string\">&quot;excerpt&quot;</span> content=<span class=\"string\">&quot;&lt;%= excerpt %&gt;&quot;</span>&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p>Et voilá … I have my excerpt as plain text to show in my Page Meta dialog.</p>\n",
            "tags": [
                "Hexo",
                "Node.js",
                "Meta"
            ]
        },
        {
            "id": "https://kiko.io/post/Pool-Photo-Generator/",
            "url": "https://kiko.io/post/Pool-Photo-Generator/",
            "title": "Pool Photo Generator",
            "image": "https://kiko.io/images/social-media/Pool-Photo-Generator.thumb.png",
            "date_published": "2023-08-20T22:00:00.000Z",
            "date_modified": null,
            "content_html": "<p>Since the existence of this blog, the posts all have a custom header image that I generate from my own photos. Already three years ago (omg … really?) I described in an article how to do this with Hexo: <a href=\"/post/Automatic-Header-Images-in-Hexo/\" title=\"Automatic Header Images in Hexo\">Automatic Header Images in Hexo</a>.</p>\n<p>To keep it short, I use a pool folder for this, in which I keep in subfolders next to a <code>meta.txt</code>, for the title of the image and an external url on 500px for interactions to the image, three variants that I need for a new post:</p>\n<ul>\n<li>mobile.jpg (width 480px)</li>\n<li>tablet.jpg (width 768px)</li>\n<li>normal.jpg (width 1280px)</li>\n</ul>\n<p>The only piece of the puzzle that was still missing was the automatic generation of these three image variants and the meta file based on a selected photo that I want to add to the pool of available header images. So far it was fun to generate the header images manually either on the desktop or on the smartphone, but it really doesn’t have to be. My goal now was to write a script where I just throw a selected photo into a folder and the NodeJS script does the rest.</p>\n<p>My photo workflow is based on Adobe Lightroom Classic and one of the steps is to give a title to the good ones I use here as well. So the script had to include four steps when iterating over the inbound folder’s JPG files:</p>\n<ol>\n<li>create new pool folder</li>\n<li>read meta data (IPTC -&gt; title) and write it to meta.txt</li>\n<li>create the three image variants</li>\n<li>delete the processed image from the inbound folder</li>\n</ol>\n<span id=\"more\"></span>\n\n<hr>\n<h2 id=\"The-Script\"><a href=\"#The-Script\" class=\"headerlink\" title=\"The Script\"></a>The Script</h2><p>I implemented the script as a class with the following skeleton:</p>\n<figure class=\"highlight js\"><figcaption><span>pool-photo-generator.cjs</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&#x27;use strict&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">[requirements ...]</span><br><span class=\"line\"></span><br><span class=\"line\">[vars ...]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">PoolPhotoGenerator</span> &#123; </span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * Contructor of PoolPhotoGenerator</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">String</span>&#125; inboundFolder </span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">String</span>&#125; poolFolder </span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"title function_\">constructor</span>(<span class=\"params\">inboundFolder, poolFolder</span>) &#123; ... &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * Runs the generation of inbound photos to pool photos</span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"title function_\">generate</span>(<span class=\"params\"></span>) &#123; ... &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">   * Helper function to create image variant</span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">String</span>&#125; imgSource </span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">String</span>&#125; imgTarget </span></span><br><span class=\"line\"><span class=\"comment\">   * <span class=\"doctag\">@param</span> &#123;<span class=\"type\">Number</span>&#125; sizeWidth </span></span><br><span class=\"line\"><span class=\"comment\">   */</span></span><br><span class=\"line\">  <span class=\"keyword\">async</span> <span class=\"title function_\">createImageVariant</span>(<span class=\"params\">imgSource, imgTarget, sizeWidth</span>) &#123; ... &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span>.<span class=\"property\">PoolPhotoGenerator</span> = <span class=\"title class_\">PoolPhotoGenerator</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Requirements\"><a href=\"#Requirements\" class=\"headerlink\" title=\"Requirements\"></a>Requirements</h3><p>To handle files and folders in NodeJS you need at least <code>fs</code> and <code>path</code>:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;fs&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> path = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;path&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>For image processing there’s no better solution as <a href=\"https://sharp.pixelplumbing.com/\">Sharp</a>:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> sharp = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;sharp&#x27;</span>);</span><br><span class=\"line\">sharp.<span class=\"title function_\">cache</span>(<span class=\"literal\">false</span>); <span class=\"comment\">//prevents keeping source file open</span></span><br></pre></td></tr></table></figure>\n\n<p>Similarly powerful, but intended for reading image metadata is <a href=\"https://mutiny.cz/exifr/\">EXIFR</a>:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> exifr = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;exifr&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Vars\"><a href=\"#Vars\" class=\"headerlink\" title=\"Vars\"></a>Vars</h3><p>I just needed three vars for holding the full qualified path of the current execution folder and the names of the two incoming parameters:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> _currentPath = __dirname;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">let</span> _inboundFolder;</span><br><span class=\"line\"><span class=\"keyword\">let</span> _poolFolder;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Constructor\"><a href=\"#Constructor\" class=\"headerlink\" title=\"Constructor\"></a>Constructor</h3><p>In this case, the constructor only serves to provide and check the necessary parameters of the class:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">constructor</span>(<span class=\"params\">inboundFolder, poolFolder</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  _inboundFolder = path.<span class=\"title function_\">join</span>(_currentPath, inboundFolder);</span><br><span class=\"line\">  _poolFolder = path.<span class=\"title function_\">join</span>(_currentPath, poolFolder);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!fs.<span class=\"title function_\">existsSync</span>(_inboundFolder)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"string\">&quot;Inbound folder not found&quot;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> (!fs.<span class=\"title function_\">existsSync</span>(_poolFolder)) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">throw</span> <span class=\"string\">&quot;Pool folder not found&quot;</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Function-‘generate’\"><a href=\"#Function-‘generate’\" class=\"headerlink\" title=\"Function ‘generate’\"></a>Function ‘generate’</h3><p>This is the main function to call, and it first reads the input folder for JPG and cycles through all the hits. Then for each file the above four steps are executed:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"title function_\">generate</span>(<span class=\"params\"></span>) &#123; </span><br><span class=\"line\">    <span class=\"keyword\">let</span> self = <span class=\"variable language_\">this</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> inboundFiles = fs.<span class=\"title function_\">readdirSync</span>(_inboundFolder);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> jpgFiles = inboundFiles.<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">file</span> =&gt;</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> path.<span class=\"title function_\">extname</span>(file).<span class=\"title function_\">toLowerCase</span>() === <span class=\"string\">&quot;.jpg&quot;</span>;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    jpgFiles.<span class=\"title function_\">forEach</span>(<span class=\"function\">(<span class=\"params\">file</span>) =&gt;</span> &#123; </span><br><span class=\"line\">      <span class=\"keyword\">const</span> imgFile = path.<span class=\"title function_\">join</span>(_inboundFolder, file);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// Step 1: Create new pool folder</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> newPhotoFolder = path.<span class=\"title function_\">join</span>(_poolFolder, file.<span class=\"title function_\">replace</span>(path.<span class=\"title function_\">extname</span>(file), <span class=\"string\">&#x27;&#x27;</span>));</span><br><span class=\"line\">        fs.<span class=\"title function_\">mkdirSync</span>(newPhotoFolder);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// Step 2: Read TITLE from IPTC and write to meta.txt</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> iptcMeta = exifr.<span class=\"title function_\">parse</span>(imgFile, &#123; <span class=\"attr\">iptc</span>: <span class=\"literal\">true</span> &#125;).<span class=\"title function_\">then</span>(<span class=\"function\"><span class=\"params\">output</span> =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> title = output.<span class=\"property\">ObjectName</span> || <span class=\"string\">&quot;No Title&quot;</span>;</span><br><span class=\"line\">        fs.<span class=\"title function_\">writeFile</span>(path.<span class=\"title function_\">join</span>(newPhotoFolder, <span class=\"string\">&quot;meta.txt&quot;</span>), title);</span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// Step 3: Create image variants</span></span><br><span class=\"line\">      <span class=\"keyword\">const</span> createMobile = self.<span class=\"title function_\">createImageVariant</span>(imgFile, path.<span class=\"title function_\">join</span>(newPhotoFolder, <span class=\"string\">&quot;mobile.jpg&quot;</span>), <span class=\"number\">480</span>);</span><br><span class=\"line\">      <span class=\"keyword\">const</span> createTablet = self.<span class=\"title function_\">createImageVariant</span>(imgFile, path.<span class=\"title function_\">join</span>(newPhotoFolder, <span class=\"string\">&quot;tablet.jpg&quot;</span>), <span class=\"number\">768</span>);</span><br><span class=\"line\">      <span class=\"keyword\">const</span> createNormal = self.<span class=\"title function_\">createImageVariant</span>(imgFile, path.<span class=\"title function_\">join</span>(newPhotoFolder, <span class=\"string\">&quot;normal.jpg&quot;</span>), <span class=\"number\">1280</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// Step 4: Delete processed JPG in inbound folder, when everything is done</span></span><br><span class=\"line\">      <span class=\"title class_\">Promise</span>.<span class=\"title function_\">all</span>([</span><br><span class=\"line\">          iptcMeta, </span><br><span class=\"line\">          createMobile, </span><br><span class=\"line\">          createTablet, </span><br><span class=\"line\">          createNormal</span><br><span class=\"line\">        ]).<span class=\"title function_\">then</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">          fs.<span class=\"title function_\">unlinkSync</span>(imgFile);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Function-‘createImageVariant’\"><a href=\"#Function-‘createImageVariant’\" class=\"headerlink\" title=\"Function ‘createImageVariant’\"></a>Function ‘createImageVariant’</h3><p>This helper function reduces the original image to the desired size and saves it in the destination (pool) folder as a JPG:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"title function_\">createImageVariant</span>(<span class=\"params\">imgSource, imgTarget, sizeWidth</span>) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">await</span> <span class=\"title function_\">sharp</span>(imgSource)</span><br><span class=\"line\">    .<span class=\"title function_\">resize</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">fit</span>: sharp.<span class=\"property\">fit</span>.<span class=\"property\">contain</span>,</span><br><span class=\"line\">      <span class=\"attr\">width</span>: sizeWidth</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">    .<span class=\"title function_\">jpeg</span>(&#123; <span class=\"attr\">quality</span>: <span class=\"number\">90</span>, <span class=\"attr\">mozjpeg</span>: <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\">    .<span class=\"title function_\">toFile</span>(imgTarget);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>In the above code I have omitted some syntactical sugar. You can find the complete script here: <a href=\"https://github.com/kristofzerbe/kiko.io/blob/master/lib/pool-photo-generator.cjs\">https://github.com/kristofzerbe/kiko.io/blob/master/lib/pool-photo-generator.cjs</a></p>\n<hr>\n<h2 id=\"The-Runner\"><a href=\"#The-Runner\" class=\"headerlink\" title=\"The Runner\"></a>The Runner</h2><p>I integrated the call to the generator into my Hexo workflow, but also wrote a small runner to run it independently:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * This is only for executing the selector manually. </span></span><br><span class=\"line\"><span class=\"comment\"> * </span></span><br><span class=\"line\"><span class=\"comment\"> * Execution:</span></span><br><span class=\"line\"><span class=\"comment\"> * node &quot;./lib/_run_pool-photo-generator.cjs&quot;</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">PoolPhotoGenerator</span> = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;../lib/pool-photo-generator.cjs&quot;</span>).<span class=\"property\">PoolPhotoGenerator</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> inboundFolder = <span class=\"string\">&quot;../new_photos&quot;</span>; <span class=\"comment\">//my inbound folder</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> poolFolder = <span class=\"string\">&quot;../static/pool&quot;</span>; <span class=\"comment\">//my pool folder</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> generator = <span class=\"keyword\">new</span> <span class=\"title class_\">PoolPhotoGenerator</span>(inboundFolder, poolFolder);</span><br><span class=\"line\">generator.<span class=\"title function_\">generate</span>();</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h2><p>Last but not least, in my existing Lightroom workflow, I configured the wonderful <a href=\"http://regex.info/blog/lightroom-goodies/collection-publisher\">plugin Jeffrey’s “Collection Publisher”</a> to create the new pool photos directly through it into the Inbound folder. Once the changes are committed to Github, where the blog is hosted and the deployment action happens, the new header images are created and displayed at <a href=\"https://kiko.io/photos\">https:\\kiko.io\\photos</a> and are available for a new post.</p>\n",
            "tags": [
                "Imaging",
                "Node.js"
            ]
        },
        {
            "id": "https://kiko.io/post/SVWW-vs-Karlsruhe-2023-08-18/",
            "url": "https://kiko.io/post/SVWW-vs-Karlsruhe-2023-08-18/",
            "title": "SVWW vs. Karlsruhe @ 2023-08-18",
            "image": "https://kiko.io/images/social-media/SVWW-vs-Karlsruhe-2023-08-18.thumb.png",
            "date_published": "2023-08-19T16:33:00.000Z",
            "date_modified": null,
            "content_html": "<p>I already had my season ticket on the first matchday of the 2023&#x2F;2024 season, but was unable to get into the stadium for the team’s first home game and thus missed the 1:1 draw against <strong>Magdeburg</strong>.</p>\n<h2 id=\"First-Impressions\"><a href=\"#First-Impressions\" class=\"headerlink\" title=\"First Impressions\"></a>First Impressions</h2><p>So, Friday was my premiere on my season seat West 3, Row 1, Seat 1. That this seat was free when I booked it was a coincidence, but being so close to the pitch appealed to me. In front of me, the concrete railing of the spectator block, where I can put my beer, and directly below it, the SVWW coach’s bench under a plexiglass roof. You can hardly get any closer to the team.</p>\n<span id=\"more\"></span>\n\n<p>However, the division of the row of seats is quite stupid, with the separation of Block West 2 and West 3 being quite arbitrary. With the result that I have to push my way to seat 1 across almost 20 seats if I am late. From the entrance of block West 2, on the other hand, it would only be just under 10 seats, but the stewards won’t let me get to my seat via West 2 because of my card and for the sake of German order :|</p>\n<p>My seat neighbour on the right side is a man of the “Do I have to talk?” type who can hardly get his teeth apart even during the game. On my left, however, sits a nice older lady with short grey hair who must already be part of the inventory. A permanent season ticket holder, I guess, who doesn’t yell all the time either, but seems to be a true fan. The first question directed at me was “But you weren’t there for the first game!?”, which immediately triggered a kind of guilt in me, “Yes, I didn’t cheer for them in the first game. I’m sooo sorry”. We’ll get on well, especially as I took her deposit cup at half-time and cashed it in. We’re already friends, even if I don’t know her name yet.</p>\n<p>Speaking of beverage supply: The club has a lot of stands around the stadium, but they are so badly organised that it’s hard to make it back to your seat in time. There were four staff in the snack van right next to Block West 3, one for ordering and collecting money and the other three for serving. The cashier was so slow that the other three had nothing to do the whole time and the queue in front of the stand got longer and longer and some people just gave up.  Dear operator: This would happen much faster with two cashiers. It may be that they are all volunteers, but that can be organised much better for the benefit of the fans!</p>\n<p>In the row directly behind me sits a group of older men who spout rather platitudinous football wisdom all the time. These guys would be a perfect model for the German (but unfortunately already deceased) comedian Loriot :D<br>Sitting next to them, however, are two or three guys in their 50s who don’t really have their emotions under control. One of them, in particular, yells “Referee, hang yourself” or something similarly stupid and insults opposing players when they go down in a tackle. I, on the other hand, only ever shouted positively at my own boys. “Let’s go”, “Go on, go on, go on”. And of course I sing along, because no one here notices how “well” I can do that ;)</p>\n<hr>\n<h2 id=\"The-Game\"><a href=\"#The-Game\" class=\"headerlink\" title=\"The Game\"></a>The Game</h2><p>The club has of course strengthened itself for the new season with new players in all sections of the team, whom I have now seen play for the first time. And unfortunately, some of them, such as Brooklyn Ezeh and Benedikt Hollerbach, who grew on me during the few games last year, have moved to other clubs.</p>\n\n      <div class=\"image-masonry\" id=\"image-masonry-2jj8ys\">\n        <div><img class=\"no-caption\" src=\"/post/SVWW-vs-Karlsruhe-2023-08-18/PXL_20230818_162508253.jpg\" alt=\"SVWW vs Karlsruhe - Before the start of the game\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Karlsruhe-2023-08-18/PXL_20230818_162748966.jpg\" alt=\"SVWW vs Karlsruhe - Team line-up\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Karlsruhe-2023-08-18/PXL_20230818_165147461.jpg\" alt=\"SVWW vs Karlsruhe - Goal to 1:1\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Karlsruhe-2023-08-18/PXL_20230818_165151113.jpg\" alt=\"SVWW vs Karlsruhe - Goal to 1:1\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Karlsruhe-2023-08-18/PXL_20230818_165331533.jpg\" alt=\"SVWW vs Karlsruhe - Drinking break\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Karlsruhe-2023-08-18/PXL_20230818_171135513.jpg\" alt=\"SVWW vs Karlsruhe - Treatment\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Karlsruhe-2023-08-18/PXL_20230818_175443989.jpg\" alt=\"SVWW vs Karlsruhe - 2. Half\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Karlsruhe-2023-08-18/PXL_20230818_180413434.jpg\" alt=\"SVWW vs Karlsruhe - Lees substitution\" /></div><div><img class=\"no-caption\" src=\"/post/SVWW-vs-Karlsruhe-2023-08-18/PXL_20230818_182650426.jpg\" alt=\"SVWW vs Karlsruhe - Cheers of victory\" /></div>\n      </div>\n      <script>\n        let macy = new Macy({\n          container: '#image-masonry-2jj8ys',\n          trueOrder: false,\n          waitForImages: false,\n          useOwnImageLoader: false,\n          debug: true,\n          mobileFirst: true,\n          columns: 2,\n          margin: {\n            y: 6,\n            x: 6\n          },\n          breakAt: {\n            980: {\n              margin: {\n                x: 8,\n                y: 8\n              },\n              columns: 3\n            },\n            768: 2,\n            640: 3\n          }\n        });\n      </script>\n    \n\n<p>But we quickly saw that our coach, <strong>Markus Kauczinski</strong>, knows his ex-club Karlsruher FC well. At the beginning of the first half, the players of this traditional club directly tried to overrun our team, seen by 10,626 spectators. There was a lot of pressure on the defence, but it held up magnificently. There was always a Wiesbaden leg between the ball and the goal and we limited ourselves to counterattacks, which led to success in the 22nd minute when the newcomer from Bayern Munich <strong>Lee Hyun-Ju</strong> marked the <strong>1:0</strong>.</p>\n<p>The rest of the first half was quite even, because Karlsruhe had lost the momentum a little bit, but they found it again at the beginning of the second half. Again, the game ran in only one direction, our goal, but the last 16 metres, in the box, were impregnable for them and when they did manage it, they failed because of our goalkeeper <strong>Florian Stritzel</strong>.</p>\n<p>&#x21FE;&nbsp;<a href=\"https://www.kicker.de/wiesbaden-gegen-karlsruhe-2023-bundesliga-4861686/spielbericht\">Match report on kicker.de</a></p>\n<hr>\n<h2 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h2><p>SV Wehen Wiesbaden is certainly the underdog in the 2. Bundesliga and no fan expects that at the end of the season it will be about more than keeping the league. I like underdogs and am therefore completely thrilled about this victory, especially since the table looked really good at the end of the day:</p>\n\n    <a href=\"https://www.kicker.de/2-bundesliga/tabelle\">\n        <img src=\"tabelle-23-08-18.png\" alt=\"Table 2. Liga, Friday 18. August 2023\" />\n    </a>\n    \n\n<p>In two weeks, an even bigger German football heavyweight will come to Wiesbaden: Schalke 04. Let’s see if the boys have grown a few more legs by then. We will need them …</p>\n",
            "tags": [
                "SVWW",
                "2. Bundesliga"
            ]
        },
        {
            "id": "https://kiko.io/post/My-Hometown-My-Club/",
            "url": "https://kiko.io/post/My-Hometown-My-Club/",
            "title": "My Hometown, My Club",
            "image": "https://kiko.io/images/social-media/My-Hometown-My-Club.thumb.png",
            "date_published": "2023-08-19T13:59:18.000Z",
            "date_modified": null,
            "content_html": "<img src=\"/images/SV-Wehen-Wiesbaden.svg\" class=\"float-element\" style=\"width:8rem;\" />\n\n<p>I was born in Wiesbaden (Hesse, Germany) and I consider this city my home, even though my father built a house in a small suburb called Taunusstein-Wehen in the 70s and I practically grew up there. In this small town, where practically everybody knows everybody, there is a small football club called SV Wehen since 1926 and some of my schoolmates played there in their youth.</p>\n<p>This small club played only a regional role at all until 1979, when a local business man put money into the club and it worked its way up one league after the other over the years:</p>\n<span id=\"more\"></span>\n\n<p><strong>1983&nbsp;&nbsp;Bezirksliga</strong> (amateurs)<br><span style=\"font-size:120%; font-weight:bold;display:inline-block;padding-left:32px;\">&#x21E3;</span><br><strong>1987&nbsp;&nbsp;Landesliga</strong> (amateurs)<br><span style=\"font-size:120%; font-weight:bold;display:inline-block;padding-left:32px;\">&#x21E3;</span><br><strong>1989&nbsp;&nbsp;Oberliga</strong> (amateurs)<br><span style=\"font-size:120%; font-weight:bold;display:inline-block;padding-left:32px;\">&#x21E3;</span><br><strong>1994&nbsp;&nbsp;Regionalliga</strong> (semi-professional)<br><span style=\"font-size:120%; font-weight:bold;display:inline-block;padding-left:32px;\">&#x21E3;</span><br><strong>2007&nbsp;&nbsp;2. Bundesliga</strong> (professional)</p>\n<p>However, with the club’s promotion to the second highest and now professional league of German football, the requirements for the stadium and the necessary infrastructure also changed and the old one in Wehen did not meet the requirements of the officials. So the professional football department was spun off into a company called <strong><a href=\"https://en.wikipedia.org/wiki/SV_Wehen_Wiesbaden\">SV Wehen Wiesbaden</a></strong> based in the nearby Hessian capital, where the new Brita Arena was built.</p>\n<p>They were relegated to the newly (in 2008) formed 3. Bundesliga after 2 years, but the new club remained in Wiesbaden and in 2020 it was again promoted to the 2. Bundesliga, but was relegated again one year later.</p>\n<p>I was always only semi-interested in football, especially since I became a fan of the Hamburger Sportverein (HSV) by chance in the early 80s, but in 2022 I got free tickets to a SV Wehen Wiesbaden game through my wife’s colleague … and it was actually really fun, with a cup of beer and a bratwurst, to cheer on the guys on the pitch who were playing professional football in my hometown. I was a little bit hooked …</p>\n<p>At the end of the 2022&#x2F;2023 season, the club finished 3rd in the 3. Bundesliga, having missed out on direct promotion, but qualifying for relegation against the third last-place team in the next higher league: Arminia Bielefeld. The two incredible relegation matches were actually won by the underrated club, 4:0 and 2:1 respectively. YESSSS!</p>\n<p>Somehow it seemed clear to me to go to the stadium more often from now on and the fact that this year the 2nd league is peppered with German traditional clubs (like HSV, my childhood club) made me buy a season ticket for the first time: <strong>Block West 3, Row 1, Seat 1</strong> … \\o&#x2F;.</p>\n",
            "tags": [
                "SVWW"
            ]
        },
        {
            "id": "https://kiko.io/post/CONTINUE-READING-Link-Auto-Scrolling-on-the-called-page/",
            "url": "https://kiko.io/post/CONTINUE-READING-Link-Auto-Scrolling-on-the-called-page/",
            "title": "CONTINUE READING Link & Auto Scrolling on the called page",
            "image": "https://kiko.io/images/social-media/CONTINUE-READING-Link-Auto-Scrolling-on-the-called-page.thumb.png",
            "date_published": "2023-07-29T14:14:35.000Z",
            "date_modified": null,
            "content_html": "<p>On the home page of a blog or other text-heavy site with regular new articles, it is often advisable not to display the entire text of the article, but a more or less large excerpt and a READ MORE or CONTINUE READING link that leads to the rest of the article, usually a stand-alone article page. This allows the user to quickly get a picture of, say, the last dozen posts when he comes here to browse your texts.</p>\n<p>However, it is somewhat unpleasant if you as the author decide to display a larger excerpt after all, and the user lands at the top of the called page after clicking on the MORE link and first has to scroll&#x2F;navigate to the right place until he can resume reading. This destroys his reading flow. It is better to take the user directly to the page where the MORE link interrupted the text on the home page.</p>\n<p>With a hash and some JavaScript this is done so quickly, that I wonder why I haven’t implemented this on my own blog already :)</p>\n<span id=\"more\"></span>\n\n<p>The principle is quite simple:</p>\n<ol>\n<li>append a hash to the MORE link URL the user will click</li>\n<li>detect the hash on the called article page and scroll via JavaScript to an anchor element that was rendered here instead of the MORE link</li>\n<li>remove the hash from the URL again</li>\n</ol>\n<h2 id=\"Some-pre-explanation-of-my-example\"><a href=\"#Some-pre-explanation-of-my-example\" class=\"headerlink\" title=\"Some pre-explanation of my example\"></a>Some pre-explanation of my example</h2><p>My blog is based on the static website generator <a href=\"https://hexo.io/\">Hexo</a>. So I write my articles in <a href=\"https://en.wikipedia.org/wiki/Markdown\">Markdown</a> and use for the interruption of an article a built-in helper, which uses the comment <code>&lt;!-- more --&gt;</code> to hack the <strong>Content</strong> into two parts (<strong>Excerpt</strong> and <strong>More</strong>) and replaces it with simple <strong><code>&lt;span id=&quot;more&quot;&gt;&lt;/span&gt;</code></strong>. I use the <strong>Excerpt</strong> for the start and other overview pages and the <strong>Content</strong> for the article pages themselves.</p>\n<h2 id=\"Expand-the-MORE-link\"><a href=\"#Expand-the-MORE-link\" class=\"headerlink\" title=\"Expand the MORE link\"></a>Expand the MORE link</h2><p>In my template for the start page, 8 articles are currently rendered into the page via a separate <em>EXCERPT</em> template. This contains the code for the MORE link (<code>excerpt_link</code> in my example):</p>\n<figure class=\"highlight js\"><figcaption><span>../layout/partial/excerpt.ejs</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div <span class=\"keyword\">class</span>=<span class=\"string\">&quot;article-entry&quot;</span>&gt;</span><br><span class=\"line\">  &lt;%- post.<span class=\"property\">excerpt</span> %&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">  &lt;% <span class=\"keyword\">if</span> (theme.<span class=\"property\">excerpt_link</span>)&#123; %&gt;</span><br><span class=\"line\">    <span class=\"language-xml\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;article-more-link&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;&lt;%- url_for(post.path) + &#x27;#continue&#x27; %&gt;&quot;</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">        &lt;%= theme.excerpt_link %&gt;</span></span><br><span class=\"line\"><span class=\"language-xml\">      <span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span></span><br><span class=\"line\"><span class=\"language-xml\">    <span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span></span><br><span class=\"line\">  &lt;% &#125; %&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p>I simply appended the hash “<strong>#continue</strong>“ to the <code>url_for(post.path)</code> statement and this is it for the start page.</p>\n<h2 id=\"The-JS-on-the-article-page\"><a href=\"#The-JS-on-the-article-page\" class=\"headerlink\" title=\"The JS on the article page\"></a>The JS on the article page</h2><p>Since some of my pages deal with hashes, I have a general script that loads in the footer of each page and checks the hashes passed to the page. In the switch statement I only needed a new case for <strong>continue</strong>.</p>\n<p>The first thing I did was to remove the hash again from the because I don’t want to show that to the user. It is only a tool for a better reading flow and should not have any further effects.</p>\n<p>To scroll around on a page via JavaScript, there is the <code>scrollIntoView</code> method, which provides a wonderfully smooth scrolling effect with the <code>behavior: &quot;smooth&quot;</code> and <code>inline: &quot;nearest&quot;</code> options. In my case, however, this was out of the question, since it does not support an offset, which I need for my fixed header.</p>\n<p>The solution was the classic <code>window.scrollTo()</code> function, which is a bit more work, but you can specify exactly where you want the page to go.</p>\n<figure class=\"highlight js\"><figcaption><span>../layout/partial/after-footer.ejs</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\"><span class=\"keyword\">var</span> hash = <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">hash</span>.<span class=\"title function_\">substr</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">switch</span> (hash.<span class=\"title function_\">toLowerCase</span>()) &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">case</span> <span class=\"string\">&quot;continue&quot;</span>:</span><br><span class=\"line\">    history.<span class=\"title function_\">replaceState</span>(<span class=\"literal\">null</span>, <span class=\"literal\">null</span>, <span class=\"string\">&#x27; &#x27;</span>); <span class=\"comment\">// remove hash</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable language_\">window</span>.<span class=\"title function_\">scrollTo</span>(&#123; <span class=\"comment\">// scroll to the MORE element in the Article</span></span><br><span class=\"line\">      <span class=\"attr\">behavior</span>: <span class=\"string\">&#x27;smooth&#x27;</span>,</span><br><span class=\"line\">      <span class=\"attr\">top</span>:</span><br><span class=\"line\">        <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&quot;#more&quot;</span>).<span class=\"title function_\">getBoundingClientRect</span>().<span class=\"property\">top</span> -</span><br><span class=\"line\">        <span class=\"variable language_\">document</span>.<span class=\"property\">body</span>.<span class=\"title function_\">getBoundingClientRect</span>().<span class=\"property\">top</span> -</span><br><span class=\"line\">        <span class=\"number\">200</span>, <span class=\"comment\">// with a little buffer around it</span></span><br><span class=\"line\">      &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">break</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\">  <span class=\"attr\">default</span>: <span class=\"keyword\">break</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/script&gt;</span><br></pre></td></tr></table></figure>\n\n<p>This is it …</p>\n",
            "tags": [
                "UI",
                "Usability"
            ]
        },
        {
            "id": "https://kiko.io/post/Extension-of-downupPopup-Back-Button-Escape-Key-More/",
            "url": "https://kiko.io/post/Extension-of-downupPopup-Back-Button-Escape-Key-More/",
            "title": "Extension of downupPopup: Back Button, Escape Key & More",
            "image": "https://kiko.io/images/social-media/Extension-of-downupPopup-Back-Button-Escape-Key-More.thumb.png",
            "date_published": "2023-07-04T11:07:38.000Z",
            "date_modified": null,
            "content_html": "<p>I recently introduced a Bottom Sheet dialog on this blog to display a page’s metadata (<a href=\"javascript:dialog.pageMeta()\">like this</a>), using Ali Dincer’s work: <a href=\"https://downuppopupjs.dincerali.com/\"><strong>downupPopup</strong></a>. I described the way to do this in <a href=\"/post/Show-pages-meta-data-JSON-LD-in-Bottom-Sheet/\">a post</a> a couple three weeks ago.</p>\n<p>Shortly after that <a href=\"https://octodon.social/@koos\">Koos Looijensteijn</a> triggered me with his post <a href=\"https://www.kooslooijesteijn.net/blog/digital-business-cards-vcard-qr-code-website\">How to make digital business cards and share them via QR codes</a> and I felt like using my newly introduced dialog manager based on downupPopup for my own contact card.<br><strong>But more about that at a later time, respectively blog post…</strong></p>\n<p>Important for this post is that Ali’s bottom sheet solution did not offer everything I wanted for my implementation:</p>\n<h2 id=\"1-Make-Dialog-Reusable\"><a href=\"#1-Make-Dialog-Reusable\" class=\"headerlink\" title=\"1. Make Dialog Reusable\"></a>1. Make Dialog Reusable</h2><p>As I have already described in the above mentioned article: Ali’s approach to calling the dialog was to create and initialize the necessary HTML elements if it didn’t already exist in the DOM. I pulled out the initialization to make the component reusable. There is now a preparation part and an initialization part and the latter is always called, no matter if another bottom sheet dialog was already created before.</p>\n<p><a href=\"https://github.com/ali-dincer/downupPopup.js/pull/2/commits/f3751ca56c4809decc1ec3845e5c301a13292773\">My GitHub commit on this part</a>…</p>\n<span id=\"more\"></span>\n\n<hr>\n<h2 id=\"2-Dynamic-Distance\"><a href=\"#2-Dynamic-Distance\" class=\"headerlink\" title=\"2. Dynamic Distance\"></a>2. Dynamic Distance</h2><p>Since it makes no sense to have to scroll around on a contact card if the space provided by the web designer is not sufficient at small resolutions, I need a more dynamic approach to Ali’s <em><code>distance</code></em>, which sets the distance of the bottom sheet to the top of the viewport. </p>\n<p>To do this, I introduced a new setting called <strong><code>minContentHeight</code></strong> that can specify in pixels how high the content must be at least for everything to be visible. Because this makes the possibly specified <code>distance</code> absurd,  I overwrite this specification with a value calculated with it and only then enter the distance value into the element attribute for further use. </p>\n<p>For the calculation to be correct, however, I need a fixed value for the HEADER of the dialog at this point, which was previously only defined in the CSS. In retrospect, this was a good decision, because once slight pixel shifts between HEADER and CONTENT disappeared in Google’s Chrome, my preferred browser.</p>\n<figure class=\"highlight js\"><figcaption><span>downupPopup.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Option Handling</span></span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> settings = $.<span class=\"title function_\">extend</span>(&#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"attr\">minContentHeight</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Initialization</span></span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// setting header height</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> $head = $this.<span class=\"title function_\">find</span>(<span class=\"string\">&quot;.downupPopup-header&quot;</span>);</span><br><span class=\"line\">$head.<span class=\"title function_\">find</span>(<span class=\"string\">&quot;span&quot;</span>).<span class=\"title function_\">text</span>(settings.<span class=\"property\">headerText</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> headH = <span class=\"number\">6</span>;</span><br><span class=\"line\">$head.<span class=\"title function_\">css</span>(<span class=\"string\">&#x27;height&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span> + headH + <span class=\"string\">&#x27;vh&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// calculating dynamic distance by given minContentHeight</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> (settings.<span class=\"property\">minContentHeight</span>) &#123; </span><br><span class=\"line\">  <span class=\"keyword\">let</span> calcDistance = <span class=\"title class_\">Math</span>.<span class=\"title function_\">round</span>((<span class=\"number\">100</span> * (<span class=\"variable language_\">window</span>.<span class=\"property\">innerHeight</span> - settings.<span class=\"property\">minContentHeight</span>) / <span class=\"variable language_\">window</span>.<span class=\"property\">innerHeight</span>)) - headH;</span><br><span class=\"line\">  settings.<span class=\"property\">distance</span> = <span class=\"title class_\">Math</span>.<span class=\"title function_\">max</span>(<span class=\"number\">0</span>, calcDistance);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$this.<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;distance&#x27;</span>, settings.<span class=\"property\">distance</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// setting distance to top</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> $cont = $this.<span class=\"title function_\">find</span>(<span class=\"string\">&quot;.downupPopup-content&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> contH = <span class=\"number\">100</span> - settings.<span class=\"property\">distance</span> - headH;</span><br><span class=\"line\">$cont.<span class=\"title function_\">css</span>(<span class=\"string\">&#x27;height&#x27;</span>, <span class=\"string\">&#x27;&#x27;</span> + contH + <span class=\"string\">&#x27;vh&#x27;</span>);</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://github.com/ali-dincer/downupPopup.js/pull/2/commits/0b1b72a4dd5ceb4b1436540a44c24f256f92a1ad\">My GitHub commit on this part</a>…</p>\n<hr>\n<h2 id=\"3-Closing-Dialog-by-ESC-Key-or-BACK-Button\"><a href=\"#3-Closing-Dialog-by-ESC-Key-or-BACK-Button\" class=\"headerlink\" title=\"3. Closing Dialog by ESC Key or BACK Button\"></a>3. Closing Dialog by ESC Key or BACK Button</h2><p>With Koos’ really nice <a href=\"https://www.fortomorrow.eu/en/contact/koos\">contact card</a>, I noticed that I automatically tried to close his SHARE DATA popup dialog with the QRCode, which is created on-the-fly with JavaScript, with the BACK button, but ended up on a completely different, previously called page. I guess this is a psychological thing: if an element not bound to the url overlaps the current page, people (or just me?) perceives it as an independent page and try to navigate with long learned methods.</p>\n<p>So what was missing was, on the one hand, the ability to close the dialog using the <strong>ESCAPE key</strong> (for desktop users) and, on the other hand, to manipulate the URL history so that the <strong>BACK button</strong> or the corresponding mobile gesture works as expected.</p>\n<p>For the latter I needed again a new setting: the hash which will be added to the current URL to make the BACK button work: <code>urlHash</code>. </p>\n<p>In addition, there were several redundant places in the original code, with which the dialog was closed, which I have summarized in a function, in order to avoid the new necessary to write several times. (<a href=\"https://github.com/ali-dincer/downupPopup.js/pull/2/commits/fa0e119b42a444f1cb671d02381029f662d94591\">my GitHub commit on this part</a>).</p>\n<figure class=\"highlight js\"><figcaption><span>downupPopup.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Option Handling</span></span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> settings = $.<span class=\"title function_\">extend</span>(&#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\">  <span class=\"attr\">urlHash</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// General CLOSE function</span></span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">close</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">  ...</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// unbind ESC</span></span><br><span class=\"line\">  $(<span class=\"variable language_\">document</span>).<span class=\"title function_\">off</span>(<span class=\"string\">&#x27;keyup&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"comment\">// remove url hash &amp; unbind BACK button</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> (settings?.<span class=\"property\">urlHash</span> || $this.<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;hash&#x27;</span>)) &#123;</span><br><span class=\"line\">    history.<span class=\"title function_\">replaceState</span>(<span class=\"literal\">null</span>, <span class=\"literal\">null</span>, <span class=\"string\">&#x27; &#x27;</span>);</span><br><span class=\"line\">    $(<span class=\"variable language_\">window</span>).<span class=\"title function_\">off</span>(<span class=\"string\">&quot;popstate&quot;</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// Initialization</span></span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// bind ESC to close</span></span><br><span class=\"line\">$(<span class=\"variable language_\">document</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&#x27;keyup&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">event</span>) &#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(event.<span class=\"property\">key</span> == <span class=\"string\">&quot;Escape&quot;</span>) &#123;</span><br><span class=\"line\">    <span class=\"title function_\">close</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> (settings.<span class=\"property\">urlHash</span>) &#123;</span><br><span class=\"line\">  <span class=\"comment\">// set url hash &amp; bind BACK button to close</span></span><br><span class=\"line\">  <span class=\"variable language_\">window</span>.<span class=\"property\">location</span>.<span class=\"property\">hash</span> = settings.<span class=\"property\">urlHash</span>;</span><br><span class=\"line\">  $(<span class=\"variable language_\">window</span>).<span class=\"title function_\">on</span>(<span class=\"string\">&quot;popstate&quot;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>)&#123;</span><br><span class=\"line\">    <span class=\"title function_\">close</span>();</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$this.<span class=\"title function_\">attr</span>(<span class=\"string\">&#x27;hash&#x27;</span>, settings.<span class=\"property\">urlHash</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p>The key of this code regarding the BACK button is to put the passed hash into the URL when initializing the dialog via <code>window.location.hash</code> and to make sure that it is closed when the hash is removed again by the BACK button. I achieved this by using the <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/Window/popstate_event\"><code>popstate</code></a> event, which fires when the active history entry changes.</p>\n<p>When the dialog is about to close, I had to make sure that the <code>history</code> entry is overwritten via <a href=\"https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState\"><code>replaceState</code></a> with <code>null</code> (delete) and remove the previously bound <code>popstate</code> event again, to avoid side effects.</p>\n<p>The code for the ESC key is similar: Bind the <code>keyup</code> event on startup to close the dialog and remove it again on close.</p>\n<p><a href=\"https://github.com/ali-dincer/downupPopup.js/pull/2/commits/1577a0e6306f75101afb09dc05f7abf80dc29e40\">My GitHub commit on this part</a>…</p>\n<hr>\n<h2 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h2><p>Everything works as expected and I hope that Ali will process my pull request soon. Until then you can find the code <a href=\"https://github.com/kristofzerbe/downupPopup.js\">in my fork</a>.</p>\n<p>All in all, the script has not become more readable or easier to maintain, even by using jQuery. In my head I already have the idea to do a complete rewrite as ESM class. Reason for this is surely Ali’s approach to realize commands like ‘open’ and ‘close’ as string parameters. This works better than real functions of an instantiated object. Furthermore, it is necessary to cache settings like <code>distance</code> and <code>urlHash</code> in HTML attributes, which does not have to be this way.</p>\n",
            "tags": [
                "UI",
                "GitHub",
                "jQuery",
                "Contributing"
            ]
        },
        {
            "id": "https://kiko.io/post/Discoveries-25-Tutorials-HowTo-s/",
            "url": "https://kiko.io/post/Discoveries-25-Tutorials-HowTo-s/",
            "title": "Discoveries #25 - Tutorials & HowTo's",
            "image": "https://kiko.io/images/social-media/Discoveries-25-Tutorials-HowTo-s.thumb.png",
            "date_published": "2023-07-01T11:19:22.000Z",
            "date_modified": null,
            "content_html": "<p>This Discoveries issue is generally about tutorials from different areas: CORS, Azure, Elektron, GitHub Action, SVG. Outstanding articles by outstanding authors, who explain things in an easy and understandable way.</p>\n<p>Happy Reading…</p>\n\n        <ul class=\"anchorlist\">\n            <li data-anchor=\"#cs-visualized-cors-dev\">CS Visualized: CORS</li><li data-anchor=\"#use-azure-functions-azure-storage-blobs-and-cosmos-db-to-copy-images-from-public-urls\">Use Azure Functions, Azure Storage blobs, and Cosmos DB to copy images from public URLs</li><li data-anchor=\"#build-a-secure-desktop-app-with-electron-forge-and-react\">Build a Secure Desktop App with Electron Forge and React</li><li data-anchor=\"#node-js-api-authentication-with-json-web-tokens\">Node.js API Authentication with JSON Web Tokens</li><li data-anchor=\"#how-to-build-an-smtp-mail-server-with-express-node-and-gmail\">How To Build an SMTP Mail Server with Express, Node, and Gmail</li><li data-anchor=\"#advanced-git-series-1-8-creating-the-perfect-commit-in-git\">Advanced Git Series 1/8: Creating the Perfect Commit in Git</li><li data-anchor=\"#learn-how-to-use-git-and-github-in-a-team-like-a-pro\">Learn how to use Git and GitHub in a team like a pro</li><li data-anchor=\"#how-to-build-your-first-javascript-github-action\">How to Build Your First JavaScript GitHub Action</li><li data-anchor=\"#getting-the-gist-of-github-actions\">Getting the Gist of GitHub Actions</li><li data-anchor=\"#swipey-image-grids-with-svg\">Swipey Image Grids (with SVG)</li>\n        </ul>\n    \n\n<span id=\"more\"></span>\n\n\n    <hr id=\"cs-visualized-cors-dev\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      CS Visualized: CORS\n    </h2>\n    <small>by Lydia Hallie&nbsp;<br><a href=\"https://dev.to/lydiahallie/cs-visualized-cors-5b8h\">https://dev.to/lydiahallie/cs-visualized-cors-5b8h</a></small>\n    <p>What web dev hasn&#39;t struggled with CORS errors? Lydia explains here in great detail and with visual support the whys and wherefores of CORS and how to work around problems.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://dev.to/lydiahallie/cs-visualized-cors-5b8h\">\n      <img class=\"limit\" src=\"cs-visualized-cors-dev.png\" alt=\"CS Visualized: CORS\" />\n    </a>\n  \n\n\n    <hr id=\"use-azure-functions-azure-storage-blobs-and-cosmos-db-to-copy-images-from-public-urls\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      Use Azure Functions, Azure Storage blobs, and Cosmos DB to copy images from public URLs\n    </h2>\n    <small>by Dave Brock&nbsp;<br><a href=\"https://daveabrock.com/2020/11/25/images-azure-blobs-cosmos\">https://daveabrock.com/2020/11/25/images-azure-blobs-cosmos</a></small>\n    <p>In this post, Dave shows how to work with Azure Storage blobs and Cosmos DB to copy images that are available over the public Internet.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://daveabrock.com/2020/11/25/images-azure-blobs-cosmos\">\n      <img class=\"limit\" src=\"use-azure-functions-azure-storage-blobs-and-cosmos-db-to-copy-images-from-public-urls.png\" alt=\"Use Azure Functions, Azure Storage blobs, and Cosmos DB to copy images from public URLs\" />\n    </a>\n  \n\n\n    <hr id=\"build-a-secure-desktop-app-with-electron-forge-and-react\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      Build a Secure Desktop App with Electron Forge and React\n    </h2>\n    <small>by Kilian Valkhof&nbsp;<br><a href=\"https://www.sitepoint.com/electron-forge-react-build-secure-desktop-app/?utm_source=rss\">https://www.sitepoint.com/electron-forge-react-build-secure-desktop-app/?utm_source=rss</a></small>\n    <p>Creating a cross-platform desktop app is easy thanks to Electron. Learn from Kilian how to create a secure desktop app using React, Electron and Electron Forge.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://www.sitepoint.com/electron-forge-react-build-secure-desktop-app/?utm_source=rss\">\n      <img class=\"limit\" src=\"build-a-secure-desktop-app-with-electron-forge-and-react.jpg\" alt=\"Build a Secure Desktop App with Electron Forge and React\" />\n    </a>\n  \n\n\n    <hr id=\"node-js-api-authentication-with-json-web-tokens\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      Node.js API Authentication with JSON Web Tokens\n    </h2>\n    <small>by Jay Krishna Reddy&nbsp;<br><a href=\"https://javascript.plainenglish.io/node-js-api-authentication-with-json-web-tokens-bb511f603723\">https://javascript.plainenglish.io/node-js-api-authentication-with-json-web-tokens-bb511f603723</a></small>\n    <p>In this article, Jay shows how to access the JSON web token (JWT) in Node.js and also to protect our routes with it.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://javascript.plainenglish.io/node-js-api-authentication-with-json-web-tokens-bb511f603723\">\n      <img class=\"limit\" src=\"node-js-api-authentication-with-json-web-tokens.jpg\" alt=\"Node.js API Authentication with JSON Web Tokens\" />\n    </a>\n  \n\n\n    <hr id=\"how-to-build-an-smtp-mail-server-with-express-node-and-gmail\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      How To Build an SMTP Mail Server with Express, Node, and Gmail\n    </h2>\n    <small>by Michael Rehnert&nbsp;<br><a href=\"https://daily.dev/blog/how-to-build-an-smtp-mail-server-with-express-node-and-gmail\">https://daily.dev/blog/how-to-build-an-smtp-mail-server-with-express-node-and-gmail</a></small>\n    <p>Michael shows in his tutorial how to use Node and Express to develop a mail server that uses Gmail for free transport via SMTP.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://daily.dev/blog/how-to-build-an-smtp-mail-server-with-express-node-and-gmail\">\n      <img class=\"limit\" src=\"how-to-build-an-smtp-mail-server-with-express-node-and-gmail.png\" alt=\"How To Build an SMTP Mail Server with Express, Node, and Gmail\" />\n    </a>\n  \n\n\n    <hr id=\"advanced-git-series-1-8-creating-the-perfect-commit-in-git\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      Advanced Git Series 1/8: Creating the Perfect Commit in Git\n    </h2>\n    <small>by Tobias Günther&nbsp;<br><a href=\"https://css-tricks.com/creating-the-perfect-commit-in-git/\">https://css-tricks.com/creating-the-perfect-commit-in-git/</a></small>\n    <p>In this series from 2021 on CSS-Tricks, Tobias goes into the most important aspects in the advanced handling of Git in a vivid way. Better commits, branching, collaboration, rebasing, cherry-picking … a good reminder.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://css-tricks.com/creating-the-perfect-commit-in-git/\">\n      <img class=\"limit\" src=\"advanced-git-series-1-8-creating-the-perfect-commit-in-git.jpg\" alt=\"Advanced Git Series 1/8: Creating the Perfect Commit in Git\" />\n    </a>\n  \n\n\n    <hr id=\"learn-how-to-use-git-and-github-in-a-team-like-a-pro\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      Learn how to use Git and GitHub in a team like a pro\n    </h2>\n    <small>by Damian Demasi&nbsp;<br><a href=\"https://dev.to/colocodes/learn-how-to-use-git-and-github-in-a-team-like-a-pro-2dk7\">https://dev.to/colocodes/learn-how-to-use-git-and-github-in-a-team-like-a-pro-2dk7</a></small>\n    <p>This short two-part series by Damian clearly highlights the possibilities of collaboration with Git and the platform Github, which is usually neglected in other tutorials.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://dev.to/colocodes/learn-how-to-use-git-and-github-in-a-team-like-a-pro-2dk7\">\n      <img class=\"limit\" src=\"learn-how-to-use-git-and-github-in-a-team-like-a-pro.png\" alt=\"Learn how to use Git and GitHub in a team like a pro\" />\n    </a>\n  \n\n\n    <hr id=\"how-to-build-your-first-javascript-github-action\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      How to Build Your First JavaScript GitHub Action\n    </h2>\n    <small>by Bassem Dghaidi&nbsp;<br><a href=\"https://www.freecodecamp.org/news/build-your-first-javascript-github-action/\">https://www.freecodecamp.org/news/build-your-first-javascript-github-action/</a></small>\n    <p>The automation possibilities of Github&#39;s Actions seem limitless. There is hardly a JavaScript workflow that cannot be mapped in some way. This is also due to the openness, because anyone can provide workflows. Bassem explains the basic system with examples.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://www.freecodecamp.org/news/build-your-first-javascript-github-action/\">\n      <img class=\"limit\" src=\"how-to-build-your-first-javascript-github-action.png\" alt=\"How to Build Your First JavaScript GitHub Action\" />\n    </a>\n  \n\n\n    <hr id=\"getting-the-gist-of-github-actions\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      Getting the Gist of GitHub Actions\n    </h2>\n    <small>by Brendon Smith&nbsp;<br><a href=\"https://gist.github.com/br3ndonland/f9c753eb27381f97336aa21b8d932be6\">https://gist.github.com/br3ndonland/f9c753eb27381f97336aa21b8d932be6</a></small>\n    <p>Like Bassem, Brendon shows some of the the basic principle of GitHub Actions, but expands on it with pro tips and workarounds when things get stuck.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://gist.github.com/br3ndonland/f9c753eb27381f97336aa21b8d932be6\">\n      <img class=\"limit\" src=\"getting-the-gist-of-github-actions.png\" alt=\"Getting the Gist of GitHub Actions\" />\n    </a>\n  \n\n\n    <hr id=\"swipey-image-grids-with-svg\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      Swipey Image Grids (with SVG)\n    </h2>\n    <small>by Cassie Evans&nbsp;<br><a href=\"https://www.cassie.codes/posts/swipey-image-grids/\">https://www.cassie.codes/posts/swipey-image-grids/</a></small>\n    <p>If you&#39;re familiar with CSS animations, you might be interested in this post by Cassie, as she shows how to do it without CSS directly in SVG.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://www.cassie.codes/posts/swipey-image-grids/\">\n      <img class=\"limit\" src=\"swipey-image-grids-with-svg.png\" alt=\"Swipey Image Grids (with SVG)\" />\n    </a>\n  \n",
            "tags": [
                "Collection"
            ]
        },
        {
            "id": "https://kiko.io/post/Include-and-provide-JSON-data-in-Hexo-EJS-Templates/",
            "url": "https://kiko.io/post/Include-and-provide-JSON-data-in-Hexo-EJS-Templates/",
            "title": "Include and provide JSON data in Hexo EJS Templates",
            "image": "https://kiko.io/images/social-media/Include-and-provide-JSON-data-in-Hexo-EJS-Templates.thumb.png",
            "date_published": "2023-06-27T05:26:21.000Z",
            "date_modified": null,
            "content_html": "<p>The three main components of a standard installation of the Static Site Generator <a href=\"https://hexo.io/\">Hexo</a> are the template system <a href=\"https://ejs.co/\">EJS (Embedded JavaScript Templating)</a>, <a href=\"https://en.wikipedia.org/wiki/Markdown\">Markdown</a> for the content and <a href=\"https://stylus-lang.com/\">Stylus</a> for the styles.</p>\n<p>In the template files are the three main tags for driving content:</p>\n<p><strong>Scriptlet tag for control flow (no output)</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%</span><br><span class=\"line\">  ... my JavaScript code to process data into the template</span><br><span class=\"line\">%&gt;</span><br></pre></td></tr></table></figure>\n\n<p><strong>Output a value as escaped HTML</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%= myVariable %&gt;</span><br></pre></td></tr></table></figure>\n\n<p><strong>Output of a raw value, usually in the form of a JavaScript function</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%- myFunction() %&gt;</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://hexo.io/docs/helpers\">Hexo’s helper system</a> is based on the latter. So you can include a JavaScript file in your template that makes use of the <a href=\"https://hexo.io/docs/helpers#js\"><strong>JS Helper</strong></a> in <code>node_modules\\hexo\\lib\\plugins\\helper\\js.js</code> as follows …</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%- <span class=\"title function_\">js</span>(<span class=\"string\">&#x27;/js/dist/myFancyFunctions.js&#x27;</span>) %&gt;</span><br></pre></td></tr></table></figure>\n\n<p>… which will be rendered to:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/js/dist//js/dist/qr-code-styling.js&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"The-Problem\"><a href=\"#The-Problem\" class=\"headerlink\" title=\"The Problem\"></a>The Problem</h2><p>So far and short, so good … but I recently tried to use this way to include a JSON file whose data one of my scripts needed as startup options and I noticed that the above mentioned JS helper unfortunately takes care of the possibly missing file extension <code>js</code>. It doesn’t matter if you only pass the path to the file as a string or if all necessary attributes as an object.</p>\n<span id=\"more\"></span>\n\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%- <span class=\"title function_\">js</span>(&#123;</span><br><span class=\"line\">  <span class=\"attr\">src</span>: <span class=\"string\">&#x27;js/dist/script-options.json&#x27;</span>,</span><br><span class=\"line\">  <span class=\"attr\">type</span>: <span class=\"string\">&#x27;application/json&#x27;</span></span><br><span class=\"line\">&#125;) %&gt;</span><br></pre></td></tr></table></figure>\n\n<p>This code leads to the following wrong code …</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span> <span class=\"attr\">src</span>=<span class=\"string\">&quot;/js/dist//js/dist/qr-code-styling.json.js&quot;</span> </span></span><br><span class=\"line\"><span class=\"tag\">       <span class=\"attr\">type</span>=<span class=\"string\">&quot;application/json&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"The-JSON-Helper\"><a href=\"#The-JSON-Helper\" class=\"headerlink\" title=\"The JSON Helper\"></a>The JSON Helper</h2><p>Since Hexo’s developers went a bit over my&#x2F;the target with the helper’s functionality, I had to build my own JSON helper, which is actually just a slightly customized copy of the original:</p>\n<figure class=\"highlight js\"><figcaption><span>themes\\landscape\\scripts\\json-helper.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">const</span> &#123; htmlTag, url_for &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;hexo-util&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">hexo.<span class=\"property\">extend</span>.<span class=\"property\">helper</span>.<span class=\"title function_\">register</span>(<span class=\"string\">&#x27;json&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\">...args</span>)&#123;</span><br><span class=\"line\">  <span class=\"keyword\">let</span> result = <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">  </span><br><span class=\"line\">  args.<span class=\"title function_\">flat</span>(<span class=\"title class_\">Infinity</span>).<span class=\"title function_\">forEach</span>(<span class=\"function\"><span class=\"params\">item</span> =&gt;</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> item === <span class=\"string\">&#x27;string&#x27;</span> || item <span class=\"keyword\">instanceof</span> <span class=\"title class_\">String</span>) &#123;</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"comment\">// args = String only</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> path = item;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!path.<span class=\"title function_\">endsWith</span>(<span class=\"string\">&#x27;.json&#x27;</span>)) &#123;</span><br><span class=\"line\">        path += <span class=\"string\">&#x27;.json&#x27;</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      result += <span class=\"string\">`&lt;script src=&quot;<span class=\"subst\">$&#123;url_for.call(<span class=\"variable language_\">this</span>, path)&#125;</span>&quot; type=&quot;application/json&quot;&gt;&lt;/script&gt;\\n`</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"comment\">// args = Object -&gt; Custom Attributes</span></span><br><span class=\"line\">      item.<span class=\"property\">src</span> = url_for.<span class=\"title function_\">call</span>(<span class=\"variable language_\">this</span>, item.<span class=\"property\">src</span>);</span><br><span class=\"line\">      item.<span class=\"property\">type</span> = <span class=\"string\">&quot;application/json&quot;</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (!item.<span class=\"property\">src</span>.<span class=\"title function_\">endsWith</span>(<span class=\"string\">&#x27;.json&#x27;</span>)) item.<span class=\"property\">src</span> += <span class=\"string\">&#x27;.json&#x27;</span>;</span><br><span class=\"line\">      result += <span class=\"title function_\">htmlTag</span>(<span class=\"string\">&#x27;script&#x27;</span>, &#123; ...item &#125;, <span class=\"string\">&#x27;&#x27;</span>) + <span class=\"string\">&#x27;\\n&#x27;</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<p>You can find the complete file <a href=\"https://github.com/kristofzerbe/kiko.io/blob/master/themes/landscape/scripts/json-helper.js\">here</a>.</p>\n<p>With this its possible to reference the JSON like this:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%- <span class=\"title function_\">json</span>(<span class=\"string\">&#x27;js/dist/myOptions.json&#x27;</span>) %&gt;</span><br></pre></td></tr></table></figure>\n\n<hr>\n<h2 id=\"Bring-JSON-data-to-life\"><a href=\"#Bring-JSON-data-to-life\" class=\"headerlink\" title=\"Bring JSON data to life\"></a>Bring JSON data to life</h2><p>However, the helper only allowed me to load the file as such. What was still missing was the loading of the data in the JavaScript of the page itself. The easiest way to achieve that, was to perform a FETCH of the already referenced and loaded file in the SCRIPT block of the template as an immediately invoked async function:</p>\n<figure class=\"highlight html\"><figcaption><span>EJS File</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;%- js(&#x27;js/dist/myFancyObjectLibrary.js&#x27;) %&gt;</span><br><span class=\"line\">&lt;%- json(&#123;</span><br><span class=\"line\">  src: &#x27;js/dist/myOptions.json&#x27;, </span><br><span class=\"line\">  id: &#x27;my-options&#x27;</span><br><span class=\"line\">&#125;) %&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">script</span>&gt;</span><span class=\"language-javascript\"></span></span><br><span class=\"line\"><span class=\"language-javascript\"> (<span class=\"keyword\">async</span> () =&gt; &#123;</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> response = <span class=\"keyword\">await</span> <span class=\"title function_\">fetch</span>(<span class=\"variable language_\">document</span>.<span class=\"title function_\">getElementById</span>(<span class=\"string\">&#x27;my-options&#x27;</span>).<span class=\"property\">src</span>);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">const</span> options = <span class=\"keyword\">await</span> response.<span class=\"title function_\">json</span>();    </span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"keyword\">let</span> obj = <span class=\"keyword\">new</span> <span class=\"title function_\">myFancyObject</span>(options);</span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span></span><br><span class=\"line\"><span class=\"language-javascript\">    <span class=\"comment\">//... do something with the initialized object</span></span></span><br><span class=\"line\"><span class=\"language-javascript\">    </span></span><br><span class=\"line\"><span class=\"language-javascript\">  &#125;)();</span></span><br><span class=\"line\"><span class=\"language-javascript\"></span><span class=\"tag\">&lt;/<span class=\"name\">script</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>Et voilà … Job done.</p>\n",
            "tags": [
                "Hexo",
                "Templating"
            ]
        },
        {
            "id": "https://kiko.io/post/Show-pages-meta-data-JSON-LD-in-Bottom-Sheet/",
            "url": "https://kiko.io/post/Show-pages-meta-data-JSON-LD-in-Bottom-Sheet/",
            "title": "Show pages meta data (JSON-LD) in Bottom Sheet",
            "image": "https://kiko.io/images/social-media/Show-pages-meta-data-JSON-LD-in-Bottom-Sheet.thumb.png",
            "date_published": "2023-06-11T12:11:45.000Z",
            "date_modified": null,
            "content_html": "<p>A few months ago I introduced new meta data (JSON-LD) for the pages of this blog and also <a href=\"/post/Provide-Blog-Metadata-via-JSON-LD/\" title=\"Provide Blog Metadata via JSON-LD\">wrote about my implementation</a>. Works also everything quite well … only the verification of the generated data was a bit cumbersome:</p>\n<ol>\n<li>Open DevTools for a page in Chrome.</li>\n<li>Search in the HEAD of the source code for the included script (“application&#x2F;ld+json”)</li>\n<li>Copy out JSON-LD code</li>\n<li>Format JSON into VS code … and check</li>\n</ol>\n<p>Nothing for now and simply impossible on the smartphone, even if there would be a reasonable Chrome extension for displaying JSON-LD data, but it does not exist (yet). Another problem was that I use automatically generated Socal Media images for my articles, which are included in the JSON-LD, but do not appear anywhere in the page and thus were beyond my control. I simply wanted to display all the generated stuff.</p>\n<p>Since I’ve been a fan of the so-called bottom sheets since the first version of Google’s Material Design, I imagined a script that grabs the code embedded in the page and pushes a panel with all the data visualized there into the page from the bottom … and the whole act was easier than I thought.</p>\n<span id=\"more\"></span>\n\n<hr>\n<h2 id=\"The-Bottom-Sheet-Component\"><a href=\"#The-Bottom-Sheet-Component\" class=\"headerlink\" title=\"The Bottom Sheet Component\"></a>The Bottom Sheet Component</h2><p>Recently I stumbled across a small but nice bottom sheet script that is based on jQuery but that I still use on this blog itself: <a href=\"https://downuppopupjs.dincerali.com/\"><strong>downupPopup.js</strong></a> by <a href=\"https://dincerali.com/\">Ali Dinçer</a>. It has several settings and is just about 5 KB in size, if you add the CSS code. What’s nice about it is, that all the animations that make such a component stand out, are based on said CSS and are not jQuery-driven.</p>\n<p>The bottom sheet is based on a base HTML element with a required child element:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">id</span>=<span class=\"string\">&quot;myElement1&quot;</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;downupPopup-content&quot;</span>&gt;</span></span><br><span class=\"line\">    Lorem ipsum dolor sit amet...</span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>This is first initialized with the desired settings, with the script adding the necessary inline styles, and then you can open and close it:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">&quot;#myElement1&quot;</span>).<span class=\"title function_\">downupPopup</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">$(<span class=\"string\">&quot;#myElement1&quot;</span>).<span class=\"title function_\">downupPopup</span>(<span class=\"string\">&#x27;open&#x27;</span>);</span><br><span class=\"line\">$(<span class=\"string\">&quot;#myElement1&quot;</span>).<span class=\"title function_\">downupPopup</span>(<span class=\"string\">&#x27;close&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>Now my solution should work on-the-fly and without a previously defined element in the HTML … and it should be reusable, because if I already include a bottom sheet component, then I wanted to use it for future occasions. For this I wrote myself a small manager that makes different uses possible with a single call.</p>\n<p>It has one function each for a specific bottom sheet dialog and beside it base variables and functions (<code>base</code>) to keep the infrastructure code of the former as small as possible:</p>\n<figure class=\"highlight js\"><figcaption><span>dialog.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> dpDialog = &#123;</span><br><span class=\"line\">  <span class=\"string\">&#x27;base&#x27;</span>: &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;element&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;content&#x27;</span>: <span class=\"literal\">null</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;options&#x27;</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">animation</span>: <span class=\"string\">&quot;ease&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">duration</span>: <span class=\"number\">400</span>,</span><br><span class=\"line\">      <span class=\"attr\">radiusLeft</span>: <span class=\"string\">&quot;6px&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">radiusRight</span>: <span class=\"string\">&quot;6px&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">width</span>: <span class=\"string\">&quot;100%&quot;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">&#x27;init&#x27;</span>: <span class=\"keyword\">function</span>(<span class=\"params\">options</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> opt = &#123;...dpDialog.<span class=\"property\">base</span>.<span class=\"property\">options</span>, ...options&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">      <span class=\"keyword\">if</span> ($(<span class=\"string\">&quot;#dpElement&quot;</span>).<span class=\"property\">length</span> === <span class=\"number\">0</span>) &#123; </span><br><span class=\"line\">        <span class=\"comment\">// create new</span></span><br><span class=\"line\">        dpDialog.<span class=\"property\">base</span>.<span class=\"property\">element</span> = $(<span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">          &lt;div id=&quot;dpElement&quot;&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;div class=&quot;downupPopup-content&quot;&gt;&lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;/div&gt;`</span>);</span><br><span class=\"line\">          dpDialog.<span class=\"property\">base</span>.<span class=\"property\">element</span>.<span class=\"title function_\">appendTo</span>(<span class=\"string\">&quot;body&quot;</span>);</span><br><span class=\"line\">          dpDialog.<span class=\"property\">base</span>.<span class=\"property\">content</span> = dpDialog.<span class=\"property\">base</span>.<span class=\"property\">element</span>.<span class=\"title function_\">find</span>(<span class=\"string\">&quot;.downupPopup-content&quot;</span>);</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> &#123; <span class=\"comment\">// reset existing</span></span><br><span class=\"line\">        dpDialog.<span class=\"property\">base</span>.<span class=\"property\">element</span>.<span class=\"title function_\">downupPopup</span>(<span class=\"string\">&quot;close&quot;</span>);</span><br><span class=\"line\">        dpDialog.<span class=\"property\">base</span>.<span class=\"property\">content</span>.<span class=\"title function_\">empty</span>();</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">      dpDialog.<span class=\"property\">base</span>.<span class=\"property\">element</span>.<span class=\"title function_\">downupPopup</span>(opt);</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">    <span class=\"string\">&#x27;show&#x27;</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">      <span class=\"built_in\">setTimeout</span>(<span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">        dpDialog.<span class=\"property\">base</span>.<span class=\"property\">element</span>.<span class=\"title function_\">downupPopup</span>(<span class=\"string\">&quot;open&quot;</span>);</span><br><span class=\"line\">      &#125;, <span class=\"number\">100</span>);  </span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">&#x27;myFirstTest&#x27;</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// INIT DIALOG</span></span><br><span class=\"line\">    dpDialog.<span class=\"property\">base</span>.<span class=\"title function_\">init</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">headerText</span>: <span class=\"string\">&quot;Test&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">distance</span>: <span class=\"number\">75</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ADD CONTENT</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> content = <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">      &lt;section&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;p&gt;Lorem ipsum dolor sit amet...&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">      &lt;/section&gt;</span></span><br><span class=\"line\"><span class=\"string\">    `</span>;</span><br><span class=\"line\">    $(content).<span class=\"title function_\">appendTo</span>(dpDialog.<span class=\"property\">base</span>.<span class=\"property\">content</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// OPEN DIALOG</span></span><br><span class=\"line\">    dpDialog.<span class=\"property\">base</span>.<span class=\"title function_\">show</span>();</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"string\">&#x27;pageMeta&#x27;</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// INIT DIALOG</span></span><br><span class=\"line\">    dpDialog.<span class=\"property\">base</span>.<span class=\"title function_\">init</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">headerText</span>: <span class=\"string\">&quot;Page Meta&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">contentScroll</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      <span class=\"attr\">distance</span>: <span class=\"number\">6</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ADD CONTENT</span></span><br><span class=\"line\">    <span class=\"comment\">// ... appending stuff to dpDialog.base.content</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// OPEN DIALOG</span></span><br><span class=\"line\">    dpDialog.<span class=\"property\">base</span>.<span class=\"title function_\">show</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"><span class=\"variable language_\">window</span>.<span class=\"property\">dialog</span> = dpDialog; <span class=\"comment\">// make it globally available</span></span><br></pre></td></tr></table></figure>\n\n<p>The base <code>init</code> function takes care of initializing the downupPopup component, including dynamically inserting the necessary HTML element and attaching the desired settings. <code>show</code> opens up the dialog, with a small time delay, to ensure that the content has already been inserted.<br>Dialog functions in the example above are: <code>myFirstTest</code> and <code>pageMeta</code>.</p>\n<p>Calling one of the dialog functions is simple:</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">a</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;javascript:dpDialog.myFirstTest()&quot;</span>&gt;</span>Open Test Dialog<span class=\"tag\">&lt;/<span class=\"name\">a</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>Try here: <a href=\"javascript:dpDialog.myFirstTest()\">Open Test Dialog</a></p>\n<h3 id=\"Problem-with-the-original-implementation-solved\"><a href=\"#Problem-with-the-original-implementation-solved\" class=\"headerlink\" title=\"Problem with the original implementation solved\"></a>Problem with the original implementation solved</h3><p>Ali decided in his original implementation to apply the given settings only once to a popup element. Once initialized, it could not be reused with different settings. To avoid having to destroy an existing element before initializing a new one, which would have caused a massive timing problem due to the animation, I decided to fork his code and give him a <a href=\"https://github.com/ali-dincer/downupPopup.js/pull/2\">pull request</a>.</p>\n<p>You can find my script here, as long as Ali didn’t include the PR in his code: <a href=\"https://github.com/kristofzerbe/downupPopup.js\">kristofzerbe&#x2F;downupPopup.js</a></p>\n<hr>\n<h2 id=\"The-PageMeta-Dialog\"><a href=\"#The-PageMeta-Dialog\" class=\"headerlink\" title=\"The PageMeta Dialog\"></a>The PageMeta Dialog</h2><p>Now that I had my desired display option, it was time to bring the <code>pageMeta</code> dialog function to life.</p>\n<p>My first thought was to use a JSON-LD parser in JavaScript provided by <a href=\"https://json-ld.org/\"><strong>json-ld.org</strong></a>, but this is not even quickly usable, since it validates the code to be parsed at runtime against schema.org and every of my calls failed with CORS warnings. Now I didn’t want to turn this into a PhD thesis, I just wanted to display my highly customized JSON-LD, so I worked out the function quite individually.</p>\n<h3 id=\"The-Code-Itself\"><a href=\"#The-Code-Itself\" class=\"headerlink\" title=\"The Code Itself\"></a>The Code Itself</h3><p>I wanted to show two things in the dialog: the code itself and a visual representation of it for a better overview.</p>\n<p>Getting the content for the code was really straight forward:</p>\n<figure class=\"highlight js\"><figcaption><span>dialog.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">  <span class=\"string\">&#x27;pageMeta&#x27;</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// INIT DIALOG</span></span><br><span class=\"line\">    dpDialog.<span class=\"property\">base</span>.<span class=\"title function_\">init</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">headerText</span>: <span class=\"string\">&quot;Page Meta&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">contentScroll</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      <span class=\"attr\">distance</span>: <span class=\"number\">6</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ADD CONTENT</span></span><br><span class=\"line\">    <span class=\"comment\">// Grab the JSON-LD code from the page</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> json = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>($(<span class=\"string\">&#x27;script[type=&quot;application/ld+json&quot;]&#x27;</span>).<span class=\"title function_\">text</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Create new dialog section for the code</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> secCode = $(<span class=\"string\">&#x27;&lt;section&gt;&lt;/section&gt;&#x27;</span>).<span class=\"title function_\">appendTo</span>(dpDialog.<span class=\"property\">base</span>.<span class=\"property\">content</span>);</span><br><span class=\"line\">    <span class=\"comment\">// Append header</span></span><br><span class=\"line\">    secCode.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;&lt;h1&gt;JSON-LD&lt;/h1&gt;&#x27;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// Append formatted code als PRE element</span></span><br><span class=\"line\">    secCode.<span class=\"title function_\">append</span>(<span class=\"string\">&#x27;&lt;pre class=&quot;json&quot;&gt;&#x27;</span> + <span class=\"title function_\">syntaxHighlight</span>(<span class=\"title class_\">JSON</span>.<span class=\"title function_\">stringify</span>(json, <span class=\"literal\">undefined</span>, <span class=\"number\">2</span>))) + <span class=\"string\">&#x27;&lt;/pre&gt;&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// OPEN DIALOG</span></span><br><span class=\"line\">    dpDialog.<span class=\"property\">base</span>.<span class=\"title function_\">show</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p>Since I had taken care to compress my JSON-LD code to save space, I now needed to get it back into a readable format. Time saver was the following script, which I found on <a href=\"https://stackoverflow.com/questions/4810841/pretty-print-json-using-javascript\">StackOverflow (pretty-print JSON using JavaScript)</a>:</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">syntaxHighlight</span>(<span class=\"params\">json</span>) &#123;</span><br><span class=\"line\">  json = json.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/&amp;/g</span>, <span class=\"string\">&#x27;&amp;amp;&#x27;</span>).<span class=\"title function_\">replace</span>(<span class=\"regexp\">/&lt;/g</span>, <span class=\"string\">&#x27;&amp;lt;&#x27;</span>).<span class=\"title function_\">replace</span>(<span class=\"regexp\">/&gt;/g</span>, <span class=\"string\">&#x27;&amp;gt;&#x27;</span>);</span><br><span class=\"line\">  <span class=\"keyword\">return</span> json.<span class=\"title function_\">replace</span>(<span class=\"regexp\">/(&quot;(\\\\u[a-zA-Z0-9]&#123;4&#125;|\\\\[^u]|[^\\\\&quot;])*&quot;(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g</span>, <span class=\"keyword\">function</span> (<span class=\"params\">match</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">var</span> cls = <span class=\"string\">&#x27;number&#x27;</span>;</span><br><span class=\"line\">      <span class=\"keyword\">if</span> (<span class=\"regexp\">/^&quot;/</span>.<span class=\"title function_\">test</span>(match)) &#123;</span><br><span class=\"line\">          <span class=\"keyword\">if</span> (<span class=\"regexp\">/:$/</span>.<span class=\"title function_\">test</span>(match)) &#123;</span><br><span class=\"line\">              cls = <span class=\"string\">&#x27;key&#x27;</span>;</span><br><span class=\"line\">          &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">              cls = <span class=\"string\">&#x27;string&#x27;</span>;</span><br><span class=\"line\">          &#125;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"regexp\">/true|false/</span>.<span class=\"title function_\">test</span>(match)) &#123;</span><br><span class=\"line\">          cls = <span class=\"string\">&#x27;boolean&#x27;</span>;</span><br><span class=\"line\">      &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (<span class=\"regexp\">/null/</span>.<span class=\"title function_\">test</span>(match)) &#123;</span><br><span class=\"line\">          cls = <span class=\"string\">&#x27;null&#x27;</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">&#x27;&lt;span class=&quot;&#x27;</span> + cls + <span class=\"string\">&#x27;&quot;&gt;&#x27;</span> + match + <span class=\"string\">&#x27;&lt;/span&gt;&#x27;</span>;</span><br><span class=\"line\">  &#125;);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight css\"><figcaption><span>(Stylus format)</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pre<span class=\"selector-class\">.json</span></span><br><span class=\"line\">  <span class=\"attribute\">font-family</span>: <span class=\"string\">&#x27;Roboto Mono&#x27;</span>,monospace</span><br><span class=\"line\">  font-size: <span class=\"number\">13px</span></span><br><span class=\"line\">  .string </span><br><span class=\"line\">    color: <span class=\"number\">#4271ae</span></span><br><span class=\"line\">  .number </span><br><span class=\"line\">    color: <span class=\"number\">#4271ae</span></span><br><span class=\"line\">  .boolean </span><br><span class=\"line\">    color: <span class=\"number\">#4271ae</span></span><br><span class=\"line\">  .null</span><br><span class=\"line\">    color: <span class=\"number\">#ababab</span></span><br><span class=\"line\">  .key</span><br><span class=\"line\">    color: <span class=\"number\">#c15353</span></span><br></pre></td></tr></table></figure>\n\n\n<h3 id=\"The-Visual-Representation\"><a href=\"#The-Visual-Representation\" class=\"headerlink\" title=\"The Visual Representation\"></a>The Visual Representation</h3><p>My JSON-LD is hierarchically structured. Each page always has a <code>PERSON</code> block for information about me as a person, then an <code>ORGANIZATION</code> block about the “people” behind the blog (just me), then a <code>WEBSITE</code> block for the description of the website itself and a <code>WEBPAGE</code> block for a single page. Article pages like this, also have an <code>ARTICLE</code> block and the note pages have a <code>BLOGPOSTING</code> block.</p>\n<p>Therefore, it seemed logical to me to display the blocks as an accordion using the DETAILS element, with only the first one open at startup.</p>\n<p>To process the required HTML, I wrote a helper function for each block that returns a string literal template to which the calling code passes the necessary data.</p>\n<p>To save space, only one block is included in the example below. The others work similarly. </p>\n\n    <div class=\"alertbox alertbox-info\">\n      <p>You can see the complete code here and modify it for your purposes: <a href=\"https://github.com/kristofzerbe/kiko.io/blob/master/themes/landscape/source/js/dialog.js\"><strong>dialog.js</strong> of the blog kiko.io</a>.</p>\n\n    </div>\n  \n\n<figure class=\"highlight js\"><figcaption><span>dialog.js</span></figcaption><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\">  <span class=\"string\">&#x27;pageMeta&#x27;</span>: <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// INIT DIALOG</span></span><br><span class=\"line\">    dpDialog.<span class=\"property\">base</span>.<span class=\"title function_\">init</span>(&#123;</span><br><span class=\"line\">      <span class=\"attr\">headerText</span>: <span class=\"string\">&quot;Page Meta&quot;</span>,</span><br><span class=\"line\">      <span class=\"attr\">contentScroll</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">      <span class=\"attr\">distance</span>: <span class=\"number\">6</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ADD CONTENT</span></span><br><span class=\"line\">    <span class=\"comment\">// Grab the JSON-LD code from the page</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> json = <span class=\"title class_\">JSON</span>.<span class=\"title function_\">parse</span>($(<span class=\"string\">&#x27;script[type=&quot;application/ld+json&quot;]&#x27;</span>).<span class=\"title function_\">text</span>());</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Create new dialog section for the visual representation</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> secVisual = $(<span class=\"string\">&#x27;&lt;section&gt;&lt;/section&gt;&#x27;</span>).<span class=\"title function_\">appendTo</span>(dpDialog.<span class=\"property\">base</span>.<span class=\"property\">content</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ... other blocks for the visual representation </span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Block WEBSITE</span></span><br><span class=\"line\">    <span class=\"keyword\">function</span> <span class=\"title function_\">getWebSite</span>(<span class=\"params\">website, organization</span>) &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"string\">`</span></span><br><span class=\"line\"><span class=\"string\">        &lt;details&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;summary&gt;WebSite&lt;/summary&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;div&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;label&gt;Name&lt;/label&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;p&gt;<span class=\"subst\">$&#123;website.name&#125;</span>&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;label&gt;Description&lt;/label&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;p&gt;<span class=\"subst\">$&#123;website.description&#125;</span>&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;label&gt;Language&lt;/label&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;p&gt;<span class=\"subst\">$&#123;website.inLanguage&#125;</span>&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;label&gt;Publisher&lt;/label&gt;</span></span><br><span class=\"line\"><span class=\"string\">            &lt;p&gt;<span class=\"subst\">$&#123;organization.name&#125;</span>&lt;/p&gt;</span></span><br><span class=\"line\"><span class=\"string\">          &lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"string\">        &lt;/details&gt;</span></span><br><span class=\"line\"><span class=\"string\">      `</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// Get WebSite block from JSON</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> jWebSite = json[<span class=\"string\">&quot;@graph&quot;</span>].<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">x</span> =&gt;</span> x[<span class=\"string\">&quot;@type&quot;</span>] === <span class=\"string\">&quot;WebSite&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// Get referenced Publisher information (Organization)</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> jPublisher = json[<span class=\"string\">&quot;@graph&quot;</span>].<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">x</span> =&gt;</span> x[<span class=\"string\">&quot;@id&quot;</span>] === jWebSite[<span class=\"number\">0</span>].<span class=\"property\">publisher</span>[<span class=\"string\">&quot;@id&quot;</span>]);</span><br><span class=\"line\">    <span class=\"comment\">// Get filled HTML from template helper function above</span></span><br><span class=\"line\">    <span class=\"keyword\">let</span> tWebSite = <span class=\"title function_\">getWebSite</span>(jWebSite[<span class=\"number\">0</span>], jPublisher[<span class=\"number\">0</span>]);</span><br><span class=\"line\">    <span class=\"comment\">// Append HTML to content</span></span><br><span class=\"line\">    secVisual.<span class=\"title function_\">append</span>($(tWebSite));</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ... other blocks for the visual representation </span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// ... (Code stuff from above)</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// OPEN DIALOG</span></span><br><span class=\"line\">    dpDialog.<span class=\"property\">base</span>.<span class=\"title function_\">show</span>();</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Conclusion\"><a href=\"#Conclusion\" class=\"headerlink\" title=\"Conclusion\"></a>Conclusion</h2><p>It was fun to add a new feature to the site, even more so because it helps me keep track of the meta data of each page myself.</p>\n<p>Here (or in the footer of each page) you can see the result:</p>\n<p><a href=\"javascript:dpDialog.pageMeta();\"><strong>Open Page Meta for this article…</strong></a></p>\n<hr>\n<h2 id=\"More-Information\"><a href=\"#More-Information\" class=\"headerlink\" title=\"More Information\"></a>More Information</h2>\n        <ul class=\"moreinfo-list\">\n            <li>Ali Dinçer: <a href=\"https://downuppopupjs.dincerali.com/\">downupPopup.js</a></li><li>Kristof Zerbe: <a href=\"https://github.com/kristofzerbe/downupPopup.js\">Fork from downupPopup.js (Make Popup Reusable, with PR)</a></li><li>Google: <a href=\"https://m3.material.io/components/bottom-sheets/overview\">Material Design 3 - Compontents, Bottom Sheets</a></li>\n        </ul>\n    ",
            "tags": [
                "Publishing",
                "Meta",
                "JSON-LD"
            ]
        },
        {
            "id": "https://kiko.io/post/Top-10-Pens-of-Jon-Kantner/",
            "url": "https://kiko.io/post/Top-10-Pens-of-Jon-Kantner/",
            "title": "Top 10 Pens of Jon Kantner",
            "image": "https://kiko.io/images/social-media/Top-10-Pens-of-Jon-Kantner.thumb.png",
            "date_published": "2023-05-08T13:34:15.000Z",
            "date_modified": null,
            "content_html": "<p>A while ago I posted my <a href=\"/post/Favourite-Pens-of-2022/\" title=\"Favourite Pens of 2022\">favourite pens of 2022</a>. Many of them came from the pen of <strong><a href=\"https://jonkantner.com/\">John Kantner</a></strong> and that was reason enough for me to highlight his most beautiful works in a post.</p>\n<p>My “Best of Jon Kantner” selection is focused on the usefulness for UI’s to be created, i.e. all these things I urgently need to try out or one or the other will end up in one of my projects. </p>\n<span id=\"more\"></span>\n\n<hr><br>\n\n<h2 id=\"1-Card-Like-Menu\"><a href=\"#1-Card-Like-Menu\" class=\"headerlink\" title=\"1. Card-Like Menu\"></a>1. Card-Like Menu</h2>\n    <iframe height=\"760\" \n        id=\"codepen-poLOzKY\"\n        class=\"codepen\"\n        src=\"https://codepen.io/kristofzerbe/embed/poLOzKY?height=760&default-tab=result&theme-id=dark\"\n        style=\"width: 100%;\" \n        scrolling=\"no\" \n        title=\"Codepen: Card-Like Menu\" \n        frameborder=\"no\" \n        loading=\"lazy\" \n        allowtransparency=\"true\" \n        allowfullscreen=\"true\">\n    </iframe>\n  \n\n<p><br><hr></p>\n<h2 id=\"2-Side-Navigation\"><a href=\"#2-Side-Navigation\" class=\"headerlink\" title=\"2. Side Navigation\"></a>2. Side Navigation</h2>\n    <iframe height=\"600\" \n        id=\"codepen-abqwjEz\"\n        class=\"codepen\"\n        src=\"https://codepen.io/kristofzerbe/embed/abqwjEz?height=600&default-tab=result&theme-id=dark\"\n        style=\"width: 100%;\" \n        scrolling=\"no\" \n        title=\"Codepen: Side Navigation\" \n        frameborder=\"no\" \n        loading=\"lazy\" \n        allowtransparency=\"true\" \n        allowfullscreen=\"true\">\n    </iframe>\n  \n\n<p><br><hr></p>\n<h2 id=\"3-Lotsa-Notifications\"><a href=\"#3-Lotsa-Notifications\" class=\"headerlink\" title=\"3. Lotsa Notifications\"></a>3. Lotsa Notifications</h2>\n    <iframe height=\"420\" \n        id=\"codepen-XWzePgp\"\n        class=\"codepen\"\n        src=\"https://codepen.io/kristofzerbe/embed/XWzePgp?height=420&default-tab=result&theme-id=dark\"\n        style=\"width: 100%;\" \n        scrolling=\"no\" \n        title=\"Codepen: Lotsa Notifications\" \n        frameborder=\"no\" \n        loading=\"lazy\" \n        allowtransparency=\"true\" \n        allowfullscreen=\"true\">\n    </iframe>\n  \n\n<p><br><hr></p>\n<h2 id=\"4-Search-Input-Caret-Jump\"><a href=\"#4-Search-Input-Caret-Jump\" class=\"headerlink\" title=\"4. Search Input Caret Jump\"></a>4. Search Input Caret Jump</h2>\n    <iframe height=\"275\" \n        id=\"codepen-eYJboxN\"\n        class=\"codepen\"\n        src=\"https://codepen.io/kristofzerbe/embed/eYJboxN?height=275&default-tab=result&theme-id=dark\"\n        style=\"width: 100%;\" \n        scrolling=\"no\" \n        title=\"Codepen: Search Input Caret Jump\" \n        frameborder=\"no\" \n        loading=\"lazy\" \n        allowtransparency=\"true\" \n        allowfullscreen=\"true\">\n    </iframe>\n  \n\n<p><br><hr></p>\n<h2 id=\"5-Sliding-Stepper\"><a href=\"#5-Sliding-Stepper\" class=\"headerlink\" title=\"5. Sliding Stepper\"></a>5. Sliding Stepper</h2>\n    <iframe height=\"275\" \n        id=\"codepen-oNGzBmm\"\n        class=\"codepen\"\n        src=\"https://codepen.io/kristofzerbe/embed/oNGzBmm?height=275&default-tab=result&theme-id=dark\"\n        style=\"width: 100%;\" \n        scrolling=\"no\" \n        title=\"Codepen: Sliding Stepper\" \n        frameborder=\"no\" \n        loading=\"lazy\" \n        allowtransparency=\"true\" \n        allowfullscreen=\"true\">\n    </iframe>\n  \n\n<p><br><hr></p>\n<h2 id=\"6-Passcode-With-Sliding-Cursor\"><a href=\"#6-Passcode-With-Sliding-Cursor\" class=\"headerlink\" title=\"6. Passcode With Sliding Cursor\"></a>6. Passcode With Sliding Cursor</h2>\n    <iframe height=\"275\" \n        id=\"codepen-ZERPPda\"\n        class=\"codepen\"\n        src=\"https://codepen.io/kristofzerbe/embed/ZERPPda?height=275&default-tab=result&theme-id=dark\"\n        style=\"width: 100%;\" \n        scrolling=\"no\" \n        title=\"Codepen: Passcode With Sliding Cursor\" \n        frameborder=\"no\" \n        loading=\"lazy\" \n        allowtransparency=\"true\" \n        allowfullscreen=\"true\">\n    </iframe>\n  \n\n<p><br><hr></p>\n<h2 id=\"7-Animated-Star-Rating\"><a href=\"#7-Animated-Star-Rating\" class=\"headerlink\" title=\"7. Animated Star Rating\"></a>7. Animated Star Rating</h2>\n    <iframe height=\"400\" \n        id=\"codepen-BarvVNa\"\n        class=\"codepen\"\n        src=\"https://codepen.io/kristofzerbe/embed/BarvVNa?height=400&default-tab=result&theme-id=dark\"\n        style=\"width: 100%;\" \n        scrolling=\"no\" \n        title=\"Codepen: Animated Star Rating\" \n        frameborder=\"no\" \n        loading=\"lazy\" \n        allowtransparency=\"true\" \n        allowfullscreen=\"true\">\n    </iframe>\n  \n\n<p><br><hr></p>\n<h2 id=\"8-Range-Sliders-With-a-Rolling-Counter\"><a href=\"#8-Range-Sliders-With-a-Rolling-Counter\" class=\"headerlink\" title=\"8. Range Sliders With a Rolling Counter\"></a>8. Range Sliders With a Rolling Counter</h2>\n    <iframe height=\"400\" \n        id=\"codepen-yLYZwjY\"\n        class=\"codepen\"\n        src=\"https://codepen.io/kristofzerbe/embed/yLYZwjY?height=400&default-tab=result&theme-id=dark\"\n        style=\"width: 100%;\" \n        scrolling=\"no\" \n        title=\"Codepen: Range Sliders With a Rolling Counter\" \n        frameborder=\"no\" \n        loading=\"lazy\" \n        allowtransparency=\"true\" \n        allowfullscreen=\"true\">\n    </iframe>\n  \n\n<p><br><hr></p>\n<h2 id=\"9-Colorful-Theme-Switch\"><a href=\"#9-Colorful-Theme-Switch\" class=\"headerlink\" title=\"9. Colorful Theme Switch\"></a>9. Colorful Theme Switch</h2>\n    <iframe height=\"275\" \n        id=\"codepen-eYPYppR\"\n        class=\"codepen\"\n        src=\"https://codepen.io/kristofzerbe/embed/eYPYppR?height=275&default-tab=result&theme-id=dark\"\n        style=\"width: 100%;\" \n        scrolling=\"no\" \n        title=\"Codepen: Colorful Theme Switch\" \n        frameborder=\"no\" \n        loading=\"lazy\" \n        allowtransparency=\"true\" \n        allowfullscreen=\"true\">\n    </iframe>\n  \n\n<p><br><hr></p>\n<h2 id=\"10-Animated-Upload-Modal\"><a href=\"#10-Animated-Upload-Modal\" class=\"headerlink\" title=\"10. Animated Upload Modal\"></a>10. Animated Upload Modal</h2>\n    <iframe height=\"400\" \n        id=\"codepen-OJEoRwK\"\n        class=\"codepen\"\n        src=\"https://codepen.io/kristofzerbe/embed/OJEoRwK?height=400&default-tab=result&theme-id=dark\"\n        style=\"width: 100%;\" \n        scrolling=\"no\" \n        title=\"Codepen: Animated Upload Modal\" \n        frameborder=\"no\" \n        loading=\"lazy\" \n        allowtransparency=\"true\" \n        allowfullscreen=\"true\">\n    </iframe>\n  \n\n<p><br><hr></p>\n<p>As I said, this is the list of my personal favorite works by Jon. I can only recommend everyone to check out his work on <a href=\"https://codepen.io/jkantner\">Codepen</a>. He really is a UI rockstar …</p>\n",
            "tags": [
                "UI",
                "CSS",
                "Collection"
            ]
        },
        {
            "id": "https://kiko.io/post/Discoveries-24-JavaScript-UI/",
            "url": "https://kiko.io/post/Discoveries-24-JavaScript-UI/",
            "title": "Discoveries #24 - JavaScript & UI",
            "image": "https://kiko.io/images/social-media/Discoveries-24-JavaScript-UI.thumb.png",
            "date_published": "2023-04-28T14:39:01.000Z",
            "date_modified": null,
            "content_html": "<p>I’m such a UI person. It’s a blast for me to discover and try out new interface components on the web and for the web. Simplicity and a tidy text desert is not my thing. Here are a few JavaScript UI gems I found the other day for you…</p>\n\n        <ul class=\"anchorlist\">\n            <li data-anchor=\"#frontle-bottomsheet\">Frontle - BottomSheet</li><li data-anchor=\"#downuppopup-js\">downupPopup.js</li><li data-anchor=\"#pikaday\">Pikaday</li><li data-anchor=\"#add-to-calendar-button\">Add to Calendar Button</li><li data-anchor=\"#tippy-js\">Tippy.js</li><li data-anchor=\"#responsive-full-page-scroll\">Responsive Full Page Scroll</li><li data-anchor=\"#lucafalasco-scroll-snap\">lucafalasco/scroll-snap</li><li data-anchor=\"#bgzy-js\">Bgzy.js</li><li data-anchor=\"#scrollyvideo-js\">ScrollyVideo.js</li><li data-anchor=\"#cal-heatmap\">Cal-Heatmap</li>\n        </ul>\n    \n\n<span id=\"more\"></span>\n\n\n    <hr id=\"frontle-bottomsheet\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      Frontle - BottomSheet\n    </h2>\n    <small>by Frontl (HyeongJun Yun)&nbsp;<br><a href=\"https://github.com/Frontle-Foundation/BottomSheet\">https://github.com/Frontle-Foundation/BottomSheet</a></small>\n    <p>BottomSheet is part of the <a href=\"https://frontle.org/\" title=\"‌\">Frontl</a> multi-platform SPA framework from South Korea and is a vanilla JavaScript implementation of the Android Bottom Sheet to show options or settings. Very neat and useful for Web Apps.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://github.com/Frontle-Foundation/BottomSheet\">\n      <img class=\"limit\" src=\"frontle-bottomsheet.png\" alt=\"Frontle - BottomSheet\" />\n    </a>\n  \n\n\n    <hr id=\"downuppopup-js\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      downupPopup.js\n    </h2>\n    <small>by Ali Dinçer&nbsp;<br><a href=\"https://github.com/ali-dincer/downupPopup.js\">https://github.com/ali-dincer/downupPopup.js</a></small>\n    <p><a href=\"https://dincerali.com/\" title=\"‌\">Ali’s</a> downupPopup is a wonderful UI element for replacing boring dialogs or showing additional information in a sliding panel, similar to the the previous BottomSheet. It masters HTML, forms and can be shown with a duration and full screen.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://github.com/ali-dincer/downupPopup.js\">\n      <img class=\"limit\" src=\"downuppopup-js.png\" alt=\"downupPopup.js\" />\n    </a>\n  \n\n\n    <hr id=\"pikaday\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      Pikaday\n    </h2>\n    <small>by David Bushell and Ramiro Rikkert&nbsp;<br><a href=\"https://github.com/Pikaday/Pikaday\">https://github.com/Pikaday/Pikaday</a></small>\n    <p>This date picker is not the fanciest one, but it is very lightweight, has no dependencies and is written in plain JavaScript. The ease of use and the ability to style it however you want, makes it a great little thing.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://github.com/Pikaday/Pikaday\">\n      <img class=\"limit\" src=\"pikaday.png\" alt=\"Pikaday\" />\n    </a>\n  \n\n\n    <hr id=\"add-to-calendar-button\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      Add to Calendar Button\n    </h2>\n    <small>by Jens Kürschner&nbsp;<br><a href=\"https://add-to-calendar-button.com/\">https://add-to-calendar-button.com/</a></small>\n    <p>Letting the user select a date is just the first part of a process when it comes to making appointments. In the second part, the appointment must be added to the user&#39;s own calendar. This button makes it very easy in terms of Outlook, Google Calendar, Yahoo or as an ICS file.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://add-to-calendar-button.com/\">\n      <img class=\"limit\" src=\"add-to-calendar-button.png\" alt=\"Add to Calendar Button\" />\n    </a>\n  \n\n\n    <hr id=\"tippy-js\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      Tippy.js\n    </h2>\n    <small>by James, somewhere from Australia&nbsp;<br><a href=\"https://atomiks.github.io/tippyjs/\">https://atomiks.github.io/tippyjs/</a></small>\n    <p>Tooltip libraries really exist a lot. But Tiffy, a side project of Floating UI (now <a href=\"https://popper.js.org/\" title=\"‌\">Popper</a>), offers so many possibilities that I replace existing ones with it. Animations, Themes, Add-Ons, Plugins, and much more. Even SVG&#39;s are supported. Awesome!</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://atomiks.github.io/tippyjs/\">\n      <img class=\"limit\" src=\"tippy-js.png\" alt=\"Tippy.js\" />\n    </a>\n  \n\n\n    <hr id=\"responsive-full-page-scroll\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      Responsive Full Page Scroll\n    </h2>\n    <small>by Fabian Graßl&nbsp;<br><a href=\"https://github.com/fabeat/responsive-fullpage-scroll\">https://github.com/fabeat/responsive-fullpage-scroll</a></small>\n    <p>If you throw this library on a bit of HTML you get a wonderful a full screen scrolling page that can be activated and deactivated using a media query. Perfect for marketing pages or photo slideshows.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://github.com/fabeat/responsive-fullpage-scroll\">\n      <img class=\"limit\" src=\"responsive-full-page-scroll.png\" alt=\"Responsive Full Page Scroll\" />\n    </a>\n  \n\n\n    <hr id=\"lucafalasco-scroll-snap\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      lucafalasco/scroll-snap\n    </h2>\n    <small>by Luca Falasco&nbsp;<br><a href=\"https://github.com/lucafalasco/scroll-snap\">https://github.com/lucafalasco/scroll-snap</a></small>\n    <p>This library helps to snap a page when user stops scrolling. It is build on top of the CSS feature <code>scroll-snap</code>, but offers a customizable configuration and a consistent cross browser behaviour.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://github.com/lucafalasco/scroll-snap\">\n      <img class=\"limit\" src=\"lucafalasco-scroll-snap.png\" alt=\"lucafalasco/scroll-snap\" />\n    </a>\n  \n\n\n    <hr id=\"bgzy-js\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      Bgzy.js\n    </h2>\n    <small>by Nino Camdzic&nbsp;<br><a href=\"https://ninocamdzic.github.io/bgzy/#\">https://ninocamdzic.github.io/bgzy/#</a></small>\n    <p>Visually appealing backgrounds are sometimes the salt in the soup. Of course, it depends on the photo and so that it does not look boring in the long run, Nico thought, then I&#39;ll change them in adjustable time periods with JavaScript. Great idea and nice implementation.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://ninocamdzic.github.io/bgzy/#\">\n      <img class=\"limit\" src=\"bgzy-js.png\" alt=\"Bgzy.js\" />\n    </a>\n  \n\n\n    <hr id=\"scrollyvideo-js\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      ScrollyVideo.js\n    </h2>\n    <small>by Daniel Kao&nbsp;<br><a href=\"https://scrollyvideo.js.org/\">https://scrollyvideo.js.org/</a></small>\n    <p>Parallax effects when scrolling through a website are well known by now. But the fact that you can use a video for this was new to me. What an idea! And how cool it looks in the end…</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://scrollyvideo.js.org/\">\n      <img class=\"limit\" src=\"scrollyvideo-js.png\" alt=\"ScrollyVideo.js\" />\n    </a>\n  \n\n\n    <hr id=\"cal-heatmap\"/>\n    <h2 style=\"margin-bottom: 10px;\">\n      Cal-Heatmap\n    </h2>\n    <small>by Wan from Dubai&nbsp;<br><a href=\"https://cal-heatmap.com/\">https://cal-heatmap.com/</a></small>\n    <p>Anyone who has ever been on GitHub knows the heatmaps that show when and how often commits have taken place. But this kind of chart can be used for other things, Wan probably thought and made a library out of it.</p>\n\n    <a style=\"display:block; margin: 10px 0 30px;\" class=\"img-link\" href=\"https://cal-heatmap.com/\">\n      <img class=\"limit\" src=\"cal-heatmap.png\" alt=\"Cal-Heatmap\" />\n    </a>\n  \n\n",
            "tags": [
                "Collection"
            ]
        },
        {
            "id": "https://kiko.io/post/Breton-Presets-for-Lightroom/",
            "url": "https://kiko.io/post/Breton-Presets-for-Lightroom/",
            "title": "Breton Presets for Lightroom",
            "image": "https://kiko.io/images/social-media/Breton-Presets-for-Lightroom.thumb.png",
            "date_published": "2023-03-10T11:04:05.000Z",
            "date_modified": null,
            "content_html": "<p>‘Le Bretagne’ (Brittany) is one of the most beautiful and historic parts of Europe and always worth a visit. It combines the sometimes rugged English flair with the art of living of France, both scenically and in the architecture and the way people live there. My wife likes all things English and I am a friend of the french ‘Savoir Vivre’, and we were able to combine the two beautifully on a trip to Saint-Malo and Jersey. It was a photographers dream…</p>\n<span id=\"more\"></span>\n\n<hr>\n<h2 id=\"Breton-Glow\"><a href=\"#Breton-Glow\" class=\"headerlink\" title=\"Breton Glow\"></a>Breton Glow</h2><p>The sunsets off Saint-Malo are wonderful. The water of the English Channel glows and in the sky the silhuettes of the paragliders stand out, pulling the sportsmen over the rippling water. You can sit on the waterfront for hours and still not get enough of it.</p>\n\n    <div id=\"image-compare-5jyd8u\">\n      <img class=\"image-compare image-original no-zoom no-caption\" src=\"/post/Breton-Presets-for-Lightroom/22-08 Bretagne-Jersey-0218_ORIGINAL.jpg\" alt=\"\" />\n      <img class=\"image-compare image-modified no-zoom no-caption\" src=\"/post/Breton-Presets-for-Lightroom/22-08 Bretagne-Jersey-0218_PRESET-Glow.jpg\" alt=\"\" />\n    </div>\n    <script>\n      var themeColor = \"#ffffff\";\n      if (localStorage.getItem(\"theme\") === 'dark') {\n        themeColor = \"#222222\"\n      }\n      new ImageCompare(document.getElementById(\"image-compare-5jyd8u\"),\n      {\n        controlColor: themeColor,\n        controlShadow: false,\n        verticalMode: false,\n        showLabels: true,\n        labelOptions: {\n          before: 'Original',\n          after: 'Preset',\n          onHover: true,\n        }\n      }).mount();\n    </script>\n  \n\n\n    <p class=\"download-link\">\n      <a class=\"button\" href=\"Bretagne Glow.xmp\" download>\n        Download Lightroom Preset <strong>Bretagne Glow.xmp</strong>\n      </a>\n    </p>\n    \n\n<hr>\n<h2 id=\"Breton-Sundown\"><a href=\"#Breton-Sundown\" class=\"headerlink\" title=\"Breton Sundown\"></a>Breton Sundown</h2><p>Having good and clear weather here, as in the British Isles, is not a given. The evenings are all the more beautiful when it is like this and the small islands off the coast are bathed in a warm orange.</p>\n\n    <div id=\"image-compare-zxpsfz\">\n      <img class=\"image-compare image-original no-zoom no-caption\" src=\"/post/Breton-Presets-for-Lightroom/22-08 Bretagne-Jersey-0582_ORIGINAL.jpg\" alt=\"\" />\n      <img class=\"image-compare image-modified no-zoom no-caption\" src=\"/post/Breton-Presets-for-Lightroom/22-08 Bretagne-Jersey-0582_PRESET_Sundown.jpg\" alt=\"\" />\n    </div>\n    <script>\n      var themeColor = \"#ffffff\";\n      if (localStorage.getItem(\"theme\") === 'dark') {\n        themeColor = \"#222222\"\n      }\n      new ImageCompare(document.getElementById(\"image-compare-zxpsfz\"),\n      {\n        controlColor: themeColor,\n        controlShadow: false,\n        verticalMode: false,\n        showLabels: true,\n        labelOptions: {\n          before: 'Original',\n          after: 'Preset',\n          onHover: true,\n        }\n      }).mount();\n    </script>\n  \n\n\n    <p class=\"download-link\">\n      <a class=\"button\" href=\"Bretagne Sundown.xmp\" download>\n        Download Lightroom Preset <strong>Bretagne Sundown.xmp</strong>\n      </a>\n    </p>\n    \n\n<hr>\n<h2 id=\"Breton-Color\"><a href=\"#Breton-Color\" class=\"headerlink\" title=\"Breton Color\"></a>Breton Color</h2><p>I love colors, but rarely does the camera manage to capture that magic the way I feel it. And Brittany has beautiful colors. Be it the famous Mont Saint-Michel or a cornfield … :)</p>\n\n    <div id=\"image-compare-s6j26g\">\n      <img class=\"image-compare image-original no-zoom no-caption\" src=\"/post/Breton-Presets-for-Lightroom/22-08 Bretagne-Jersey-0246_ORIGINAL.jpg\" alt=\"\" />\n      <img class=\"image-compare image-modified no-zoom no-caption\" src=\"/post/Breton-Presets-for-Lightroom/22-08 Bretagne-Jersey-0246_PRESET-Color.jpg\" alt=\"\" />\n    </div>\n    <script>\n      var themeColor = \"#ffffff\";\n      if (localStorage.getItem(\"theme\") === 'dark') {\n        themeColor = \"#222222\"\n      }\n      new ImageCompare(document.getElementById(\"image-compare-s6j26g\"),\n      {\n        controlColor: themeColor,\n        controlShadow: false,\n        verticalMode: false,\n        showLabels: true,\n        labelOptions: {\n          before: 'Original',\n          after: 'Preset',\n          onHover: true,\n        }\n      }).mount();\n    </script>\n  \n\n\n    <p class=\"download-link\">\n      <a class=\"button\" href=\"Bretagne Color.xmp\" download>\n        Download Lightroom Preset <strong>Bretagne Color.xmp</strong>\n      </a>\n    </p>\n    \n\n<hr>\n<h2 id=\"Breton-Sea-Circle\"><a href=\"#Breton-Sea-Circle\" class=\"headerlink\" title=\"Breton Sea Circle\"></a>Breton Sea Circle</h2><p>Oysters from Cancale are not only famous in the region, but far beyond. A product that tastes just like the sea from which it comes looks: Awesome.</p>\n\n    <div id=\"image-compare-scyvks\">\n      <img class=\"image-compare image-original no-zoom no-caption\" src=\"/post/Breton-Presets-for-Lightroom/22-08 Bretagne-Jersey-0761_ORIGINAL.jpg\" alt=\"\" />\n      <img class=\"image-compare image-modified no-zoom no-caption\" src=\"/post/Breton-Presets-for-Lightroom/22-08 Bretagne-Jersey-0761_PRESET-SeaCircle.jpg\" alt=\"\" />\n    </div>\n    <script>\n      var themeColor = \"#ffffff\";\n      if (localStorage.getItem(\"theme\") === 'dark') {\n        themeColor = \"#222222\"\n      }\n      new ImageCompare(document.getElementById(\"image-compare-scyvks\"),\n      {\n        controlColor: themeColor,\n        controlShadow: false,\n        verticalMode: false,\n        showLabels: true,\n        labelOptions: {\n          before: 'Original',\n          after: 'Preset',\n          onHover: true,\n        }\n      }).mount();\n    </script>\n  \n\n\n    <p class=\"download-link\">\n      <a class=\"button\" href=\"Bretagne Sea Circle.xmp\" download>\n        Download Lightroom Preset <strong>Bretagne Sea Circle.xmp</strong>\n      </a>\n    </p>\n    \n\n<hr>\n<h2 id=\"Breton-Beach\"><a href=\"#Breton-Beach\" class=\"headerlink\" title=\"Breton Beach\"></a>Breton Beach</h2><p>The beach in Saint-Malo is 3 kilometers long and it is fascinating to observe how one of the highest tides in Europe swallows it in no time and later releases it cleaned.</p>\n\n    <div id=\"image-compare-r5dd02\">\n      <img class=\"image-compare image-original no-zoom no-caption\" src=\"/post/Breton-Presets-for-Lightroom/22-08 Bretagne-Jersey-1074_ORIGINAL.jpg\" alt=\"\" />\n      <img class=\"image-compare image-modified no-zoom no-caption\" src=\"/post/Breton-Presets-for-Lightroom/22-08 Bretagne-Jersey-1074_PRESET-Beach.jpg\" alt=\"\" />\n    </div>\n    <script>\n      var themeColor = \"#ffffff\";\n      if (localStorage.getItem(\"theme\") === 'dark') {\n        themeColor = \"#222222\"\n      }\n      new ImageCompare(document.getElementById(\"image-compare-r5dd02\"),\n      {\n        controlColor: themeColor,\n        controlShadow: false,\n        verticalMode: false,\n        showLabels: true,\n        labelOptions: {\n          before: 'Original',\n          after: 'Preset',\n          onHover: true,\n        }\n      }).mount();\n    </script>\n  \n\n\n    <p class=\"download-link\">\n      <a class=\"button\" href=\"Bretagne Beach.xmp\" download>\n        Download Lightroom Preset <strong>Bretagne Beach.xmp</strong>\n      </a>\n    </p>\n    \n",
            "tags": [
                "Lightroom",
                "Presets"
            ]
        }
    ]
}