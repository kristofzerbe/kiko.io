<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>kiko.io</title>
  <icon>https://www.gravatar.com/avatar/a479b02accf1276fb3b292931c8a72f4</icon>
  <subtitle>Memorable Tech Stuff</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://kiko.io/"/>
  <updated>2021-01-20T12:13:20.934Z</updated>
  <id>https://kiko.io/</id>
  
  <author>
    <name>Kristof Zerbe</name>
    <email>kristof.zerbe@gmail.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Use a duplicate image to drop a shadow</title>
    <link href="https://kiko.io/categories/UI-Design/Use-a-duplicate-image-to-drop-a-shadow/"/>
    <id>https://kiko.io/categories/UI-Design/Use-a-duplicate-image-to-drop-a-shadow/</id>
    <published>2021-01-20T09:38:50.000Z</published>
    <updated>2021-01-20T12:13:20.934Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Depending on your design, sometimes it is nice to drop a shadow on an image to highlight it:&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;my-image.jpg&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;img&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;box-shadow&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;25px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;25px&lt;/span&gt; -&lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;#666&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/categories/UI-Design/Use-a-duplicate-image-to-drop-a-shadow/normal-shadow.jpg&quot; alt=&quot;Normal Box Shadow&quot;&gt;&lt;/p&gt;
&lt;p&gt;But … it looks like a paper print of the image, with a light bulb in the first third above it. The shade is grey, boring and has been used and seen many times before…&lt;/p&gt;
&lt;p&gt;An design related &lt;a href=&quot;https://www.instagram.com/p/CIXUIXkBHMk/&quot;&gt;Instagram post&lt;/a&gt; from Muhammad Abdull of &lt;a href=&quot;https://www.instagram.com/thewilsonwings&quot;&gt;thewilsonthings&lt;/a&gt;, inspired me to &lt;strong&gt;use the image itself as the shadow&lt;/strong&gt; in order to make the image look a bit translucent. Should be the same technique as that of a reflection. Here is the HTML/CSS code for it, as the people asking for it in the comments.&lt;/p&gt;
    
    </summary>
    
    
      <category term="UI-Design" scheme="https://kiko.io/categories/UI-Design/"/>
    
    
      <category term="CSS" scheme="https://kiko.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Safely remove multiple classes using a prefix</title>
    <link href="https://kiko.io/categories/JavaScript/Safely-remove-multiple-classes-using-a-prefix/"/>
    <id>https://kiko.io/categories/JavaScript/Safely-remove-multiple-classes-using-a-prefix/</id>
    <published>2021-01-18T10:17:46.000Z</published>
    <updated>2021-01-18T11:32:19.850Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Writing a Web App with HTML and JavaScript means you deal with several classes on your DOM elements in order to visualize state changes. And there are some pitfalls to be aware of with regard to removal.&lt;/p&gt;
&lt;p&gt;Assuming you want to open some kind of sidebar above a container. In this sidebar you have several buttons to show different content via JavaScript and a close button, which closes the sidebar again. You HTML code maybe looks like this:&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;container&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;... Main Content ...&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;nav&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;open-sidebar&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;nav&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;aside&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;sidebar&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;content&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;... Sidebar Content ...&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;close&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Close Sidebar&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;content-1&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Show Content 1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;content-2&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Show Content 2&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;content-3&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Show Content 3&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;aside&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;By clicking on the &lt;code&gt;open-sidebar&lt;/code&gt; button, the sidebar is opened and the action, respectively the new state, is vizualized by adding an appropriate class to the parent sidebar element. In order to make it easy for the user, the default content (Content 1) will be loaded also and its state will be marked with another class.&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;aside&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;sidebar open open-content-1&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;A click on of the other content buttons (let’s say Content 2), will replace the current content and the &lt;code&gt;aside&lt;/code&gt; classes will change into:&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;aside&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;sidebar open open-content-2&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Now we want to close the sidebar again, assuming that we don’t have stored the currently opened content in the JavaScript code…&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://kiko.io/categories/JavaScript/"/>
    
    
      <category term="DOM" scheme="https://kiko.io/tags/DOM/"/>
    
  </entry>
  
  <entry>
    <title>Use and manage multiple Node.js versions on Windows 10</title>
    <link href="https://kiko.io/categories/Tools/Use-and-manage-multiple-Node-js-versions-on-Windows-10/"/>
    <id>https://kiko.io/categories/Tools/Use-and-manage-multiple-Node-js-versions-on-Windows-10/</id>
    <published>2021-01-08T12:47:22.000Z</published>
    <updated>2021-01-18T10:18:54.996Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;For a new project I needed to have Node 14 running on my Windows 10 machine, so installation was done quickly via downloading and running the setup file.&lt;/p&gt;
&lt;p&gt;A short time later I wanted to write a new blog post here on kiko.io, which depends on the Node.js based static site generator &lt;a href=&quot;https://hexo.io&quot;&gt;Hexo&lt;/a&gt; … and ran into several problems.&lt;/p&gt;
&lt;p&gt;First of all my hero image processing script (see &lt;a href=&quot;/categories/Tools/Automatic-Header-Images-in-Hexo/&quot; title=&quot;Automatic Header Images in Hexo&quot;&gt;Automatic Header Images in Hexo&lt;/a&gt;) returned an exception. The script uses &lt;a href=&quot;https://github.com/hexojs/hexo-fs&quot;&gt;hexo-fs&lt;/a&gt; and the problem is known quite some time, according to this &lt;a href=&quot;https://github.com/hexojs/hexo/issues/4263&quot;&gt;Github issue&lt;/a&gt;. The guys recommend to downgrade to an older version of Node.js … :(&lt;/p&gt;
&lt;p&gt;Ok … I needed a solution to install multiple Node.js versions and switch between them, depending on which project I want to work on … and there is one: &lt;strong&gt;&lt;a href=&quot;https://github.com/coreybutler/nvm-windows&quot;&gt;nvm-windows&lt;/a&gt;&lt;/strong&gt; by Corey Butler!&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tools" scheme="https://kiko.io/categories/Tools/"/>
    
    
      <category term="Hexo" scheme="https://kiko.io/tags/Hexo/"/>
    
      <category term="Windows" scheme="https://kiko.io/tags/Windows/"/>
    
      <category term="Node.js" scheme="https://kiko.io/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>How to prevent duplicate events</title>
    <link href="https://kiko.io/categories/JavaScript/How-to-prevent-duplicate-events/"/>
    <id>https://kiko.io/categories/JavaScript/How-to-prevent-duplicate-events/</id>
    <published>2021-01-07T16:22:25.000Z</published>
    <updated>2021-01-07T17:50:30.215Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;I’m working on a new web app that contains a sliding out panel with some additional information on the selected element. This panel can be closed by the user via the ESC key. The implementation on initializing the panel seems very straight forward:&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Panel&lt;/span&gt;() &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&amp;quot;keydown&amp;quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(event.key === &lt;span class=&quot;string&quot;&gt;&amp;quot;Escape&amp;quot;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//close the panel&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Problem is: the panel, which is part of the basic HTML, will be initialized with its content and functionality in a ES6 class. So … on every init, another event listener is added.&lt;/p&gt;
&lt;p&gt;You can easily figure that out, by calling &lt;code&gt;getEventListeners(document)&lt;/code&gt; in the Chrome DevTools:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/categories/JavaScript/How-to-prevent-duplicate-events/chromedevtools-multiple-listeners.png&quot; alt=&quot;Chrome DevTools: Multiple Event Listeners&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://kiko.io/categories/JavaScript/"/>
    
    
      <category term="Events" scheme="https://kiko.io/tags/Events/"/>
    
  </entry>
  
  <entry>
    <title>Utilize a repository of reusable ES6 template literals</title>
    <link href="https://kiko.io/categories/JavaScript/Utilize-a-repository-of-reusable-ES6-template-literals/"/>
    <id>https://kiko.io/categories/JavaScript/Utilize-a-repository-of-reusable-ES6-template-literals/</id>
    <published>2021-01-03T12:29:01.000Z</published>
    <updated>2021-01-04T14:23:46.905Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;The &lt;a href=&quot;http://es6-features.org/#StringInterpolation&quot;&gt;&lt;strong&gt;Template Literals&lt;/strong&gt;&lt;/a&gt; introduced with ES6 are very useful to deal with multiline strings, because they support &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Expression_interpolation&quot;&gt;embedded expressions&lt;/a&gt;. Gone are the days of endless string concatination or replacing variables in a string by using RegEx.&lt;/p&gt;
&lt;p&gt;Instead of… &lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; url = ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; file = ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; template = &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;#x27;&amp;lt;div class=&amp;quot;photo&amp;quot;&amp;gt;&amp;#x27;&lt;/span&gt; + &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;string&quot;&gt;&amp;#x27;&amp;lt;a href=&amp;quot;&amp;#x27;&lt;/span&gt; + url + &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;#x27; + &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;        &amp;#x27;style=&amp;quot;&lt;/span&gt;background-image: url(&lt;span class=&quot;string&quot;&gt;&amp;#x27; + file + &amp;#x27;&lt;/span&gt;)&lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;lt;/a&amp;gt;&amp;#x27; + &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;  &amp;#x27;&amp;lt;/div&amp;gt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;… you can write:&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; url = ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; file = ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; template = &lt;span class=&quot;string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;  &amp;lt;div class=&amp;quot;photo&amp;quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;    &amp;lt;a href=&amp;quot;&lt;span class=&quot;subst&quot;&gt;$&amp;#123;url&amp;#125;&lt;/span&gt;/&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;    style=&amp;quot;background-image: url(&lt;span class=&quot;subst&quot;&gt;$&amp;#123;file&amp;#125;&lt;/span&gt;);&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;  &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;`&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;It’s much cleaner and easier to handle, as you can copy your needed HTML right into your code and surround it by &lt;strong&gt;backtick&lt;/strong&gt; (!) characters. Insert your variable placeholders (expressions), indicated by a dollar sign and curly braces, and you are done.&lt;/p&gt;
&lt;p&gt;But there is one “restriction”, you have to be aware of: the interpolation (substitution of the expressions) is done at declaration time and not at runtime. You can’t define your literals seperatly, take one and make your substitution as you need it, like you would do with &lt;a href=&quot;https://handlebarsjs.com/&quot;&gt;Handlebars&lt;/a&gt; or other templating engines. Therefore the name &lt;em&gt;template&lt;/em&gt; literals is a bit misleading. But … there is a way to achieve this anyway…&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://kiko.io/categories/JavaScript/"/>
    
    
      <category term="ES6" scheme="https://kiko.io/tags/ES6/"/>
    
      <category term="Templating" scheme="https://kiko.io/tags/Templating/"/>
    
  </entry>
  
  <entry>
    <title>Spice Up Windows Terminal</title>
    <link href="https://kiko.io/categories/Tools/Spice-Up-Windows-Terminal/"/>
    <id>https://kiko.io/categories/Tools/Spice-Up-Windows-Terminal/</id>
    <published>2020-12-24T14:03:15.000Z</published>
    <updated>2021-01-04T14:13:53.129Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Working with the PowerShell in 2020 means fun, because of the new &lt;a href=&quot;https://www.microsoft.com/en-us/p/windows-terminal/9n0dx20hk701&quot;&gt;&lt;strong&gt;Windows Terminal&lt;/strong&gt; (get it from Windows Store)&lt;/a&gt;. It has more power as the old Powershell Console and it is visually adaptable to your personal taste, by installing the wonderful theming engine &lt;a href=&quot;https://github.com/JanDeDobbeleer/oh-my-posh&quot;&gt;&lt;strong&gt;oh-my-posh&lt;/strong&gt; from Jan De Dobbeleer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/categories/Tools/Spice-Up-Windows-Terminal/terminal-original.png&quot; alt=&quot;Original Terminal&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/categories/Tools/Spice-Up-Windows-Terminal/terminal-oh-my-posh.png&quot; alt=&quot;Terminal with oh-my-posh&quot;&gt;&lt;/p&gt;
&lt;p&gt;To get Oh-My-Posh properly run, there are several steps to do I want to show here in a nutshell…&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tools" scheme="https://kiko.io/categories/Tools/"/>
    
    
      <category term="Windows" scheme="https://kiko.io/tags/Windows/"/>
    
      <category term="Theming" scheme="https://kiko.io/tags/Theming/"/>
    
      <category term="PowerShell" scheme="https://kiko.io/tags/PowerShell/"/>
    
  </entry>
  
  <entry>
    <title>Discoveries #5</title>
    <link href="https://kiko.io/categories/Discoveries/Discoveries-5/"/>
    <id>https://kiko.io/categories/Discoveries/Discoveries-5/</id>
    <published>2020-12-19T11:12:44.000Z</published>
    <updated>2021-01-20T09:51:18.934Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;In this episode of the &lt;strong&gt;Discoveries&lt;/strong&gt; (almost) everything is about images and the web. There are so many pitfalls to do it wrong, but many more possibilities to do it right, especially with these resources I found in the last few weeks.&lt;/p&gt;

        &lt;ul class=&quot;simplelist&quot;&gt;
            &lt;li&gt;ASP.NET Core Image Resizing Middleware&lt;/li&gt;&lt;li&gt;Best way to lazy load images for maximum performance&lt;/li&gt;&lt;li&gt;image orientation on the web&lt;/li&gt;&lt;li&gt;cosha - Colorful shadows for your images&lt;/li&gt;&lt;li&gt;parax-bg - Parallax Backgrounds&lt;/li&gt;&lt;li&gt;parax - Parallax Elements&lt;/li&gt;&lt;li&gt;Luminous Lightbox&lt;/li&gt;&lt;li&gt;Tiny-Swiper - Image Carousel&lt;/li&gt;
        &lt;/ul&gt;
        &lt;ul class=&quot;anchorlist&quot; style=&quot;display:none;&quot;&gt;
            &lt;li&gt;&lt;a href=&quot;#aspnet-core-image-resizing-middleware&quot;&gt;ASP.NET Core Image Resizing Middleware&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#best-way-lazy-load-images&quot;&gt;Best way to lazy load images for maximum performance&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#image-orientation-on-the-web&quot;&gt;image orientation on the web&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#cosha&quot;&gt;cosha - Colorful shadows for your images&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#parax-bg&quot;&gt;parax-bg - Parallax Backgrounds&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#parax&quot;&gt;parax - Parallax Elements&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#luminous&quot;&gt;Luminous Lightbox&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#tiny-swiper&quot;&gt;Tiny-Swiper - Image Carousel&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
    
    </summary>
    
    
      <category term="Discoveries" scheme="https://kiko.io/categories/Discoveries/"/>
    
    
      <category term="Great Finds" scheme="https://kiko.io/tags/Great-Finds/"/>
    
  </entry>
  
  <entry>
    <title>Indian Presets for Lightroom</title>
    <link href="https://kiko.io/categories/Photo-Editing/Indian-Presets-for-Lightroom/"/>
    <id>https://kiko.io/categories/Photo-Editing/Indian-Presets-for-Lightroom/</id>
    <published>2020-10-28T13:07:20.000Z</published>
    <updated>2021-01-04T11:25:24.097Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;In 2019 I was on a short, stressful business trip to Dehli, India and one night we had the opportunity to relax a bit by driving around the city and visit some beautiful places of interest. I had no gear at all, just my Sony smartphone, but it is remarkable how good this worked out.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Photo-Editing" scheme="https://kiko.io/categories/Photo-Editing/"/>
    
    
      <category term="Lightroom" scheme="https://kiko.io/tags/Lightroom/"/>
    
      <category term="Presets" scheme="https://kiko.io/tags/Presets/"/>
    
  </entry>
  
  <entry>
    <title>Israeli Presets for Lightroom</title>
    <link href="https://kiko.io/categories/Photo-Editing/Israeli-Presets-for-Lightroom/"/>
    <id>https://kiko.io/categories/Photo-Editing/Israeli-Presets-for-Lightroom/</id>
    <published>2020-10-27T14:07:20.000Z</published>
    <updated>2021-01-04T11:25:24.351Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;I’m a travel and event photo enthusiast, which means I’m shooting a lot of photographs on vacation or at special events only a few times a year. After I’m back home and start the image processing, I develop a particular look for my images of the past vacation or event. This has a lot to do with my mood and is very intuitive. Not all images are the same in terms of composition and light and so I create usually 3 or 4 different presets each time during image processing.&lt;/p&gt;
&lt;p&gt;Back in 2019, I was traveling around Israel, a fascinating country where almost every wall has a story to tell and I was listening through my viewfinder. Here I want to share the presets with you…&lt;/p&gt;
    
    </summary>
    
    
      <category term="Photo-Editing" scheme="https://kiko.io/categories/Photo-Editing/"/>
    
    
      <category term="Lightroom" scheme="https://kiko.io/tags/Lightroom/"/>
    
      <category term="Presets" scheme="https://kiko.io/tags/Presets/"/>
    
  </entry>
  
  <entry>
    <title>Folder based publishing in Lightroom</title>
    <link href="https://kiko.io/categories/Photo-Editing/Folder-based-publishing-in-Lightroom/"/>
    <id>https://kiko.io/categories/Photo-Editing/Folder-based-publishing-in-Lightroom/</id>
    <published>2020-10-26T12:28:59.000Z</published>
    <updated>2020-10-28T11:57:21.070Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;In all times photography was a process: First you shoot you images, then you edit them and in the third step you publish them elsewhere.&lt;/p&gt;
&lt;p&gt;Today &lt;strong&gt;Adobe Lightroom&lt;/strong&gt; is a de-facto standard in photo processing, especially when you shoot RAW images. And I mean &lt;a href=&quot;https://www.adobe.com/de/products/photoshop-lightroom-classic.html&quot;&gt;Lightroom Classic&lt;/a&gt; and not the new web/smartphone based software, which doesn’t come even close to the desktop application yet.&lt;/p&gt;
&lt;p&gt;I use Lightroom for all purposes after I shot my images: editing, cataloguing, managing and … publishing. On publishing Lightroom offers you two approaches: &lt;em&gt;Export&lt;/em&gt; and &lt;em&gt;Publish&lt;/em&gt;. While &lt;em&gt;Export&lt;/em&gt; is mainly for creating JPG copies of edited RAW images, &lt;em&gt;Publish&lt;/em&gt; goes one step further and gives you the ability to do “something” with your exported JPG’s, for example upload them on Flickr, Instagram, 500px or to your own web server via FTP. Major difference to &lt;em&gt;Export&lt;/em&gt; is, that &lt;em&gt;Publish&lt;/em&gt; keeps your images in sync. Everytime you change the source images, the defined publish services recognizes and offer you to re-publish your image.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/categories/Photo-Editing/Folder-based-publishing-in-Lightroom/lr-re-publish.png&quot; alt=&quot;Lightroom Publish&quot;&gt;&lt;/p&gt;
&lt;p&gt;In the past years I tried a lot of Lightroom plugins for publishing on several platforms, but it doesn’t work out for long, because all these platforms change their API almost every year (or are stamped) and the sparely maintained 3rd party plugins break.&lt;/p&gt;
&lt;p&gt;My workflow for quite some time is to publish my photos on the hard drive, in a folder, which is synced via Dropbox with the cloud. From there I distribute them further.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Photo-Editing" scheme="https://kiko.io/categories/Photo-Editing/"/>
    
    
      <category term="Lightroom" scheme="https://kiko.io/tags/Lightroom/"/>
    
      <category term="Publishing" scheme="https://kiko.io/tags/Publishing/"/>
    
      <category term="Plugin" scheme="https://kiko.io/tags/Plugin/"/>
    
  </entry>
  
  <entry>
    <title>Discoveries #4</title>
    <link href="https://kiko.io/categories/Discoveries/Discoveries-4/"/>
    <id>https://kiko.io/categories/Discoveries/Discoveries-4/</id>
    <published>2020-10-10T13:27:47.000Z</published>
    <updated>2021-01-03T10:52:22.522Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;It is so amazing how many cool stuff developers around the world are producing these days. Or they do what they always do, but I have more time to read about their smart ideas and solutions. This month I have 8 pearls for you:&lt;/p&gt;

        &lt;ul class=&quot;simplelist&quot;&gt;
            &lt;li&gt;waitForElementTransition()&lt;/li&gt;&lt;li&gt;Using Flexbox and text ellipsis together&lt;/li&gt;&lt;li&gt;Using Trello as a Super Simple CMS&lt;/li&gt;&lt;li&gt;Memorize Scroll Position Across Page Loads&lt;/li&gt;&lt;li&gt;A free guide to HTML5 &amp;lt;head&amp;gt; elements&lt;/li&gt;&lt;li&gt;BVSelect - Vanilla JS&lt;/li&gt;&lt;li&gt;A clock that represents the time as hex color values&lt;/li&gt;&lt;li&gt;Animate.css - Just-add-water CSS animations&lt;/li&gt;
        &lt;/ul&gt;
        &lt;ul class=&quot;anchorlist&quot; style=&quot;display:none;&quot;&gt;
            &lt;li&gt;&lt;a href=&quot;#waitForElementTransition&quot;&gt;waitForElementTransition()&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#flexbox-and-ellipsis&quot;&gt;Using Flexbox and text ellipsis together&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#using-trello-as-cms&quot;&gt;Using Trello as a Super Simple CMS&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#memorize-scroll-position&quot;&gt;Memorize Scroll Position Across Page Loads&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#head-dev&quot;&gt;A free guide to HTML5 &amp;lt;head&amp;gt; elements&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#bv-select&quot;&gt;BVSelect - Vanilla JS&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#hex-time&quot;&gt;A clock that represents the time as hex color values&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#animate-css&quot;&gt;Animate.css - Just-add-water CSS animations&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
    
    </summary>
    
    
      <category term="Discoveries" scheme="https://kiko.io/categories/Discoveries/"/>
    
    
      <category term="Great Finds" scheme="https://kiko.io/tags/Great-Finds/"/>
    
  </entry>
  
  <entry>
    <title>Implement source switch for SPA</title>
    <link href="https://kiko.io/categories/JavaScript/Implement-source-switch-for-SPA/"/>
    <id>https://kiko.io/categories/JavaScript/Implement-source-switch-for-SPA/</id>
    <published>2020-10-04T15:01:02.000Z</published>
    <updated>2021-01-04T14:23:46.905Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;A while ago I wrote a Single Page Application (SPA) with jQuery and and decided to use some useful plugins to avoid reinventing the wheel. To keep the delivered sources small, I used the bundler &lt;a href=&quot;https://gulpjs.com/&quot;&gt;Gulp&lt;/a&gt;, to pack all JS plugins in a single file and another one for my custom JS code. I used the same procedure with the CSS files.&lt;/p&gt;
&lt;p&gt;The SPA contained only a single HTML file in which all bundeled sources and needed HTML template blocks were included, in order to load most of the stuff while starting the app, when the users sees a GMail-like  loading screen.&lt;/p&gt;
&lt;p&gt;But the whole thing had one disadvantage: Debugging for example in Chrome Dev Tool is not a joy, if the code is packed with &lt;a href=&quot;https://www.npmjs.com/package/gulp-concat&quot;&gt;Gulp Concat&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/gulp-concat&quot;&gt;Gulp Uglify&lt;/a&gt;. It would be much more convenient, if the source loading can be done depending on the environment.&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://kiko.io/categories/JavaScript/"/>
    
    
      <category term="SPA" scheme="https://kiko.io/tags/SPA/"/>
    
      <category term="Bundling" scheme="https://kiko.io/tags/Bundling/"/>
    
  </entry>
  
  <entry>
    <title>Show related posts in Hexo</title>
    <link href="https://kiko.io/categories/Tools/Show-related-posts-in-Hexo/"/>
    <id>https://kiko.io/categories/Tools/Show-related-posts-in-Hexo/</id>
    <published>2020-10-03T11:17:03.000Z</published>
    <updated>2021-01-04T14:23:46.904Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;It is always nice to point the readers of your blog’s articles to related posts, they might be interested in. They stay a little longer to understand what you have to offer and increases the likelihood that they become loyal readers, followers or subscribers. Related posts has become a standard on delivering news and posts.&lt;/p&gt;
&lt;p&gt;In the default Hexo theme &lt;strong&gt;Landscape&lt;/strong&gt;, on which this blog is based, there is no such function built in, but as the Hexo community is very busy, there are some plugins you can use.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tools" scheme="https://kiko.io/categories/Tools/"/>
    
    
      <category term="Hexo" scheme="https://kiko.io/tags/Hexo/"/>
    
      <category term="Blogging" scheme="https://kiko.io/tags/Blogging/"/>
    
  </entry>
  
  <entry>
    <title>Discoveries #3 - Tutorials</title>
    <link href="https://kiko.io/categories/Discoveries/Discoveries-3-Tutorials/"/>
    <id>https://kiko.io/categories/Discoveries/Discoveries-3-Tutorials/</id>
    <published>2020-09-29T10:02:10.000Z</published>
    <updated>2021-01-04T11:25:25.622Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Some articles I stumble upon in my daily routine of reading news and blogs are diving very deep in a certain topic, especially if they are describing the basics of techniques I use every day. &lt;/p&gt;
&lt;p&gt;All of the following reading tips are of the type “ahh, that’s why this works like that” or “uuh, I just scatch on the surface on that”. Take your time and read the articles in detail. We all never stop learning and it’s a pleasure to do so…&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;CSS&lt;/strong&gt;&lt;/p&gt;

        &lt;ul class=&quot;simplelist&quot;&gt;
            &lt;li&gt;CSS Viewport Units&lt;/li&gt;&lt;li&gt;Grid for layout, Flexbox for components&lt;/li&gt;&lt;li&gt;How CSS Perspective Works&lt;/li&gt;&lt;li&gt;Linearly Scale font-size with CSS clamp() Based on the Viewport&lt;/li&gt;&lt;li&gt;Learn CSS Centering&lt;/li&gt;
        &lt;/ul&gt;
        &lt;ul class=&quot;anchorlist&quot; style=&quot;display:none;&quot;&gt;
            &lt;li&gt;&lt;a href=&quot;#css-viewport-units&quot;&gt;CSS Viewport Units&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#grid-for-layout-flexbox-for-components&quot;&gt;Grid for layout, Flexbox for components&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#how-css-perspective-works&quot;&gt;How CSS Perspective Works&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#linearly-scale-font-size-with-clamp&quot;&gt;Linearly Scale font-size with CSS clamp() Based on the Viewport&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#centering-in-css&quot;&gt;Learn CSS Centering&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
    

&lt;p&gt;&lt;strong&gt;JavaScript&lt;/strong&gt;&lt;/p&gt;

        &lt;ul class=&quot;simplelist&quot;&gt;
            &lt;li&gt;The Flavors of Object-Oriented Programming (in JavaScript)&lt;/li&gt;&lt;li&gt;Understanding the Event Loop, Callbacks, Promises, and Async/Await in JavaScript&lt;/li&gt;
        &lt;/ul&gt;
        &lt;ul class=&quot;anchorlist&quot; style=&quot;display:none;&quot;&gt;
            &lt;li&gt;&lt;a href=&quot;#the-flavors-of-object-oriented-programming&quot;&gt;The Flavors of Object-Oriented Programming (in JavaScript)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#understanding-the-event-loop&quot;&gt;Understanding the Event Loop, Callbacks, Promises, and Async/Await in JavaScript&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
    
    </summary>
    
    
      <category term="Discoveries" scheme="https://kiko.io/categories/Discoveries/"/>
    
    
      <category term="Great Finds" scheme="https://kiko.io/tags/Great-Finds/"/>
    
  </entry>
  
  <entry>
    <title>Device Class Detection in JavaScript</title>
    <link href="https://kiko.io/categories/JavaScript/Device-Class-Detection-in-JavaScript/"/>
    <id>https://kiko.io/categories/JavaScript/Device-Class-Detection-in-JavaScript/</id>
    <published>2020-09-28T13:27:17.000Z</published>
    <updated>2020-10-04T15:04:51.034Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;In some occasions it is necessary to know which device a user is using while writing JavaScript Web Apps. Should be nothing regarding layout, because for this we have &lt;a href=&quot;https://developer.mozilla.org/de/docs/Web/CSS/Media_Queries/Using_media_queries&quot;&gt;&lt;code&gt;CSS Media Queries&lt;/code&gt;&lt;/a&gt;. &lt;/p&gt;
&lt;p&gt;Somewhere around 2011 W3C introduced &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/Window/matchMedia&quot;&gt;&lt;code&gt;matchMedia()&lt;/code&gt;&lt;/a&gt;, which &lt;em&gt;returns a MediaQueryList object that can be used to detemnine if the document matches the media query string.&lt;/em&gt; The using is pretty straightforward and feels a bit like RegEx matching in JS:&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; mediaQuery = &lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;.matchMedia(&lt;span class=&quot;string&quot;&gt;&amp;#x27;(min-width: 1025px)&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (mediaQuery.matches) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// do something...  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;If you are interested in this API, you will find good introductions to the topic &lt;a href=&quot;https://css-tricks.com/working-with-javascript-media-queries/&quot;&gt;here&lt;/a&gt;, &lt;a href=&quot;https://hacks.mozilla.org/2012/06/using-window-matchmedia-to-do-media-queries-in-javascript/&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;https://www.mediaevent.de/javascript/window-matchMedia.html&quot;&gt;here (German)&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;One point of criticism on this pure JS approach can be, that you have to maintain the breakpoints in addition to CSS … &lt;strong&gt;but why not use these existing breakpoints in JS&lt;/strong&gt;?&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://kiko.io/categories/JavaScript/"/>
    
    
      <category term="Browser" scheme="https://kiko.io/tags/Browser/"/>
    
      <category term="CSS" scheme="https://kiko.io/tags/CSS/"/>
    
      <category term="MediaQuery" scheme="https://kiko.io/tags/MediaQuery/"/>
    
  </entry>
  
  <entry>
    <title>404 Page in Hexo for GitHub Pages</title>
    <link href="https://kiko.io/categories/Tools/404-Page-in-Hexo-for-GitHub-Pages/"/>
    <id>https://kiko.io/categories/Tools/404-Page-in-Hexo-for-GitHub-Pages/</id>
    <published>2020-09-23T12:28:50.000Z</published>
    <updated>2020-10-03T11:04:55.672Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;As this blog is a static one, generated by &lt;a href=&quot;https://hexo.io&quot;&gt;Hexo&lt;/a&gt; and hostet at &lt;a href=&quot;https://pages.github.com/&quot;&gt;GitHub&lt;/a&gt;, the page which was shown, when a user enters an Url which points to nowhere, was the default GitHub 404 page.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/categories/Tools/404-Page-in-Hexo-for-GitHub-Pages/github-404-page.png&quot; alt=&quot;GitHub 404 Page&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tools" scheme="https://kiko.io/categories/Tools/"/>
    
    
      <category term="GitHub" scheme="https://kiko.io/tags/GitHub/"/>
    
      <category term="Hexo" scheme="https://kiko.io/tags/Hexo/"/>
    
      <category term="Error" scheme="https://kiko.io/tags/Error/"/>
    
  </entry>
  
  <entry>
    <title>Pimping the Permalink</title>
    <link href="https://kiko.io/categories/JavaScript/Pimping-the-Permalink/"/>
    <id>https://kiko.io/categories/JavaScript/Pimping-the-Permalink/</id>
    <published>2020-09-20T14:30:37.000Z</published>
    <updated>2021-01-04T14:23:46.904Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Until now I did not show the permalink under my posts in this blog, but in the past I had sometimes the need to pass one of the links and it was not very user-friendly, on desktop as well as on mobile. Not the One-Click experience I prefer.&lt;/p&gt;
&lt;p&gt;My goal was to show the permalink and, even more important, provide a simple way to copy and to share. JavaScript to the rescue…&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://kiko.io/categories/JavaScript/"/>
    
    
      <category term="Hexo" scheme="https://kiko.io/tags/Hexo/"/>
    
      <category term="CSS" scheme="https://kiko.io/tags/CSS/"/>
    
      <category term="Stylus" scheme="https://kiko.io/tags/Stylus/"/>
    
      <category term="Share" scheme="https://kiko.io/tags/Share/"/>
    
  </entry>
  
  <entry>
    <title>Discoveries #2</title>
    <link href="https://kiko.io/categories/Discoveries/Discoveries-2/"/>
    <id>https://kiko.io/categories/Discoveries/Discoveries-2/</id>
    <published>2020-09-07T15:54:50.000Z</published>
    <updated>2021-01-04T11:25:25.379Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;New month, new discoveries. We will deal with key bindings, downloads on the fly, a lot of animations and contrasting images. Have fun, trying out these stunning solutions.&lt;/p&gt;

        &lt;ul class=&quot;simplelist&quot;&gt;
            &lt;li&gt;tinykeys - Modern library for keybindings&lt;/li&gt;&lt;li&gt;Creating files in JavaScript in your browser&lt;/li&gt;&lt;li&gt;CSS Animated Google Fonts&lt;/li&gt;&lt;li&gt;Skeleton Screen CSS&lt;/li&gt;&lt;li&gt;More Control Over CSS Borders With background-image&lt;/li&gt;&lt;li&gt;A CSS-only, animated, wrapping underline&lt;/li&gt;&lt;li&gt;Nailing the Perfect Contrast Between Light Text and a Background Image&lt;/li&gt;&lt;li&gt;Contrast.js&lt;/li&gt;
        &lt;/ul&gt;
        &lt;ul class=&quot;anchorlist&quot; style=&quot;display:none;&quot;&gt;
            &lt;li&gt;&lt;a href=&quot;#tinykeys&quot;&gt;tinykeys - Modern library for keybindings&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#creating-files-in-javascript&quot;&gt;Creating files in JavaScript in your browser&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#css-animated-fonts&quot;&gt;CSS Animated Google Fonts&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#skeleton-screen-css&quot;&gt;Skeleton Screen CSS&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#more-control-over-css-borders&quot;&gt;More Control Over CSS Borders With background-image&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#css-only-animated-wrapping-underline&quot;&gt;A CSS-only, animated, wrapping underline&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#nailing-the-perfect-contrast&quot;&gt;Nailing the Perfect Contrast Between Light Text and a Background Image&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#contrast-js&quot;&gt;Contrast.js&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
    
    </summary>
    
    
      <category term="Discoveries" scheme="https://kiko.io/categories/Discoveries/"/>
    
    
      <category term="Great Finds" scheme="https://kiko.io/tags/Great-Finds/"/>
    
  </entry>
  
  <entry>
    <title>Add website to Trello card the better way</title>
    <link href="https://kiko.io/categories/Tools/Add-website-to-Trello-card-the-better-way/"/>
    <id>https://kiko.io/categories/Tools/Add-website-to-Trello-card-the-better-way/</id>
    <published>2020-09-07T13:17:21.000Z</published>
    <updated>2020-10-02T18:12:08.994Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;I was looking for a new way to store interesting website articles for reading later, as Pocket, my favourite tool until here, gets worse and worse. As I am a big &lt;a href=&quot;https://trello.com&quot;&gt;Trello&lt;/a&gt; fan, I wanted to give it a chance to be Pockets successor on my smartphone, where I’m reading mostly.&lt;/p&gt;
&lt;p&gt;On installing the Trello Android app, you will find a new SHARE target &lt;strong&gt;Add new Trello card&lt;/strong&gt;, which is comfortable to use:&lt;/p&gt;
&lt;p&gt;(Sry, for the German screenshots ;)&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/categories/Tools/Add-website-to-Trello-card-the-better-way/android-share-website.png&quot; alt=&quot;Android&amp;#39;s default share with New Trello Card&quot;&gt;&lt;/p&gt;
&lt;p&gt;The result, website’s title and Url set, is nice at best:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/categories/Tools/Add-website-to-Trello-card-the-better-way/card-via-share.png&quot; alt=&quot;Trello card via Android Share&quot;&gt;&lt;/p&gt;
&lt;p&gt;… but Trello has a &lt;strong&gt;&lt;a href=&quot;https://trello.com/add-card&quot;&gt;Bookmarklet&lt;/a&gt;&lt;/strong&gt;, which does the job much better.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tools" scheme="https://kiko.io/categories/Tools/"/>
    
    
      <category term="Trello" scheme="https://kiko.io/tags/Trello/"/>
    
      <category term="Browser" scheme="https://kiko.io/tags/Browser/"/>
    
  </entry>
  
  <entry>
    <title>Horizontal navigation menu above an image</title>
    <link href="https://kiko.io/categories/UI-Design/Horizontal-navigation-menu-above-an-image/"/>
    <id>https://kiko.io/categories/UI-Design/Horizontal-navigation-menu-above-an-image/</id>
    <published>2020-07-20T13:55:47.000Z</published>
    <updated>2021-01-04T14:23:46.904Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;I changed the main menu of my blog, because I wanted to get rid of the hamburger menu on the upper left, which was shown only for smartphones, but was not really reachable conveniently. Beside that it made no sense to have different navigations for different devices.&lt;/p&gt;
&lt;p&gt;My choice was to implement a horizontal scrolling menu, which can grow over the time, without any need of customizing. As I have quite big header images and I wanted to place the new navigation in a more accessible zone, I decided to place it at the bottom, but above the header image.&lt;/p&gt;
    
    </summary>
    
    
      <category term="UI-Design" scheme="https://kiko.io/categories/UI-Design/"/>
    
    
      <category term="CSS" scheme="https://kiko.io/tags/CSS/"/>
    
      <category term="Stylus" scheme="https://kiko.io/tags/Stylus/"/>
    
  </entry>
  
</feed>
