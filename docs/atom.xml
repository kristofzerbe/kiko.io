<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>kiko.io</title>
  <icon>https://www.gravatar.com/avatar/a479b02accf1276fb3b292931c8a72f4</icon>
  <subtitle>Memorable Tech Stuff</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://kiko.io/"/>
  <updated>2021-04-09T17:25:52.857Z</updated>
  <id>https://kiko.io/</id>
  
  <author>
    <name>Kristof Zerbe</name>
    <email>kristof.zerbe@gmail.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SVG Resources</title>
    <link href="https://kiko.io/categories/UI-Design/SVG-Resources/"/>
    <id>https://kiko.io/categories/UI-Design/SVG-Resources/</id>
    <published>2021-04-09T12:07:53.000Z</published>
    <updated>2021-04-09T17:25:52.857Z</updated>
    
    <summary type="html">
    
      &lt;style&gt;
  button {
    background-color: #f1f1f1;
    border: none;
    padding: 1rem;
    margin-bottom: 1rem;
    margin-right: 1rem;
    cursor: pointer;
  }
  em {
    opacity: 0.33;
  }
&lt;/style&gt;
&lt;script&gt;
  var timeoutID;
  function setInfo(e,m) {
    let info = document.getElementById(e);
    info.textContent = m;
    window.clearTimeout(timeoutID);
    timeoutID = setTimeout(function() {
      info.textContent = &quot;&quot;;
      window.clearTimeout(timeoutID);
    }, 2000);
  }
&lt;/script&gt;

&lt;p&gt;Since beginning beginning of time, people are using symbols to make things clear quickly and easily. So do we when developing websites and web apps by using icons. Everybody knows what’s behind a loupe symbol or a hamburger icon.&lt;/p&gt;
&lt;button onclick=&quot;setInfo(&#39;info1&#39;, &#39;Yes, it\&#39;s SEARCH&#39;);&quot;&gt;
&lt;svg width=&quot;24&quot; height=&quot;24&quot; viewbox=&quot;0 0 24 24&quot; fill=&quot;none&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;
  &lt;path fill=&quot;currentColor&quot; fill-rule=&quot;evenodd&quot; clip-rule=&quot;evenodd&quot; d=&quot;M18.319 14.4326C20.7628 11.2941 20.542 6.75347 17.6569 3.86829C14.5327 0.744098 9.46734 0.744098 6.34315 3.86829C3.21895 6.99249 3.21895 12.0578 6.34315 15.182C9.22833 18.0672 13.769 18.2879 16.9075 15.8442C16.921 15.8595 16.9351 15.8745 16.9497 15.8891L21.1924 20.1317C21.5829 20.5223 22.2161 20.5223 22.6066 20.1317C22.9971 19.7412 22.9971 19.1081 22.6066 18.7175L18.364 14.4749C18.3493 14.4603 18.3343 14.4462 18.319 14.4326ZM16.2426 5.28251C18.5858 7.62565 18.5858 11.4246 16.2426 13.7678C13.8995 16.1109 10.1005 16.1109 7.75736 13.7678C5.41421 11.4246 5.41421 7.62565 7.75736 5.28251C10.1005 2.93936 13.8995 2.93936 16.2426 5.28251Z&quot;/&gt;
&lt;/svg&gt;
&lt;/button&gt;
&lt;button onclick=&quot;setInfo(&#39;info1&#39;, &#39;Yeah ... an OPEN MENU button&#39;);&quot;&gt;
&lt;svg width=&quot;24&quot; height=&quot;24&quot; viewbox=&quot;0 0 24 24&quot; fill=&quot;none&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&gt;
  &lt;path fill=&quot;currentColor&quot; d=&quot;M2 6C2 5.44772 2.44772 5 3 5H21C21.5523 5 22 5.44772 22 6C22 6.55228 21.5523 7 21 7H3C2.44772 7 2 6.55228 2 6Z&quot;/&gt;
  &lt;path fill=&quot;currentColor&quot; d=&quot;M2 12.0322C2 11.4799 2.44772 11.0322 3 11.0322H21C21.5523 11.0322 22 11.4799 22 12.0322C22 12.5845 21.5523 13.0322 21 13.0322H3C2.44772 13.0322 2 12.5845 2 12.0322Z&quot;/&gt;
  &lt;path fill=&quot;currentColor&quot; d=&quot;M3 17.0645C2.44772 17.0645 2 17.5122 2 18.0645C2 18.6167 2.44772 19.0645 3 19.0645H21C21.5523 19.0645 22 18.6167 22 18.0645C22 17.5122 21.5523 17.0645 21 17.0645H3Z&quot;/&gt;
&lt;/svg&gt;
&lt;/button&gt;
&lt;span id=&quot;info1&quot;&gt;&lt;/span&gt;

&lt;p&gt;The way we implement icons have changed in the past. From BMP files to GIF and JPG files, PNG files, to complete or customizable symbol fonts like &lt;a href=&quot;https://fontello.com&quot;&gt;fontello.com&lt;/a&gt;, to Scalable Vector Graphics (SVG).&lt;/p&gt;
&lt;p&gt;SVG’s in particular are becoming increasingly popular, because they are nothing more than XML-like code, that can be manipulated via CSS or JS, their digital footprint is unbeatable small and they scale seemlessly.&lt;/p&gt;
&lt;p&gt;Dealing with SVG’s is a little bit more difficult than placing a PNG in HTML, because of its complexity, but it is worth learning as much as possible about it. So did I in the last couple of month and I want to share my finds on the web with you in this post.&lt;/p&gt;
    
    </summary>
    
    
      <category term="UI-Design" scheme="https://kiko.io/categories/UI-Design/"/>
    
    
      <category term="Great Finds" scheme="https://kiko.io/tags/Great-Finds/"/>
    
      <category term="SVG" scheme="https://kiko.io/tags/SVG/"/>
    
      <category term="Imaging" scheme="https://kiko.io/tags/Imaging/"/>
    
  </entry>
  
  <entry>
    <title>Discoveries #8</title>
    <link href="https://kiko.io/categories/Discoveries/Discoveries-8/"/>
    <id>https://kiko.io/categories/Discoveries/Discoveries-8/</id>
    <published>2021-03-31T11:41:26.000Z</published>
    <updated>2021-04-01T10:45:12.251Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;This month my discoveries are all about CSS … at least almost. See the stunning solutions developers around the world have created and take them to improve yours. Have fun exploring.&lt;/p&gt;

        &lt;ul class=&quot;simplelist&quot;&gt;
            &lt;li&gt;Charts.css&lt;/li&gt;&lt;li&gt;AnimXYZ&lt;/li&gt;&lt;li&gt;Magic Animations&lt;/li&gt;&lt;li&gt;transition.css&lt;/li&gt;&lt;li&gt;Make Animated Content Placeholders with HTML and CSS&lt;/li&gt;&lt;li&gt;Animating Underlines&lt;/li&gt;&lt;li&gt;New aspect-ratio CSS property&lt;/li&gt;&lt;li&gt;How to display language-specific quotes in CSS&lt;/li&gt;&lt;li&gt;Making the DETAILS element look and behave like a modal&lt;/li&gt;&lt;li&gt;Better Line Breaks for Long URLs&lt;/li&gt;
        &lt;/ul&gt;
        &lt;ul class=&quot;anchorlist&quot; style=&quot;display:none;&quot;&gt;
            &lt;li&gt;&lt;a href=&quot;#charts-css&quot;&gt;Charts.css&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#anim-xyz&quot;&gt;AnimXYZ&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#magic-animations&quot;&gt;Magic Animations&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#transition-css&quot;&gt;transition.css&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#animated-content-placeholders&quot;&gt;Make Animated Content Placeholders with HTML and CSS&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#animating-underlines&quot;&gt;Animating Underlines&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#new-aspect-ratio&quot;&gt;New aspect-ratio CSS property&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#language-specific-quotes&quot;&gt;How to display language-specific quotes in CSS&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#details-modal&quot;&gt;Making the DETAILS element look and behave like a modal&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#better-line-breaks&quot;&gt;Better Line Breaks for Long URLs&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
    
    </summary>
    
    
      <category term="Discoveries" scheme="https://kiko.io/categories/Discoveries/"/>
    
    
      <category term="Great Finds" scheme="https://kiko.io/tags/Great-Finds/"/>
    
  </entry>
  
  <entry>
    <title>Custom Caller Authentication with ASP.NET Core 5.0 Web API</title>
    <link href="https://kiko.io/categories/C/Custom-Caller-Authentication-with-ASP-NET-Core-5-0-WebApi/"/>
    <id>https://kiko.io/categories/C/Custom-Caller-Authentication-with-ASP-NET-Core-5-0-WebApi/</id>
    <published>2021-02-28T16:05:00.000Z</published>
    <updated>2021-02-28T18:51:42.231Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Developing micro services with Microsoft ASP.NET Core 5.0 Web API is powerful and fun, but the fun stops, if your data are accesses unauthorized. It is absolutely fundamental to have a protection layer, which filters out unwanted data requests.  &lt;/p&gt;
&lt;p&gt;A common way is to limit the service access by providing API Keys to well known clients. In this post I will show you how to implement such a filter in terms of API keys and IP addresses. &lt;/p&gt;
    
    </summary>
    
    
      <category term="C#" scheme="https://kiko.io/categories/C/"/>
    
    
      <category term="WebAPI" scheme="https://kiko.io/tags/WebAPI/"/>
    
      <category term="Authentication" scheme="https://kiko.io/tags/Authentication/"/>
    
      <category term="Visual Studio" scheme="https://kiko.io/tags/Visual-Studio/"/>
    
  </entry>
  
  <entry>
    <title>Discoveries #7</title>
    <link href="https://kiko.io/categories/Discoveries/Discoveries-7/"/>
    <id>https://kiko.io/categories/Discoveries/Discoveries-7/</id>
    <published>2021-02-25T13:36:10.000Z</published>
    <updated>2021-03-31T13:15:49.268Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;February and the first sunny days in 2021. What a delight! Have fun, sitting in the sun, discovering my newest finds on the web. This time, all regarding JavaScript…&lt;/p&gt;

        &lt;ul class=&quot;simplelist&quot;&gt;
            &lt;li&gt;github1s: One second to read GitHub code with VS Code&lt;/li&gt;&lt;li&gt;How to enhance fetch() with the Decorator Pattern&lt;/li&gt;&lt;li&gt;Ky - Delightful HTTP Requests&lt;/li&gt;&lt;li&gt;VS Code’s REST Client Plugin is All You Need to Make API Calls&lt;/li&gt;&lt;li&gt;json-view&lt;/li&gt;&lt;li&gt;You might not need jQuery&lt;/li&gt;&lt;li&gt;JavaScript Algorithms and Data Structures&lt;/li&gt;&lt;li&gt;date-fns - Modern JavaScript date utility library&lt;/li&gt;&lt;li&gt;Parsing Markdown into an Automated Table of Contents&lt;/li&gt;&lt;li&gt;FakeScroll - lightweight custom-looking scrollbars&lt;/li&gt;
        &lt;/ul&gt;
        &lt;ul class=&quot;anchorlist&quot; style=&quot;display:none;&quot;&gt;
            &lt;li&gt;&lt;a href=&quot;#github1s&quot;&gt;github1s: One second to read GitHub code with VS Code&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#enhance-fetch-decorator-pattern&quot;&gt;How to enhance fetch() with the Decorator Pattern&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#ky&quot;&gt;Ky - Delightful HTTP Requests&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#vscode-rest-client&quot;&gt;VS Code’s REST Client Plugin is All You Need to Make API Calls&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#jsonview&quot;&gt;json-view&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#you-might-not-need-jquery&quot;&gt;You might not need jQuery&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#js-algorithms-data-structures&quot;&gt;JavaScript Algorithms and Data Structures&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#date-fns&quot;&gt;date-fns - Modern JavaScript date utility library&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#parsing-markdown-into-toc&quot;&gt;Parsing Markdown into an Automated Table of Contents&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#fake-scroll&quot;&gt;FakeScroll - lightweight custom-looking scrollbars&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
    
    </summary>
    
    
      <category term="Discoveries" scheme="https://kiko.io/categories/Discoveries/"/>
    
    
      <category term="Great Finds" scheme="https://kiko.io/tags/Great-Finds/"/>
    
  </entry>
  
  <entry>
    <title>Native JavaScript Multilanguage Templating</title>
    <link href="https://kiko.io/categories/JavaScript/Native-JavaScript-Multilanguage-Templating/"/>
    <id>https://kiko.io/categories/JavaScript/Native-JavaScript-Multilanguage-Templating/</id>
    <published>2021-02-24T12:31:58.000Z</published>
    <updated>2021-02-25T12:05:10.965Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;In the project I’m currently working on, I faced the “problem” to integrate multilanguage support, but due to the fact that the new app should be written in vanilla JS, without any plugins, libraries or other dependencies, I had to develop my own localization layer. In this article I want to show you my approach on this…&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://kiko.io/categories/JavaScript/"/>
    
    
      <category term="Localization" scheme="https://kiko.io/tags/Localization/"/>
    
      <category term="Templating" scheme="https://kiko.io/tags/Templating/"/>
    
      <category term="ES6" scheme="https://kiko.io/tags/ES6/"/>
    
  </entry>
  
  <entry>
    <title>Remote Testing and Debugging with Chrome</title>
    <link href="https://kiko.io/categories/Tools/Remote-Testing-and-Debugging-with-Chrome/"/>
    <id>https://kiko.io/categories/Tools/Remote-Testing-and-Debugging-with-Chrome/</id>
    <published>2021-01-24T13:47:10.000Z</published>
    <updated>2021-02-25T12:08:59.767Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Developing a website or web app means, you have installed an editor locally on your computer, writing your code locally and start a tiny, built-in web server for debugging locally in your preferred browser. In most browsers, there are some features to mimic a smartphone, to see if your solution is working on such a device too, but you only get a hint if it’s running properly. Some mobile features like &lt;code&gt;navigator.canShare&lt;/code&gt; do not work at all. Better is to see it live on your device.&lt;/p&gt;
&lt;p&gt;This article will show you firstly, how to test your local solution on a smartphone and secondly, how to debug it locally, when it runs on the smartphone after releasing.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tools" scheme="https://kiko.io/categories/Tools/"/>
    
    
      <category term="VS Code" scheme="https://kiko.io/tags/VS-Code/"/>
    
      <category term="Browser" scheme="https://kiko.io/tags/Browser/"/>
    
      <category term="Debugging" scheme="https://kiko.io/tags/Debugging/"/>
    
  </entry>
  
  <entry>
    <title>Discoveries #6</title>
    <link href="https://kiko.io/categories/Discoveries/Discoveries-6/"/>
    <id>https://kiko.io/categories/Discoveries/Discoveries-6/</id>
    <published>2021-01-20T14:01:34.000Z</published>
    <updated>2021-02-25T13:39:10.116Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;2020 is over and history. Well, may 2021 be with us. With this post I would like to continue the &lt;strong&gt;Discoveries&lt;/strong&gt;, with new momentum. There was a lot to read over the holidays.&lt;/p&gt;
&lt;p&gt;All the finds in this issue have something to do with visual aspects of web design in the broadest sense.&lt;/p&gt;

        &lt;ul class=&quot;simplelist&quot;&gt;
            &lt;li&gt;Drop-Shadow: The Underrated CSS Filter&lt;/li&gt;&lt;li&gt;css.gg - 700+ CSS Icons&lt;/li&gt;&lt;li&gt;SVGBox - API for Web Icons&lt;/li&gt;&lt;li&gt;Change Color of SVG on Hover&lt;/li&gt;&lt;li&gt;CSS filter generator to convert from black to target hex color&lt;/li&gt;&lt;li&gt;Responsive &amp;&amp; Configurable SVG Waves&lt;/li&gt;&lt;li&gt;Balloon.css&lt;/li&gt;&lt;li&gt;How to Build a CSS-only Organizational Chart&lt;/li&gt;&lt;li&gt;Shifty&lt;/li&gt;&lt;li&gt;Brad Traversy&#39;s 50 Projects 50 Days&lt;/li&gt;
        &lt;/ul&gt;
        &lt;ul class=&quot;anchorlist&quot; style=&quot;display:none;&quot;&gt;
            &lt;li&gt;&lt;a href=&quot;#drop-shadow-underrated-css-filter&quot;&gt;Drop-Shadow: The Underrated CSS Filter&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#css-gg&quot;&gt;css.gg - 700+ CSS Icons&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#svgbox&quot;&gt;SVGBox - API for Web Icons&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#change-color-svg-on-hover&quot;&gt;Change Color of SVG on Hover&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#css-filter-generator&quot;&gt;CSS filter generator to convert from black to target hex color&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#responsive-configurable-svg-waves&quot;&gt;Responsive &amp;&amp; Configurable SVG Waves&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#balloon&quot;&gt;Balloon.css&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#build-css-only-org-chart&quot;&gt;How to Build a CSS-only Organizational Chart&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#shifty&quot;&gt;Shifty&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#50-projects-50-days&quot;&gt;Brad Traversy&#39;s 50 Projects 50 Days&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
    
    </summary>
    
    
      <category term="Discoveries" scheme="https://kiko.io/categories/Discoveries/"/>
    
    
      <category term="Great Finds" scheme="https://kiko.io/tags/Great-Finds/"/>
    
  </entry>
  
  <entry>
    <title>Use a duplicate image to drop a shadow</title>
    <link href="https://kiko.io/categories/UI-Design/Use-a-duplicate-image-to-drop-a-shadow/"/>
    <id>https://kiko.io/categories/UI-Design/Use-a-duplicate-image-to-drop-a-shadow/</id>
    <published>2021-01-20T09:38:50.000Z</published>
    <updated>2021-01-20T12:13:20.934Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Depending on your design, sometimes it is nice to drop a shadow on an image to highlight it:&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;my-image.jpg&amp;quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;img&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;attribute&quot;&gt;box-shadow&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;0px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;25px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;25px&lt;/span&gt; -&lt;span class=&quot;number&quot;&gt;10px&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;#666&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;/categories/UI-Design/Use-a-duplicate-image-to-drop-a-shadow/normal-shadow.jpg&quot; alt=&quot;Normal Box Shadow&quot;&gt;&lt;/p&gt;
&lt;p&gt;But … it looks like a paper print of the image, with a light bulb in the first third above it. The shade is grey, boring and has been used and seen many times before…&lt;/p&gt;
&lt;p&gt;An design related &lt;a href=&quot;https://www.instagram.com/p/CIXUIXkBHMk/&quot;&gt;Instagram post&lt;/a&gt; from Muhammad Abdull of &lt;a href=&quot;https://www.instagram.com/thewilsonwings&quot;&gt;thewilsonthings&lt;/a&gt;, inspired me to &lt;strong&gt;use the image itself as the shadow&lt;/strong&gt; in order to make the image look a bit translucent. Should be the same technique as that of a reflection. Here is the HTML/CSS code for it, as the people asking for it in the comments.&lt;/p&gt;
    
    </summary>
    
    
      <category term="UI-Design" scheme="https://kiko.io/categories/UI-Design/"/>
    
    
      <category term="CSS" scheme="https://kiko.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>Safely remove multiple classes using a prefix</title>
    <link href="https://kiko.io/categories/JavaScript/Safely-remove-multiple-classes-using-a-prefix/"/>
    <id>https://kiko.io/categories/JavaScript/Safely-remove-multiple-classes-using-a-prefix/</id>
    <published>2021-01-18T10:17:46.000Z</published>
    <updated>2021-01-24T13:25:43.175Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Writing a Web App with HTML and JavaScript means you deal with several classes on your DOM elements in order to visualize state changes. And there are some pitfalls to be aware of with regard to removal.&lt;/p&gt;
&lt;p&gt;Assuming you want to open some kind of sidebar above a container. In this sidebar you have several buttons to show different content via JavaScript and a close button, which closes the sidebar again. You HTML code maybe looks like this:&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;container&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;... Main Content ...&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;nav&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;open-sidebar&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;nav&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;aside&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;sidebar&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;content&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;... Sidebar Content ...&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;close&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Close Sidebar&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;content1&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Show Content 1&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;content2&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Show Content 2&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;id&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;content3&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Show Content 3&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;button&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;aside&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;body&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;By clicking on the &lt;code&gt;open-sidebar&lt;/code&gt; button, the sidebar is opened and the action, respectively the new state, is vizualized by adding an appropriate class to the parent sidebar element. In order to make it easy for the user, the default content (Content 1) will be loaded also and its state will be marked with another class.&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;aside&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;sidebar open open-content1&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;A click on of the other content buttons (let’s say Content 2), will replace the current content and the &lt;code&gt;aside&lt;/code&gt; classes will change into:&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;aside&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&amp;quot;sidebar open open-content2&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Now we want to close the sidebar again, assuming that we don’t have stored the currently opened content in the JavaScript code…&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://kiko.io/categories/JavaScript/"/>
    
    
      <category term="DOM" scheme="https://kiko.io/tags/DOM/"/>
    
  </entry>
  
  <entry>
    <title>Use and manage multiple Node.js versions on Windows 10</title>
    <link href="https://kiko.io/categories/Tools/Use-and-manage-multiple-Node-js-versions-on-Windows-10/"/>
    <id>https://kiko.io/categories/Tools/Use-and-manage-multiple-Node-js-versions-on-Windows-10/</id>
    <published>2021-01-08T12:47:22.000Z</published>
    <updated>2021-01-18T10:18:54.996Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;For a new project I needed to have Node 14 running on my Windows 10 machine, so installation was done quickly via downloading and running the setup file.&lt;/p&gt;
&lt;p&gt;A short time later I wanted to write a new blog post here on kiko.io, which depends on the Node.js based static site generator &lt;a href=&quot;https://hexo.io&quot;&gt;Hexo&lt;/a&gt; … and ran into several problems.&lt;/p&gt;
&lt;p&gt;First of all my hero image processing script (see &lt;a href=&quot;/categories/Tools/Automatic-Header-Images-in-Hexo/&quot; title=&quot;Automatic Header Images in Hexo&quot;&gt;Automatic Header Images in Hexo&lt;/a&gt;) returned an exception. The script uses &lt;a href=&quot;https://github.com/hexojs/hexo-fs&quot;&gt;hexo-fs&lt;/a&gt; and the problem is known quite some time, according to this &lt;a href=&quot;https://github.com/hexojs/hexo/issues/4263&quot;&gt;Github issue&lt;/a&gt;. The guys recommend to downgrade to an older version of Node.js … :(&lt;/p&gt;
&lt;p&gt;Ok … I needed a solution to install multiple Node.js versions and switch between them, depending on which project I want to work on … and there is one: &lt;strong&gt;&lt;a href=&quot;https://github.com/coreybutler/nvm-windows&quot;&gt;nvm-windows&lt;/a&gt;&lt;/strong&gt; by Corey Butler!&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tools" scheme="https://kiko.io/categories/Tools/"/>
    
    
      <category term="Hexo" scheme="https://kiko.io/tags/Hexo/"/>
    
      <category term="Windows" scheme="https://kiko.io/tags/Windows/"/>
    
      <category term="Node.js" scheme="https://kiko.io/tags/Node-js/"/>
    
  </entry>
  
  <entry>
    <title>How to prevent duplicate events</title>
    <link href="https://kiko.io/categories/JavaScript/How-to-prevent-duplicate-events/"/>
    <id>https://kiko.io/categories/JavaScript/How-to-prevent-duplicate-events/</id>
    <published>2021-01-07T16:22:25.000Z</published>
    <updated>2021-01-07T17:50:30.215Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;I’m working on a new web app that contains a sliding out panel with some additional information on the selected element. This panel can be closed by the user via the ESC key. The implementation on initializing the panel seems very straight forward:&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Panel&lt;/span&gt;() &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;title&quot;&gt;init&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.addEventListener(&lt;span class=&quot;string&quot;&gt;&amp;quot;keydown&amp;quot;&lt;/span&gt;, &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;event&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(event.key === &lt;span class=&quot;string&quot;&gt;&amp;quot;Escape&amp;quot;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//close the panel&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Problem is: the panel, which is part of the basic HTML, will be initialized with its content and functionality in a ES6 class. So … on every init, another event listener is added.&lt;/p&gt;
&lt;p&gt;You can easily figure that out, by calling &lt;code&gt;getEventListeners(document)&lt;/code&gt; in the Chrome DevTools:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/categories/JavaScript/How-to-prevent-duplicate-events/chromedevtools-multiple-listeners.png&quot; alt=&quot;Chrome DevTools: Multiple Event Listeners&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://kiko.io/categories/JavaScript/"/>
    
    
      <category term="Events" scheme="https://kiko.io/tags/Events/"/>
    
  </entry>
  
  <entry>
    <title>Utilize a repository of reusable ES6 template literals</title>
    <link href="https://kiko.io/categories/JavaScript/Utilize-a-repository-of-reusable-ES6-template-literals/"/>
    <id>https://kiko.io/categories/JavaScript/Utilize-a-repository-of-reusable-ES6-template-literals/</id>
    <published>2021-01-03T12:29:01.000Z</published>
    <updated>2021-02-25T13:39:01.684Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;The &lt;a href=&quot;http://es6-features.org/#StringInterpolation&quot;&gt;&lt;strong&gt;Template Literals&lt;/strong&gt;&lt;/a&gt; introduced with ES6 are very useful to deal with multiline strings, because they support &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Expression_interpolation&quot;&gt;embedded expressions&lt;/a&gt;. Gone are the days of endless string concatination or replacing variables in a string by using RegEx.&lt;/p&gt;
&lt;p&gt;Instead of… &lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; url = ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; file = ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; template = &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;string&quot;&gt;&amp;#x27;&amp;lt;div class=&amp;quot;photo&amp;quot;&amp;gt;&amp;#x27;&lt;/span&gt; + &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;     &lt;span class=&quot;string&quot;&gt;&amp;#x27;&amp;lt;a href=&amp;quot;&amp;#x27;&lt;/span&gt; + url + &lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;#x27; + &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;        &amp;#x27;style=&amp;quot;&lt;/span&gt;background-image: url(&lt;span class=&quot;string&quot;&gt;&amp;#x27; + file + &amp;#x27;&lt;/span&gt;)&lt;span class=&quot;string&quot;&gt;&amp;quot;&amp;lt;/a&amp;gt;&amp;#x27; + &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;  &amp;#x27;&amp;lt;/div&amp;gt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;… you can write:&lt;/p&gt;
&lt;figure class=&quot;highlight js&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; url = ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; file = ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; template = &lt;span class=&quot;string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;  &amp;lt;div class=&amp;quot;photo&amp;quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;    &amp;lt;a href=&amp;quot;&lt;span class=&quot;subst&quot;&gt;$&amp;#123;url&amp;#125;&lt;/span&gt;/&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;    style=&amp;quot;background-image: url(&lt;span class=&quot;subst&quot;&gt;$&amp;#123;file&amp;#125;&lt;/span&gt;);&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;  &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;string&quot;&gt;`&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;It’s much cleaner and easier to handle, as you can copy your needed HTML right into your code and surround it by &lt;strong&gt;backtick&lt;/strong&gt; (!) characters. Insert your variable placeholders (expressions), indicated by a dollar sign and curly braces, and you are done.&lt;/p&gt;
&lt;p&gt;But there is one “restriction”, you have to be aware of: the interpolation (substitution of the expressions) is done at declaration time and not at runtime. You can’t define your literals seperatly, take one and make your substitution as you need it, like you would do with &lt;a href=&quot;https://handlebarsjs.com/&quot;&gt;Handlebars&lt;/a&gt; or other templating engines. Therefore the name &lt;em&gt;template&lt;/em&gt; literals is a bit misleading. But … there is a way to achieve this anyway…&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://kiko.io/categories/JavaScript/"/>
    
    
      <category term="Templating" scheme="https://kiko.io/tags/Templating/"/>
    
      <category term="ES6" scheme="https://kiko.io/tags/ES6/"/>
    
  </entry>
  
  <entry>
    <title>Spice Up Windows Terminal</title>
    <link href="https://kiko.io/categories/Tools/Spice-Up-Windows-Terminal/"/>
    <id>https://kiko.io/categories/Tools/Spice-Up-Windows-Terminal/</id>
    <published>2020-12-24T14:03:15.000Z</published>
    <updated>2021-01-04T14:13:53.129Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Working with the PowerShell in 2020 means fun, because of the new &lt;a href=&quot;https://www.microsoft.com/en-us/p/windows-terminal/9n0dx20hk701&quot;&gt;&lt;strong&gt;Windows Terminal&lt;/strong&gt; (get it from Windows Store)&lt;/a&gt;. It has more power as the old Powershell Console and it is visually adaptable to your personal taste, by installing the wonderful theming engine &lt;a href=&quot;https://github.com/JanDeDobbeleer/oh-my-posh&quot;&gt;&lt;strong&gt;oh-my-posh&lt;/strong&gt; from Jan De Dobbeleer&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/categories/Tools/Spice-Up-Windows-Terminal/terminal-original.png&quot; alt=&quot;Original Terminal&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/categories/Tools/Spice-Up-Windows-Terminal/terminal-oh-my-posh.png&quot; alt=&quot;Terminal with oh-my-posh&quot;&gt;&lt;/p&gt;
&lt;p&gt;To get Oh-My-Posh properly run, there are several steps to do I want to show here in a nutshell…&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tools" scheme="https://kiko.io/categories/Tools/"/>
    
    
      <category term="Windows" scheme="https://kiko.io/tags/Windows/"/>
    
      <category term="Theming" scheme="https://kiko.io/tags/Theming/"/>
    
      <category term="PowerShell" scheme="https://kiko.io/tags/PowerShell/"/>
    
  </entry>
  
  <entry>
    <title>Discoveries #5</title>
    <link href="https://kiko.io/categories/Discoveries/Discoveries-5/"/>
    <id>https://kiko.io/categories/Discoveries/Discoveries-5/</id>
    <published>2020-12-19T11:12:44.000Z</published>
    <updated>2021-01-20T09:51:18.934Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;In this episode of the &lt;strong&gt;Discoveries&lt;/strong&gt; (almost) everything is about images and the web. There are so many pitfalls to do it wrong, but many more possibilities to do it right, especially with these resources I found in the last few weeks.&lt;/p&gt;

        &lt;ul class=&quot;simplelist&quot;&gt;
            &lt;li&gt;ASP.NET Core Image Resizing Middleware&lt;/li&gt;&lt;li&gt;Best way to lazy load images for maximum performance&lt;/li&gt;&lt;li&gt;image orientation on the web&lt;/li&gt;&lt;li&gt;cosha - Colorful shadows for your images&lt;/li&gt;&lt;li&gt;parax-bg - Parallax Backgrounds&lt;/li&gt;&lt;li&gt;parax - Parallax Elements&lt;/li&gt;&lt;li&gt;Luminous Lightbox&lt;/li&gt;&lt;li&gt;Tiny-Swiper - Image Carousel&lt;/li&gt;
        &lt;/ul&gt;
        &lt;ul class=&quot;anchorlist&quot; style=&quot;display:none;&quot;&gt;
            &lt;li&gt;&lt;a href=&quot;#aspnet-core-image-resizing-middleware&quot;&gt;ASP.NET Core Image Resizing Middleware&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#best-way-lazy-load-images&quot;&gt;Best way to lazy load images for maximum performance&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#image-orientation-on-the-web&quot;&gt;image orientation on the web&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#cosha&quot;&gt;cosha - Colorful shadows for your images&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#parax-bg&quot;&gt;parax-bg - Parallax Backgrounds&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#parax&quot;&gt;parax - Parallax Elements&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#luminous&quot;&gt;Luminous Lightbox&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#tiny-swiper&quot;&gt;Tiny-Swiper - Image Carousel&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
    
    </summary>
    
    
      <category term="Discoveries" scheme="https://kiko.io/categories/Discoveries/"/>
    
    
      <category term="Great Finds" scheme="https://kiko.io/tags/Great-Finds/"/>
    
  </entry>
  
  <entry>
    <title>Indian Presets for Lightroom</title>
    <link href="https://kiko.io/categories/Photo-Editing/Indian-Presets-for-Lightroom/"/>
    <id>https://kiko.io/categories/Photo-Editing/Indian-Presets-for-Lightroom/</id>
    <published>2020-10-28T13:07:20.000Z</published>
    <updated>2021-01-04T11:25:24.097Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;In 2019 I was on a short, stressful business trip to Dehli, India and one night we had the opportunity to relax a bit by driving around the city and visit some beautiful places of interest. I had no gear at all, just my Sony smartphone, but it is remarkable how good this worked out.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Photo-Editing" scheme="https://kiko.io/categories/Photo-Editing/"/>
    
    
      <category term="Lightroom" scheme="https://kiko.io/tags/Lightroom/"/>
    
      <category term="Presets" scheme="https://kiko.io/tags/Presets/"/>
    
  </entry>
  
  <entry>
    <title>Israeli Presets for Lightroom</title>
    <link href="https://kiko.io/categories/Photo-Editing/Israeli-Presets-for-Lightroom/"/>
    <id>https://kiko.io/categories/Photo-Editing/Israeli-Presets-for-Lightroom/</id>
    <published>2020-10-27T14:07:20.000Z</published>
    <updated>2021-01-04T11:25:24.351Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;I’m a travel and event photo enthusiast, which means I’m shooting a lot of photographs on vacation or at special events only a few times a year. After I’m back home and start the image processing, I develop a particular look for my images of the past vacation or event. This has a lot to do with my mood and is very intuitive. Not all images are the same in terms of composition and light and so I create usually 3 or 4 different presets each time during image processing.&lt;/p&gt;
&lt;p&gt;Back in 2019, I was traveling around Israel, a fascinating country where almost every wall has a story to tell and I was listening through my viewfinder. Here I want to share the presets with you…&lt;/p&gt;
    
    </summary>
    
    
      <category term="Photo-Editing" scheme="https://kiko.io/categories/Photo-Editing/"/>
    
    
      <category term="Lightroom" scheme="https://kiko.io/tags/Lightroom/"/>
    
      <category term="Presets" scheme="https://kiko.io/tags/Presets/"/>
    
  </entry>
  
  <entry>
    <title>Folder based publishing in Lightroom</title>
    <link href="https://kiko.io/categories/Photo-Editing/Folder-based-publishing-in-Lightroom/"/>
    <id>https://kiko.io/categories/Photo-Editing/Folder-based-publishing-in-Lightroom/</id>
    <published>2020-10-26T12:28:59.000Z</published>
    <updated>2020-10-28T11:57:21.070Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;In all times photography was a process: First you shoot you images, then you edit them and in the third step you publish them elsewhere.&lt;/p&gt;
&lt;p&gt;Today &lt;strong&gt;Adobe Lightroom&lt;/strong&gt; is a de-facto standard in photo processing, especially when you shoot RAW images. And I mean &lt;a href=&quot;https://www.adobe.com/de/products/photoshop-lightroom-classic.html&quot;&gt;Lightroom Classic&lt;/a&gt; and not the new web/smartphone based software, which doesn’t come even close to the desktop application yet.&lt;/p&gt;
&lt;p&gt;I use Lightroom for all purposes after I shot my images: editing, cataloguing, managing and … publishing. On publishing Lightroom offers you two approaches: &lt;em&gt;Export&lt;/em&gt; and &lt;em&gt;Publish&lt;/em&gt;. While &lt;em&gt;Export&lt;/em&gt; is mainly for creating JPG copies of edited RAW images, &lt;em&gt;Publish&lt;/em&gt; goes one step further and gives you the ability to do “something” with your exported JPG’s, for example upload them on Flickr, Instagram, 500px or to your own web server via FTP. Major difference to &lt;em&gt;Export&lt;/em&gt; is, that &lt;em&gt;Publish&lt;/em&gt; keeps your images in sync. Everytime you change the source images, the defined publish services recognizes and offer you to re-publish your image.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/categories/Photo-Editing/Folder-based-publishing-in-Lightroom/lr-re-publish.png&quot; alt=&quot;Lightroom Publish&quot;&gt;&lt;/p&gt;
&lt;p&gt;In the past years I tried a lot of Lightroom plugins for publishing on several platforms, but it doesn’t work out for long, because all these platforms change their API almost every year (or are stamped) and the sparely maintained 3rd party plugins break.&lt;/p&gt;
&lt;p&gt;My workflow for quite some time is to publish my photos on the hard drive, in a folder, which is synced via Dropbox with the cloud. From there I distribute them further.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Photo-Editing" scheme="https://kiko.io/categories/Photo-Editing/"/>
    
    
      <category term="Lightroom" scheme="https://kiko.io/tags/Lightroom/"/>
    
      <category term="Publishing" scheme="https://kiko.io/tags/Publishing/"/>
    
      <category term="Plugin" scheme="https://kiko.io/tags/Plugin/"/>
    
  </entry>
  
  <entry>
    <title>Discoveries #4</title>
    <link href="https://kiko.io/categories/Discoveries/Discoveries-4/"/>
    <id>https://kiko.io/categories/Discoveries/Discoveries-4/</id>
    <published>2020-10-10T13:27:47.000Z</published>
    <updated>2021-01-03T10:52:22.522Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;It is so amazing how many cool stuff developers around the world are producing these days. Or they do what they always do, but I have more time to read about their smart ideas and solutions. This month I have 8 pearls for you:&lt;/p&gt;

        &lt;ul class=&quot;simplelist&quot;&gt;
            &lt;li&gt;waitForElementTransition()&lt;/li&gt;&lt;li&gt;Using Flexbox and text ellipsis together&lt;/li&gt;&lt;li&gt;Using Trello as a Super Simple CMS&lt;/li&gt;&lt;li&gt;Memorize Scroll Position Across Page Loads&lt;/li&gt;&lt;li&gt;A free guide to HTML5 &amp;lt;head&amp;gt; elements&lt;/li&gt;&lt;li&gt;BVSelect - Vanilla JS&lt;/li&gt;&lt;li&gt;A clock that represents the time as hex color values&lt;/li&gt;&lt;li&gt;Animate.css - Just-add-water CSS animations&lt;/li&gt;
        &lt;/ul&gt;
        &lt;ul class=&quot;anchorlist&quot; style=&quot;display:none;&quot;&gt;
            &lt;li&gt;&lt;a href=&quot;#waitForElementTransition&quot;&gt;waitForElementTransition()&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#flexbox-and-ellipsis&quot;&gt;Using Flexbox and text ellipsis together&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#using-trello-as-cms&quot;&gt;Using Trello as a Super Simple CMS&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#memorize-scroll-position&quot;&gt;Memorize Scroll Position Across Page Loads&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#head-dev&quot;&gt;A free guide to HTML5 &amp;lt;head&amp;gt; elements&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#bv-select&quot;&gt;BVSelect - Vanilla JS&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#hex-time&quot;&gt;A clock that represents the time as hex color values&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;#animate-css&quot;&gt;Animate.css - Just-add-water CSS animations&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
    
    </summary>
    
    
      <category term="Discoveries" scheme="https://kiko.io/categories/Discoveries/"/>
    
    
      <category term="Great Finds" scheme="https://kiko.io/tags/Great-Finds/"/>
    
  </entry>
  
  <entry>
    <title>Implement source switch for SPA</title>
    <link href="https://kiko.io/categories/JavaScript/Implement-source-switch-for-SPA/"/>
    <id>https://kiko.io/categories/JavaScript/Implement-source-switch-for-SPA/</id>
    <published>2020-10-04T15:01:02.000Z</published>
    <updated>2021-01-04T14:23:46.905Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;A while ago I wrote a Single Page Application (SPA) with jQuery and and decided to use some useful plugins to avoid reinventing the wheel. To keep the delivered sources small, I used the bundler &lt;a href=&quot;https://gulpjs.com/&quot;&gt;Gulp&lt;/a&gt;, to pack all JS plugins in a single file and another one for my custom JS code. I used the same procedure with the CSS files.&lt;/p&gt;
&lt;p&gt;The SPA contained only a single HTML file in which all bundeled sources and needed HTML template blocks were included, in order to load most of the stuff while starting the app, when the users sees a GMail-like  loading screen.&lt;/p&gt;
&lt;p&gt;But the whole thing had one disadvantage: Debugging for example in Chrome Dev Tool is not a joy, if the code is packed with &lt;a href=&quot;https://www.npmjs.com/package/gulp-concat&quot;&gt;Gulp Concat&lt;/a&gt; and &lt;a href=&quot;https://www.npmjs.com/package/gulp-concat&quot;&gt;Gulp Uglify&lt;/a&gt;. It would be much more convenient, if the source loading can be done depending on the environment.&lt;/p&gt;
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://kiko.io/categories/JavaScript/"/>
    
    
      <category term="SPA" scheme="https://kiko.io/tags/SPA/"/>
    
      <category term="Bundling" scheme="https://kiko.io/tags/Bundling/"/>
    
  </entry>
  
  <entry>
    <title>Show related posts in Hexo</title>
    <link href="https://kiko.io/categories/Tools/Show-related-posts-in-Hexo/"/>
    <id>https://kiko.io/categories/Tools/Show-related-posts-in-Hexo/</id>
    <published>2020-10-03T11:17:03.000Z</published>
    <updated>2021-01-04T14:23:46.904Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;It is always nice to point the readers of your blog’s articles to related posts, they might be interested in. They stay a little longer to understand what you have to offer and increases the likelihood that they become loyal readers, followers or subscribers. Related posts has become a standard on delivering news and posts.&lt;/p&gt;
&lt;p&gt;In the default Hexo theme &lt;strong&gt;Landscape&lt;/strong&gt;, on which this blog is based, there is no such function built in, but as the Hexo community is very busy, there are some plugins you can use.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Tools" scheme="https://kiko.io/categories/Tools/"/>
    
    
      <category term="Hexo" scheme="https://kiko.io/tags/Hexo/"/>
    
      <category term="Blogging" scheme="https://kiko.io/tags/Blogging/"/>
    
  </entry>
  
</feed>
