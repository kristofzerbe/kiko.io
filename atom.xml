<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://kiko.io/</id>
    <title>kiko.io</title>
    <subtitle>Memorable Tech Stuff</subtitle>
    <icon>images/favicon-32x32.png</icon>
    <logo>images/icon-72x72.png</logo>
    <link href="https://kiko.io" />
    <link href="https://kiko.io/atom.xml" rel="self" type="application/rss+xml" />
    <updated>2023-06-27T05:26:21.000Z</updated>
    <author>
        <name>Kristof Zerbe</name>
        <email>kristof.zerbe@gmail.com</email>
    </author>
    <generator uri="https://hexo.io/">Hexo</generator>
    <category term="Misc" scheme="https://kiko.io/categories/Misc/" />
    <category term="Tools" scheme="https://kiko.io/categories/Tools/" />
    <category term="JavaScript" scheme="https://kiko.io/categories/JavaScript/" />
    <category term="SQL" scheme="https://kiko.io/categories/SQL/" />
    <category term="Photo-Editing" scheme="https://kiko.io/categories/Photo-Editing/" />
    <category term="UI/UX" scheme="https://kiko.io/categories/UI-UX/" />
    <category term=".NET" scheme="https://kiko.io/categories/NET/" />
    <category term="Browser" scheme="https://kiko.io/tags/Browser/" />
    <category term="VS Code" scheme="https://kiko.io/tags/VS-Code/" />
    <category term="Hexo" scheme="https://kiko.io/tags/Hexo/" />
    <category term="GitHub" scheme="https://kiko.io/tags/GitHub/" />
    <category term="Blogging" scheme="https://kiko.io/tags/Blogging/" />
    <category term="jQuery" scheme="https://kiko.io/tags/jQuery/" />
    <category term="CSS" scheme="https://kiko.io/tags/CSS/" />
    <category term="Stylus" scheme="https://kiko.io/tags/Stylus/" />
    <category term="Dark Mode" scheme="https://kiko.io/tags/Dark-Mode/" />
    <category term="ADSI" scheme="https://kiko.io/tags/ADSI/" />
    <category term="Visual Studio" scheme="https://kiko.io/tags/Visual-Studio/" />
    <category term="Database Project" scheme="https://kiko.io/tags/Database-Project/" />
    <category term="Error" scheme="https://kiko.io/tags/Error/" />
    <category term="Trello" scheme="https://kiko.io/tags/Trello/" />
    <category term="MediaQuery" scheme="https://kiko.io/tags/MediaQuery/" />
    <category term="Collection" scheme="https://kiko.io/tags/Collection/" />
    <category term="Tutorial" scheme="https://kiko.io/tags/Tutorial/" />
    <category term="Windows" scheme="https://kiko.io/tags/Windows/" />
    <category term="Audio" scheme="https://kiko.io/tags/Audio/" />
    <category term="Lightroom" scheme="https://kiko.io/tags/Lightroom/" />
    <category term="Publishing" scheme="https://kiko.io/tags/Publishing/" />
    <category term="Plugin" scheme="https://kiko.io/tags/Plugin/" />
    <category term="SPA" scheme="https://kiko.io/tags/SPA/" />
    <category term="Bundling" scheme="https://kiko.io/tags/Bundling/" />
    <category term="Presets" scheme="https://kiko.io/tags/Presets/" />
    <category term="Resource" scheme="https://kiko.io/tags/Resource/" />
    <category term="Localization" scheme="https://kiko.io/tags/Localization/" />
    <category term="Versioning" scheme="https://kiko.io/tags/Versioning/" />
    <category term="T4" scheme="https://kiko.io/tags/T4/" />
    <category term="Share" scheme="https://kiko.io/tags/Share/" />
    <category term="TFS/DevOps" scheme="https://kiko.io/tags/TFS-DevOps/" />
    <category term="Android" scheme="https://kiko.io/tags/Android/" />
    <category term="Imaging" scheme="https://kiko.io/tags/Imaging/" />
    <category term="PWA" scheme="https://kiko.io/tags/PWA/" />
    <category term="DOM" scheme="https://kiko.io/tags/DOM/" />
    <category term="WebAPI" scheme="https://kiko.io/tags/WebAPI/" />
    <category term="Authentication" scheme="https://kiko.io/tags/Authentication/" />
    <category term="ES6" scheme="https://kiko.io/tags/ES6/" />
    <category term="Events" scheme="https://kiko.io/tags/Events/" />
    <category term="Templating" scheme="https://kiko.io/tags/Templating/" />
    <category term="Node.js" scheme="https://kiko.io/tags/Node-js/" />
    <category term="Workflow" scheme="https://kiko.io/tags/Workflow/" />
    <category term="Debugging" scheme="https://kiko.io/tags/Debugging/" />
    <category term="SVG" scheme="https://kiko.io/tags/SVG/" />
    <category term="Theming" scheme="https://kiko.io/tags/Theming/" />
    <category term="PowerShell" scheme="https://kiko.io/tags/PowerShell/" />
    <category term="Mail" scheme="https://kiko.io/tags/Mail/" />
    <category term="Font" scheme="https://kiko.io/tags/Font/" />
    <category term="UI" scheme="https://kiko.io/tags/UI/" />
    <category term="Hosting" scheme="https://kiko.io/tags/Hosting/" />
    <category term="Remote" scheme="https://kiko.io/tags/Remote/" />
    <category term="Social Media" scheme="https://kiko.io/tags/Social-Media/" />
    <category term="Office" scheme="https://kiko.io/tags/Office/" />
    <category term="Logging" scheme="https://kiko.io/tags/Logging/" />
    <category term="C#" scheme="https://kiko.io/tags/C/" />
    <category term="Mastodon" scheme="https://kiko.io/tags/Mastodon/" />
    <category term="Rant" scheme="https://kiko.io/tags/Rant/" />
    <category term="Search" scheme="https://kiko.io/tags/Search/" />
    <category term="JSON-LD" scheme="https://kiko.io/tags/JSON-LD/" />
    <category term="Meta" scheme="https://kiko.io/tags/Meta/" />
    <entry>
        <id>https://kiko.io/post/Include-and-provide-JSON-data-in-Hexo-EJS-Templates/</id>
        <title>Include and provide JSON data in Hexo EJS Templates</title>
        <published>2023-06-27T05:26:21.000Z</published>
        <updated>2023-06-27T05:26:21.000Z</updated>
        <link href="https://kiko.io/post/Include-and-provide-JSON-data-in-Hexo-EJS-Templates/"/>
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Include-and-provide-JSON-data-in-Hexo-EJS-Templates.thumb.png" height="1200" width="630" />
        <content type="html">
            
            
            &lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Include-and-provide-JSON-data-in-Hexo-EJS-Templates.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;The three main components of a standard installation of the Static Site Generator &lt;a href=&#34;https://hexo.io/&#34;&gt;Hexo&lt;/a&gt; are the template system &lt;a href=&#34;https://ejs.co/&#34;&gt;EJS (Embedded JavaScript Templating)&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Markdown&#34;&gt;Markdown&lt;/a&gt; for the content and &lt;a href=&#34;https://stylus-lang.com/&#34;&gt;Stylus&lt;/a&gt; for the styles.&lt;/p&gt;
&lt;p&gt;In the template files are the three main tags for driving content:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Scriptlet tag for control flow (no output)&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ... my JavaScript code to process data into the template&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Output a value as escaped HTML&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%= myVariable %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Output of a raw value, usually in the form of a JavaScript function&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%- myFunction() %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://hexo.io/docs/helpers&#34;&gt;Hexo’s helper system&lt;/a&gt; is based on the latter. So you can include a JavaScript file in your template that makes use of the &lt;a href=&#34;https://hexo.io/docs/helpers#js&#34;&gt;&lt;strong&gt;JS Helper&lt;/strong&gt;&lt;/a&gt; in &lt;code&gt;node_modules\hexo\lib\plugins\helper\js.js&lt;/code&gt; as follows …&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%- &lt;span class=&#34;title function_&#34;&gt;js&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;/js/dist/myFancyFunctions.js&amp;#x27;&lt;/span&gt;) %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;… which will be rendered to:&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;/js/dist//js/dist/qr-code-styling.js&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h2 id=&#34;The-Problem&#34;&gt;&lt;a href=&#34;#The-Problem&#34; class=&#34;headerlink&#34; title=&#34;The Problem&#34;&gt;&lt;/a&gt;The Problem&lt;/h2&gt;&lt;p&gt;So far and short, so good … but I recently tried to use this way to include a JSON file whose data one of my scripts needed as startup options and I noticed that the above mentioned JS helper unfortunately takes care of the possibly missing file extension &lt;code&gt;js&lt;/code&gt;. It doesn’t matter if you only pass the path to the file as a string or if all necessary attributes as an object.&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%- &lt;span class=&#34;title function_&#34;&gt;js&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;js/dist/script-options.json&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;application/json&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;) %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;This code leads to the following wrong code …&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;/js/dist//js/dist/qr-code-styling.json.js&amp;quot;&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;       &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;application/json&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h2 id=&#34;The-JSON-Helper&#34;&gt;&lt;a href=&#34;#The-JSON-Helper&#34; class=&#34;headerlink&#34; title=&#34;The JSON Helper&#34;&gt;&lt;/a&gt;The JSON Helper&lt;/h2&gt;&lt;p&gt;Since Hexo’s developers went a bit over my&amp;#x2F;the target with the helper’s functionality, I had to build my own JSON helper, which is actually just a slightly customized copy of the original:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;themes\landscape\scripts\json-helper.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &amp;#123; htmlTag, url_for &amp;#125; = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;hexo-util&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo.&lt;span class=&#34;property&#34;&gt;extend&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;helper&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;register&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;json&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;...args&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; result = &lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  args.&lt;span class=&#34;title function_&#34;&gt;flat&lt;/span&gt;(&lt;span class=&#34;title class_&#34;&gt;Infinity&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;forEach&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;item&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;typeof&lt;/span&gt; item === &lt;span class=&#34;string&#34;&gt;&amp;#x27;string&amp;#x27;&lt;/span&gt; || item &lt;span class=&#34;keyword&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;String&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// args = String only&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; path = item;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!path.&lt;span class=&#34;title function_&#34;&gt;endsWith&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;.json&amp;#x27;&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        path += &lt;span class=&#34;string&#34;&gt;&amp;#x27;.json&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      result += &lt;span class=&#34;string&#34;&gt;`&amp;lt;script src=&amp;quot;&lt;span class=&#34;subst&#34;&gt;$&amp;#123;url_for.call(&lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;, path)&amp;#125;&lt;/span&gt;&amp;quot; type=&amp;quot;application/json&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;\n`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// args = Object -&amp;gt; Custom Attributes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      item.&lt;span class=&#34;property&#34;&gt;src&lt;/span&gt; = url_for.&lt;span class=&#34;title function_&#34;&gt;call&lt;/span&gt;(&lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;, item.&lt;span class=&#34;property&#34;&gt;src&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      item.&lt;span class=&#34;property&#34;&gt;type&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;quot;application/json&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!item.&lt;span class=&#34;property&#34;&gt;src&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;endsWith&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;.json&amp;#x27;&lt;/span&gt;)) item.&lt;span class=&#34;property&#34;&gt;src&lt;/span&gt; += &lt;span class=&#34;string&#34;&gt;&amp;#x27;.json&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      result += &lt;span class=&#34;title function_&#34;&gt;htmlTag&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;script&amp;#x27;&lt;/span&gt;, &amp;#123; ...item &amp;#125;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;) + &lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;You can find the complete file &lt;a href=&#34;https://github.com/kristofzerbe/kiko.io/blob/master/themes/landscape/scripts/json-helper.js&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With this its possible to reference the JSON like this:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%- &lt;span class=&#34;title function_&#34;&gt;json&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;js/dist/myOptions.json&amp;#x27;&lt;/span&gt;) %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h2 id=&#34;Bring-JSON-data-to-life&#34;&gt;&lt;a href=&#34;#Bring-JSON-data-to-life&#34; class=&#34;headerlink&#34; title=&#34;Bring JSON data to life&#34;&gt;&lt;/a&gt;Bring JSON data to life&lt;/h2&gt;&lt;p&gt;However, the helper only allowed me to load the file as such. What was still missing was the loading of the data in the JavaScript of the page itself. The easiest way to achieve that, was to perform a FETCH of the already referenced and loaded file in the SCRIPT block of the template as an immediately invoked async function:&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption&gt;&lt;span&gt;EJS File&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%- js(&amp;#x27;js/dist/myFancyObjectLibrary.js&amp;#x27;) %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%- json(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  src: &amp;#x27;js/dist/myOptions.json&amp;#x27;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  id: &amp;#x27;my-options&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;) %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt; (&lt;span class=&#34;keyword&#34;&gt;async&lt;/span&gt; () =&amp;gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; response = &lt;span class=&#34;keyword&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;fetch&lt;/span&gt;(&lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;getElementById&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;my-options&amp;#x27;&lt;/span&gt;).&lt;span class=&#34;property&#34;&gt;src&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; options = &lt;span class=&#34;keyword&#34;&gt;await&lt;/span&gt; response.&lt;span class=&#34;title function_&#34;&gt;json&lt;/span&gt;();    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; obj = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;myFancyObject&lt;/span&gt;(options);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//... do something with the initialized object&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &amp;#125;)();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Et voilà … Job done.&lt;/p&gt;

        </content>
        <category term="JavaScript" scheme="https://kiko.io/categories/JavaScript/" />
        <category term="Hexo" scheme="https://kiko.io/tags/Hexo/" />
        <category term="Templating" scheme="https://kiko.io/tags/Templating/" />
    </entry>
    <entry>
        <id>https://kiko.io/post/Show-pages-meta-data-JSON-LD-in-Bottom-Sheet/</id>
        <title>Show pages meta data (JSON-LD) in Bottom Sheet</title>
        <published>2023-06-11T12:11:45.000Z</published>
        <updated>2023-06-11T12:11:45.000Z</updated>
        <link href="https://kiko.io/post/Show-pages-meta-data-JSON-LD-in-Bottom-Sheet/"/>
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Show-pages-meta-data-JSON-LD-in-Bottom-Sheet.thumb.png" height="1200" width="630" />
        <content type="html">
            
            
            &lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Show-pages-meta-data-JSON-LD-in-Bottom-Sheet.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;A few months ago I introduced new meta data (JSON-LD) for the pages of this blog and also &lt;a href=&#34;/post/Provide-Blog-Metadata-via-JSON-LD/&#34; title=&#34;Provide Blog Metadata via JSON-LD&#34;&gt;wrote about my implementation&lt;/a&gt;. Works also everything quite well … only the verification of the generated data was a bit cumbersome:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open DevTools for a page in Chrome.&lt;/li&gt;
&lt;li&gt;Search in the HEAD of the source code for the included script (“application&amp;#x2F;ld+json”)&lt;/li&gt;
&lt;li&gt;Copy out JSON-LD code&lt;/li&gt;
&lt;li&gt;Format JSON into VS code … and check&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Nothing for now and simply impossible on the smartphone, even if there would be a reasonable Chrome extension for displaying JSON-LD data, but it does not exist (yet). Another problem was that I use automatically generated Socal Media images for my articles, which are included in the JSON-LD, but do not appear anywhere in the page and thus were beyond my control. I simply wanted to display all the generated stuff.&lt;/p&gt;
&lt;p&gt;Since I’ve been a fan of the so-called bottom sheets since the first version of Google’s Material Design, I imagined a script that grabs the code embedded in the page and pushes a panel with all the data visualized there into the page from the bottom … and the whole act was easier than I thought.&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;hr&gt;
&lt;h2 id=&#34;The-Bottom-Sheet-Component&#34;&gt;&lt;a href=&#34;#The-Bottom-Sheet-Component&#34; class=&#34;headerlink&#34; title=&#34;The Bottom Sheet Component&#34;&gt;&lt;/a&gt;The Bottom Sheet Component&lt;/h2&gt;&lt;p&gt;Recently I stumbled across a small but nice bottom sheet script that is based on jQuery but that I still use on this blog itself: &lt;a href=&#34;https://downuppopupjs.dincerali.com/&#34;&gt;&lt;strong&gt;downupPopup.js&lt;/strong&gt;&lt;/a&gt; by &lt;a href=&#34;https://dincerali.com/&#34;&gt;Ali Dinçer&lt;/a&gt;. It has several settings and is just about 5 KB in size, if you add the CSS code. What’s nice about it is, that all the animations that make such a component stand out, are based on said CSS and are not jQuery-driven.&lt;/p&gt;
&lt;p&gt;The bottom sheet is based on a base HTML element with a required child element:&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;myElement1&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;downupPopup-content&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Lorem ipsum dolor sit amet...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;This is first initialized with the desired settings, with the script adding the necessary inline styles, and then you can open and close it:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$(&lt;span class=&#34;string&#34;&gt;&amp;quot;#myElement1&amp;quot;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;downupPopup&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$(&lt;span class=&#34;string&#34;&gt;&amp;quot;#myElement1&amp;quot;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;downupPopup&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;open&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$(&lt;span class=&#34;string&#34;&gt;&amp;quot;#myElement1&amp;quot;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;downupPopup&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;close&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Now my solution should work on-the-fly and without a previously defined element in the HTML … and it should be reusable, because if I already include a bottom sheet component, then I wanted to use it for future occasions. For this I wrote myself a small manager that makes different uses possible with a single call.&lt;/p&gt;
&lt;p&gt;It has one function each for a specific bottom sheet dialog and beside it base variables and functions (&lt;code&gt;base&lt;/code&gt;) to keep the infrastructure code of the former as small as possible:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;dialog.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; dpDialog = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;#x27;base&amp;#x27;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;element&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;content&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;options&amp;#x27;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;animation&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;ease&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;duration&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;400&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;radiusLeft&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;6px&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;radiusRight&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;6px&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;width&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;100%&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;init&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;options&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; opt = &amp;#123;...dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;options&lt;/span&gt;, ...options&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ($(&lt;span class=&#34;string&#34;&gt;&amp;quot;#dpElement&amp;quot;&lt;/span&gt;).&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt; === &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// create new&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;element&lt;/span&gt; = $(&lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          &amp;lt;div id=&amp;quot;dpElement&amp;quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            &amp;lt;div class=&amp;quot;downupPopup-content&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          &amp;lt;/div&amp;gt;`&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;element&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;appendTo&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;body&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;content&lt;/span&gt; = dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;element&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;find&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;.downupPopup-content&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123; &lt;span class=&#34;comment&#34;&gt;// reset existing&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;element&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;downupPopup&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;close&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;content&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;empty&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;element&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;downupPopup&lt;/span&gt;(opt);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;show&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;setTimeout&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;element&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;downupPopup&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;open&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;#x27;myFirstTest&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// INIT DIALOG&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;init&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;headerText&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;Test&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;distance&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;75&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// ADD CONTENT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; content = &lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;      &amp;lt;section&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        &amp;lt;p&amp;gt;Lorem ipsum dolor sit amet...&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;      &amp;lt;/section&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    `&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    $(content).&lt;span class=&#34;title function_&#34;&gt;appendTo&lt;/span&gt;(dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;content&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// OPEN DIALOG&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;show&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;#x27;pageMeta&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// INIT DIALOG&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;init&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;headerText&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;Page Meta&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;contentScroll&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;distance&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// ADD CONTENT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// ... appending stuff to dpDialog.base.content&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// OPEN DIALOG&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;show&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;dialog&lt;/span&gt; = dpDialog; &lt;span class=&#34;comment&#34;&gt;// make it globally available&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;The base &lt;code&gt;init&lt;/code&gt; function takes care of initializing the downupPopup component, including dynamically inserting the necessary HTML element and attaching the desired settings. &lt;code&gt;show&lt;/code&gt; opens up the dialog, with a small time delay, to ensure that the content has already been inserted.&lt;br&gt;Dialog functions in the example above are: &lt;code&gt;myFirstTest&lt;/code&gt; and &lt;code&gt;pageMeta&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Calling one of the dialog functions is simple:&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;href&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;javascript:dpDialog.myFirstTest()&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Open Test Dialog&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Try here: &lt;a href=&#34;javascript:dpDialog.myFirstTest()&#34;&gt;Open Test Dialog&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;Problem-with-the-original-implementation-solved&#34;&gt;&lt;a href=&#34;#Problem-with-the-original-implementation-solved&#34; class=&#34;headerlink&#34; title=&#34;Problem with the original implementation solved&#34;&gt;&lt;/a&gt;Problem with the original implementation solved&lt;/h3&gt;&lt;p&gt;Ali decided in his original implementation to apply the given settings only once to a popup element. Once initialized, it could not be reused with different settings. To avoid having to destroy an existing element before initializing a new one, which would have caused a massive timing problem due to the animation, I decided to fork his code and give him a &lt;a href=&#34;https://github.com/ali-dincer/downupPopup.js/pull/2&#34;&gt;pull request&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Du findest mein Script hier, solange Ali den PR nicht in seinen Code übernommen hat: &lt;a href=&#34;https://github.com/kristofzerbe/downupPopup.js&#34;&gt;kristofzerbe&amp;#x2F;downupPopup.js&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;The-PageMeta-Dialog&#34;&gt;&lt;a href=&#34;#The-PageMeta-Dialog&#34; class=&#34;headerlink&#34; title=&#34;The PageMeta Dialog&#34;&gt;&lt;/a&gt;The PageMeta Dialog&lt;/h2&gt;&lt;p&gt;Now that I had my desired display option, it was time to bring the &lt;code&gt;pageMeta&lt;/code&gt; dialog function to life.&lt;/p&gt;
&lt;p&gt;My first thought was to use a JSON-LD parser in JavaScript provided by &lt;a href=&#34;https://json-ld.org/&#34;&gt;&lt;strong&gt;json-ld.org&lt;/strong&gt;&lt;/a&gt;, but this is not even quickly usable, since it validates the code to be parsed at runtime against schema.org and every of my calls failed with CORS warnings. Now I didn’t want to turn this into a PhD thesis, I just wanted to display my highly customized JSON-LD, so I worked out the function quite individually.&lt;/p&gt;
&lt;h3 id=&#34;The-Code-Itself&#34;&gt;&lt;a href=&#34;#The-Code-Itself&#34; class=&#34;headerlink&#34; title=&#34;The Code Itself&#34;&gt;&lt;/a&gt;The Code Itself&lt;/h3&gt;&lt;p&gt;I wanted to show two things in the dialog: the code itself and a visual representation of it for a better overview.&lt;/p&gt;
&lt;p&gt;Getting the content for the code was really straight forward:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;dialog.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;#x27;pageMeta&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// INIT DIALOG&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;init&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;headerText&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;Page Meta&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;contentScroll&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;distance&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// ADD CONTENT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Grab the JSON-LD code from the page&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; json = &lt;span class=&#34;title class_&#34;&gt;JSON&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;parse&lt;/span&gt;($(&lt;span class=&#34;string&#34;&gt;&amp;#x27;script[type=&amp;quot;application/ld+json&amp;quot;]&amp;#x27;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;text&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Create new dialog section for the code&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; secCode = $(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;lt;section&amp;gt;&amp;lt;/section&amp;gt;&amp;#x27;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;appendTo&lt;/span&gt;(dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;content&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Append header&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    secCode.&lt;span class=&#34;title function_&#34;&gt;append&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;lt;h1&amp;gt;JSON-LD&amp;lt;/h1&amp;gt;&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Append formatted code als PRE element&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    secCode.&lt;span class=&#34;title function_&#34;&gt;append&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;lt;pre class=&amp;quot;json&amp;quot;&amp;gt;&amp;#x27;&lt;/span&gt; + &lt;span class=&#34;title function_&#34;&gt;syntaxHighlight&lt;/span&gt;(&lt;span class=&#34;title class_&#34;&gt;JSON&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;stringify&lt;/span&gt;(json, &lt;span class=&#34;literal&#34;&gt;undefined&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;))) + &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;lt;/pre&amp;gt;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// OPEN DIALOG&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;show&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Since I had taken care to compress my JSON-LD code to save space, I now needed to get it back into a readable format. Time saver was the following script, which I found on &lt;a href=&#34;https://stackoverflow.com/questions/4810841/pretty-print-json-using-javascript&#34;&gt;StackOverflow (pretty-print JSON using JavaScript)&lt;/a&gt;:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;syntaxHighlight&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;json&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  json = json.&lt;span class=&#34;title function_&#34;&gt;replace&lt;/span&gt;(&lt;span class=&#34;regexp&#34;&gt;/&amp;amp;/g&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;amp;amp;&amp;#x27;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;replace&lt;/span&gt;(&lt;span class=&#34;regexp&#34;&gt;/&amp;lt;/g&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;amp;lt;&amp;#x27;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;replace&lt;/span&gt;(&lt;span class=&#34;regexp&#34;&gt;/&amp;gt;/g&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;amp;gt;&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; json.&lt;span class=&#34;title function_&#34;&gt;replace&lt;/span&gt;(&lt;span class=&#34;regexp&#34;&gt;/(&amp;quot;(\\u[a-zA-Z0-9]&amp;#123;4&amp;#125;|\\[^u]|[^\\&amp;quot;])*&amp;quot;(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;match&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; cls = &lt;span class=&#34;string&#34;&gt;&amp;#x27;number&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;regexp&#34;&gt;/^&amp;quot;/&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;test&lt;/span&gt;(match)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;regexp&#34;&gt;/:$/&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;test&lt;/span&gt;(match)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              cls = &lt;span class=&#34;string&#34;&gt;&amp;#x27;key&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              cls = &lt;span class=&#34;string&#34;&gt;&amp;#x27;string&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;regexp&#34;&gt;/true|false/&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;test&lt;/span&gt;(match)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          cls = &lt;span class=&#34;string&#34;&gt;&amp;#x27;boolean&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;regexp&#34;&gt;/null/&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;test&lt;/span&gt;(match)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          cls = &lt;span class=&#34;string&#34;&gt;&amp;#x27;null&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;lt;span class=&amp;quot;&amp;#x27;&lt;/span&gt; + cls + &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;quot;&amp;gt;&amp;#x27;&lt;/span&gt; + match + &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;lt;/span&amp;gt;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption&gt;&lt;span&gt;(Stylus format)&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pre&lt;span class=&#34;selector-class&#34;&gt;.json&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;font-family&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;Roboto Mono&amp;#x27;&lt;/span&gt;,monospace&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  font-size: &lt;span class=&#34;number&#34;&gt;13px&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  .string &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    color: &lt;span class=&#34;number&#34;&gt;#4271ae&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  .number &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    color: &lt;span class=&#34;number&#34;&gt;#4271ae&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  .boolean &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    color: &lt;span class=&#34;number&#34;&gt;#4271ae&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  .null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    color: &lt;span class=&#34;number&#34;&gt;#ababab&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  .key&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    color: &lt;span class=&#34;number&#34;&gt;#c15353&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;h3 id=&#34;The-Visual-Representation&#34;&gt;&lt;a href=&#34;#The-Visual-Representation&#34; class=&#34;headerlink&#34; title=&#34;The Visual Representation&#34;&gt;&lt;/a&gt;The Visual Representation&lt;/h3&gt;&lt;p&gt;My JSON-LD is hierarchically structured. Each page always has a &lt;code&gt;PERSON&lt;/code&gt; block for information about me as a person, then an &lt;code&gt;ORGANIZATION&lt;/code&gt; block about the “people” behind the blog (just me), then a &lt;code&gt;WEBSITE&lt;/code&gt; block for the description of the website itself and a &lt;code&gt;WEBPAGE&lt;/code&gt; block for a single page. Article pages like this, also have an &lt;code&gt;ARTICLE&lt;/code&gt; block and the note pages have a &lt;code&gt;BLOGPOSTING&lt;/code&gt; block.&lt;/p&gt;
&lt;p&gt;Therefore, it seemed logical to me to display the blocks as an accordion using the DETAILS element, with only the first one open at startup.&lt;/p&gt;
&lt;p&gt;To process the required HTML, I wrote a helper function for each block that returns a string literal template to which the calling code passes the necessary data.&lt;/p&gt;
&lt;p&gt;To save space, only one block is included in the example below. The others work similarly. &lt;/p&gt;

    &lt;div class=&#34;alertbox alertbox-info&#34;&gt;
      &lt;p&gt;You can see the complete code here and modify it for your purposes: &lt;a href=&#34;https://github.com/kristofzerbe/kiko.io/blob/master/themes/landscape/source/js/dialog.js&#34;&gt;&lt;strong&gt;dialog.js&lt;/strong&gt; of the blog kiko.io&lt;/a&gt;.&lt;/p&gt;

    &lt;/div&gt;
  

&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;dialog.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;#x27;pageMeta&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// INIT DIALOG&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;init&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;headerText&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;Page Meta&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;contentScroll&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;distance&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// ADD CONTENT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Grab the JSON-LD code from the page&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; json = &lt;span class=&#34;title class_&#34;&gt;JSON&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;parse&lt;/span&gt;($(&lt;span class=&#34;string&#34;&gt;&amp;#x27;script[type=&amp;quot;application/ld+json&amp;quot;]&amp;#x27;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;text&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Create new dialog section for the visual representation&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; secVisual = $(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;lt;section&amp;gt;&amp;lt;/section&amp;gt;&amp;#x27;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;appendTo&lt;/span&gt;(dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;content&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// ... other blocks for the visual representation &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Block WEBSITE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;getWebSite&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;website, organization&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        &amp;lt;details&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          &amp;lt;summary&amp;gt;WebSite&amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          &amp;lt;div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            &amp;lt;label&amp;gt;Name&amp;lt;/label&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            &amp;lt;p&amp;gt;&lt;span class=&#34;subst&#34;&gt;$&amp;#123;website.name&amp;#125;&lt;/span&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            &amp;lt;label&amp;gt;Description&amp;lt;/label&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            &amp;lt;p&amp;gt;&lt;span class=&#34;subst&#34;&gt;$&amp;#123;website.description&amp;#125;&lt;/span&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            &amp;lt;label&amp;gt;Language&amp;lt;/label&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            &amp;lt;p&amp;gt;&lt;span class=&#34;subst&#34;&gt;$&amp;#123;website.inLanguage&amp;#125;&lt;/span&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            &amp;lt;label&amp;gt;Publisher&amp;lt;/label&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            &amp;lt;p&amp;gt;&lt;span class=&#34;subst&#34;&gt;$&amp;#123;organization.name&amp;#125;&lt;/span&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        &amp;lt;/details&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;      `&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Get WebSite block from JSON&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; jWebSite = json[&lt;span class=&#34;string&#34;&gt;&amp;quot;@graph&amp;quot;&lt;/span&gt;].&lt;span class=&#34;title function_&#34;&gt;filter&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;x&lt;/span&gt; =&amp;gt;&lt;/span&gt; x[&lt;span class=&#34;string&#34;&gt;&amp;quot;@type&amp;quot;&lt;/span&gt;] === &lt;span class=&#34;string&#34;&gt;&amp;quot;WebSite&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Get referenced Publisher information (Organization)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; jPublisher = json[&lt;span class=&#34;string&#34;&gt;&amp;quot;@graph&amp;quot;&lt;/span&gt;].&lt;span class=&#34;title function_&#34;&gt;filter&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;x&lt;/span&gt; =&amp;gt;&lt;/span&gt; x[&lt;span class=&#34;string&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;] === jWebSite[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;].&lt;span class=&#34;property&#34;&gt;publisher&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Get filled HTML from template helper function above&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; tWebSite = &lt;span class=&#34;title function_&#34;&gt;getWebSite&lt;/span&gt;(jWebSite[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;], jPublisher[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Append HTML to content&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    secVisual.&lt;span class=&#34;title function_&#34;&gt;append&lt;/span&gt;($(tWebSite));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// ... other blocks for the visual representation &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// ... (Code stuff from above)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// OPEN DIALOG&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;show&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;Conclusion&#34;&gt;&lt;a href=&#34;#Conclusion&#34; class=&#34;headerlink&#34; title=&#34;Conclusion&#34;&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;&lt;p&gt;It was fun to add a new feature to the site, even more so because it helps me keep track of the meta data of each page myself.&lt;/p&gt;
&lt;p&gt;Here (or in the footer of each page) you can see the result:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;javascript:dpDialog.pageMeta();&#34;&gt;&lt;strong&gt;Open Page Meta for this article…&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;More-Information&#34;&gt;&lt;a href=&#34;#More-Information&#34; class=&#34;headerlink&#34; title=&#34;More Information&#34;&gt;&lt;/a&gt;More Information&lt;/h2&gt;
        &lt;ul class=&#34;moreinfo-list&#34;&gt;
            &lt;li&gt;Ali Dinçer: &lt;a href=&#34;https://downuppopupjs.dincerali.com/&#34;&gt;downupPopup.js&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Kristof Zerbe: &lt;a href=&#34;https://github.com/kristofzerbe/downupPopup.js&#34;&gt;Fork from downupPopup.js (Make Popup Reusable, with PR)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Google: &lt;a href=&#34;https://m3.material.io/components/bottom-sheets/overview&#34;&gt;Material Design 3 - Compontents, Bottom Sheets&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
    
        </content>
        <category term="UI/UX" scheme="https://kiko.io/categories/UI-UX/" />
        <category term="Publishing" scheme="https://kiko.io/tags/Publishing/" />
        <category term="JSON-LD" scheme="https://kiko.io/tags/JSON-LD/" />
        <category term="Meta" scheme="https://kiko.io/tags/Meta/" />
    </entry>
    <entry>
        <id>https://kiko.io/post/Top-10-Pens-of-Jon-Kantner/</id>
        <title>Top 10 Pens of Jon Kantner</title>
        <published>2023-05-08T13:34:15.000Z</published>
        <updated>2023-05-08T13:34:15.000Z</updated>
        <link href="https://kiko.io/post/Top-10-Pens-of-Jon-Kantner/"/>
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Top-10-Pens-of-Jon-Kantner.thumb.png" height="1200" width="630" />
        <content type="html">
            
            
            &lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Top-10-Pens-of-Jon-Kantner.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;A while ago I posted my &lt;a href=&#34;/post/Favourite-Pens-of-2022/&#34; title=&#34;Favourite Pens of 2022&#34;&gt;favourite pens of 2022&lt;/a&gt;. Many of them came from the pen of &lt;strong&gt;&lt;a href=&#34;https://jonkantner.com/&#34;&gt;John Kantner&lt;/a&gt;&lt;/strong&gt; and that was reason enough for me to highlight his most beautiful works in a post.&lt;/p&gt;
&lt;p&gt;My “Best of Jon Kantner” selection is focused on the usefulness for UI’s to be created, i.e. all these things I urgently need to try out or one or the other will end up in one of my projects. &lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;hr&gt;&lt;br&gt;

&lt;h2 id=&#34;1-Card-Like-Menu&#34;&gt;&lt;a href=&#34;#1-Card-Like-Menu&#34; class=&#34;headerlink&#34; title=&#34;1. Card-Like Menu&#34;&gt;&lt;/a&gt;1. Card-Like Menu&lt;/h2&gt;
    &lt;iframe height=&#34;760&#34; 
        id=&#34;codepen-poLOzKY&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/poLOzKY?height=760&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Card-Like Menu&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-Side-Navigation&#34;&gt;&lt;a href=&#34;#2-Side-Navigation&#34; class=&#34;headerlink&#34; title=&#34;2. Side Navigation&#34;&gt;&lt;/a&gt;2. Side Navigation&lt;/h2&gt;
    &lt;iframe height=&#34;600&#34; 
        id=&#34;codepen-abqwjEz&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/abqwjEz?height=600&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Side Navigation&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;/p&gt;
&lt;h2 id=&#34;3-Lotsa-Notifications&#34;&gt;&lt;a href=&#34;#3-Lotsa-Notifications&#34; class=&#34;headerlink&#34; title=&#34;3. Lotsa Notifications&#34;&gt;&lt;/a&gt;3. Lotsa Notifications&lt;/h2&gt;
    &lt;iframe height=&#34;420&#34; 
        id=&#34;codepen-XWzePgp&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/XWzePgp?height=420&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Lotsa Notifications&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;/p&gt;
&lt;h2 id=&#34;4-Search-Input-Caret-Jump&#34;&gt;&lt;a href=&#34;#4-Search-Input-Caret-Jump&#34; class=&#34;headerlink&#34; title=&#34;4. Search Input Caret Jump&#34;&gt;&lt;/a&gt;4. Search Input Caret Jump&lt;/h2&gt;
    &lt;iframe height=&#34;275&#34; 
        id=&#34;codepen-eYJboxN&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/eYJboxN?height=275&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Search Input Caret Jump&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;/p&gt;
&lt;h2 id=&#34;5-Sliding-Stepper&#34;&gt;&lt;a href=&#34;#5-Sliding-Stepper&#34; class=&#34;headerlink&#34; title=&#34;5. Sliding Stepper&#34;&gt;&lt;/a&gt;5. Sliding Stepper&lt;/h2&gt;
    &lt;iframe height=&#34;275&#34; 
        id=&#34;codepen-oNGzBmm&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/oNGzBmm?height=275&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Sliding Stepper&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;/p&gt;
&lt;h2 id=&#34;6-Passcode-With-Sliding-Cursor&#34;&gt;&lt;a href=&#34;#6-Passcode-With-Sliding-Cursor&#34; class=&#34;headerlink&#34; title=&#34;6. Passcode With Sliding Cursor&#34;&gt;&lt;/a&gt;6. Passcode With Sliding Cursor&lt;/h2&gt;
    &lt;iframe height=&#34;275&#34; 
        id=&#34;codepen-ZERPPda&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/ZERPPda?height=275&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Passcode With Sliding Cursor&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;/p&gt;
&lt;h2 id=&#34;7-Animated-Star-Rating&#34;&gt;&lt;a href=&#34;#7-Animated-Star-Rating&#34; class=&#34;headerlink&#34; title=&#34;7. Animated Star Rating&#34;&gt;&lt;/a&gt;7. Animated Star Rating&lt;/h2&gt;
    &lt;iframe height=&#34;400&#34; 
        id=&#34;codepen-BarvVNa&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/BarvVNa?height=400&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Animated Star Rating&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;/p&gt;
&lt;h2 id=&#34;8-Range-Sliders-With-a-Rolling-Counter&#34;&gt;&lt;a href=&#34;#8-Range-Sliders-With-a-Rolling-Counter&#34; class=&#34;headerlink&#34; title=&#34;8. Range Sliders With a Rolling Counter&#34;&gt;&lt;/a&gt;8. Range Sliders With a Rolling Counter&lt;/h2&gt;
    &lt;iframe height=&#34;400&#34; 
        id=&#34;codepen-yLYZwjY&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/yLYZwjY?height=400&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Range Sliders With a Rolling Counter&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;/p&gt;
&lt;h2 id=&#34;9-Colorful-Theme-Switch&#34;&gt;&lt;a href=&#34;#9-Colorful-Theme-Switch&#34; class=&#34;headerlink&#34; title=&#34;9. Colorful Theme Switch&#34;&gt;&lt;/a&gt;9. Colorful Theme Switch&lt;/h2&gt;
    &lt;iframe height=&#34;275&#34; 
        id=&#34;codepen-eYPYppR&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/eYPYppR?height=275&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Colorful Theme Switch&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;/p&gt;
&lt;h2 id=&#34;10-Animated-Upload-Modal&#34;&gt;&lt;a href=&#34;#10-Animated-Upload-Modal&#34; class=&#34;headerlink&#34; title=&#34;10. Animated Upload Modal&#34;&gt;&lt;/a&gt;10. Animated Upload Modal&lt;/h2&gt;
    &lt;iframe height=&#34;400&#34; 
        id=&#34;codepen-OJEoRwK&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/OJEoRwK?height=400&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Animated Upload Modal&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;/p&gt;
&lt;p&gt;As I said, this is the list of my personal favorite works by Jon. I can only recommend everyone to check out his work on &lt;a href=&#34;https://codepen.io/jkantner&#34;&gt;Codepen&lt;/a&gt;. He really is a UI rockstar …&lt;/p&gt;

        </content>
        <category term="UI/UX" scheme="https://kiko.io/categories/UI-UX/" />
        <category term="CSS" scheme="https://kiko.io/tags/CSS/" />
        <category term="Collection" scheme="https://kiko.io/tags/Collection/" />
        <category term="UI" scheme="https://kiko.io/tags/UI/" />
    </entry>
    <entry>
        <id>https://kiko.io/post/Discoveries-24-JavaScript-UI/</id>
        <title>Discoveries #24 - JavaScript &amp; UI</title>
        <published>2023-04-28T14:39:01.000Z</published>
        <updated>2023-04-28T14:39:01.000Z</updated>
        <link href="https://kiko.io/post/Discoveries-24-JavaScript-UI/"/>
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Discoveries-24-JavaScript-UI.thumb.png" height="1200" width="630" />
        <content type="html">
            
            
            &lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Discoveries-24-JavaScript-UI.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;I’m such a UI person. It’s a blast for me to discover and try out new interface components on the web and for the web. Simplicity and a tidy text desert is not my thing. Here are a few JavaScript UI gems I found the other day for you…&lt;/p&gt;

        &lt;ul class=&#34;anchorlist&#34;&gt;
            &lt;li data-anchor=&#34;#frontle-bottomsheet&#34;&gt;Frontle - BottomSheet&lt;/li&gt;&lt;li data-anchor=&#34;#downuppopup-js&#34;&gt;downupPopup.js&lt;/li&gt;&lt;li data-anchor=&#34;#pikaday&#34;&gt;Pikaday&lt;/li&gt;&lt;li data-anchor=&#34;#add-to-calendar-button&#34;&gt;Add to Calendar Button&lt;/li&gt;&lt;li data-anchor=&#34;#tippy-js&#34;&gt;Tippy.js&lt;/li&gt;&lt;li data-anchor=&#34;#responsive-full-page-scroll&#34;&gt;Responsive Full Page Scroll&lt;/li&gt;&lt;li data-anchor=&#34;#lucafalasco-scroll-snap&#34;&gt;lucafalasco/scroll-snap&lt;/li&gt;&lt;li data-anchor=&#34;#bgzy-js&#34;&gt;Bgzy.js&lt;/li&gt;&lt;li data-anchor=&#34;#scrollyvideo-js&#34;&gt;ScrollyVideo.js&lt;/li&gt;&lt;li data-anchor=&#34;#cal-heatmap&#34;&gt;Cal-Heatmap&lt;/li&gt;
        &lt;/ul&gt;
    

&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;


    &lt;hr id=&#34;frontle-bottomsheet&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Frontle - BottomSheet
    &lt;/h2&gt;
    &lt;small&gt;by Frontl (HyeongJun Yun)&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://github.com/Frontle-Foundation/BottomSheet&#34;&gt;https://github.com/Frontle-Foundation/BottomSheet&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;BottomSheet is part of the &lt;a href=&#34;https://frontle.org/&#34; title=&#34;‌&#34;&gt;Frontl&lt;/a&gt; multi-platform SPA framework from South Korea and is a vanilla JavaScript implementation of the Android Bottom Sheet to show options or settings. Very neat and useful for Web Apps.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://github.com/Frontle-Foundation/BottomSheet&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;frontle-bottomsheet.png&#34; alt=&#34;Frontle - BottomSheet&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;downuppopup-js&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      downupPopup.js
    &lt;/h2&gt;
    &lt;small&gt;by Ali Dinçer&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://github.com/ali-dincer/downupPopup.js&#34;&gt;https://github.com/ali-dincer/downupPopup.js&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;&lt;a href=&#34;https://dincerali.com/&#34; title=&#34;‌&#34;&gt;Ali’s&lt;/a&gt; downupPopup is a wonderful UI element for replacing boring dialogs or showing additional information in a sliding panel, similar to the the previous BottomSheet. It masters HTML, forms and can be shown with a duration and full screen.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://github.com/ali-dincer/downupPopup.js&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;downuppopup-js.png&#34; alt=&#34;downupPopup.js&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;pikaday&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Pikaday
    &lt;/h2&gt;
    &lt;small&gt;by David Bushell and Ramiro Rikkert&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://github.com/Pikaday/Pikaday&#34;&gt;https://github.com/Pikaday/Pikaday&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;This date picker is not the fanciest one, but it is very lightweight, has no dependencies and is written in plain JavaScript. The ease of use and the ability to style it however you want, makes it a great little thing.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://github.com/Pikaday/Pikaday&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;pikaday.png&#34; alt=&#34;Pikaday&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;add-to-calendar-button&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Add to Calendar Button
    &lt;/h2&gt;
    &lt;small&gt;by Jens Kürschner&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://add-to-calendar-button.com/&#34;&gt;https://add-to-calendar-button.com/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Letting the user select a date is just the first part of a process when it comes to making appointments. In the second part, the appointment must be added to the user&amp;#39;s own calendar. This button makes it very easy in terms of Outlook, Google Calendar, Yahoo or as an ICS file.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://add-to-calendar-button.com/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;add-to-calendar-button.png&#34; alt=&#34;Add to Calendar Button&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;tippy-js&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Tippy.js
    &lt;/h2&gt;
    &lt;small&gt;by James, somewhere from Australia&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://atomiks.github.io/tippyjs/&#34;&gt;https://atomiks.github.io/tippyjs/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Tooltip libraries really exist a lot. But Tiffy, a side project of Floating UI (now &lt;a href=&#34;https://popper.js.org/&#34; title=&#34;‌&#34;&gt;Popper&lt;/a&gt;), offers so many possibilities that I replace existing ones with it. Animations, Themes, Add-Ons, Plugins, and much more. Even SVG&amp;#39;s are supported. Awesome!&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://atomiks.github.io/tippyjs/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;tippy-js.png&#34; alt=&#34;Tippy.js&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;responsive-full-page-scroll&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Responsive Full Page Scroll
    &lt;/h2&gt;
    &lt;small&gt;by Fabian Graßl&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://github.com/fabeat/responsive-fullpage-scroll&#34;&gt;https://github.com/fabeat/responsive-fullpage-scroll&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;If you throw this library on a bit of HTML you get a wonderful a full screen scrolling page that can be activated and deactivated using a media query. Perfect for marketing pages or photo slideshows.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://github.com/fabeat/responsive-fullpage-scroll&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;responsive-full-page-scroll.png&#34; alt=&#34;Responsive Full Page Scroll&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;lucafalasco-scroll-snap&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      lucafalasco/scroll-snap
    &lt;/h2&gt;
    &lt;small&gt;by Luca Falasco&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://github.com/lucafalasco/scroll-snap&#34;&gt;https://github.com/lucafalasco/scroll-snap&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;This library helps to snap a page when user stops scrolling. It is build on top of the CSS feature &lt;code&gt;scroll-snap&lt;/code&gt;, but offers a customizable configuration and a consistent cross browser behaviour.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://github.com/lucafalasco/scroll-snap&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;lucafalasco-scroll-snap.png&#34; alt=&#34;lucafalasco/scroll-snap&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;bgzy-js&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Bgzy.js
    &lt;/h2&gt;
    &lt;small&gt;by Nino Camdzic&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://ninocamdzic.github.io/bgzy/#&#34;&gt;https://ninocamdzic.github.io/bgzy/#&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Visually appealing backgrounds are sometimes the salt in the soup. Of course, it depends on the photo and so that it does not look boring in the long run, Nico thought, then I&amp;#39;ll change them in adjustable time periods with JavaScript. Great idea and nice implementation.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://ninocamdzic.github.io/bgzy/#&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;bgzy-js.png&#34; alt=&#34;Bgzy.js&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;scrollyvideo-js&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      ScrollyVideo.js
    &lt;/h2&gt;
    &lt;small&gt;by Daniel Kao&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://scrollyvideo.js.org/&#34;&gt;https://scrollyvideo.js.org/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Parallax effects when scrolling through a website are well known by now. But the fact that you can use a video for this was new to me. What an idea! And how cool it looks in the end…&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://scrollyvideo.js.org/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;scrollyvideo-js.png&#34; alt=&#34;ScrollyVideo.js&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;cal-heatmap&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Cal-Heatmap
    &lt;/h2&gt;
    &lt;small&gt;by Wan from Dubai&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://cal-heatmap.com/&#34;&gt;https://cal-heatmap.com/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Anyone who has ever been on GitHub knows the heatmaps that show when and how often commits have taken place. But this kind of chart can be used for other things, Wan probably thought and made a library out of it.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://cal-heatmap.com/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;cal-heatmap.png&#34; alt=&#34;Cal-Heatmap&#34; /&gt;
    &lt;/a&gt;
  


        </content>
        <category term="Misc" scheme="https://kiko.io/categories/Misc/" />
        <category term="Collection" scheme="https://kiko.io/tags/Collection/" />
    </entry>
    <entry>
        <id>https://kiko.io/post/Breton-Presets-for-Lightroom/</id>
        <title>Breton Presets for Lightroom</title>
        <published>2023-03-10T11:04:05.000Z</published>
        <updated>2023-03-10T11:04:05.000Z</updated>
        <link href="https://kiko.io/post/Breton-Presets-for-Lightroom/"/>
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Breton-Presets-for-Lightroom.thumb.png" height="1200" width="630" />
        <content type="html">
            
            
            &lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Breton-Presets-for-Lightroom.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;‘Le Bretagne’ (Brittany) is one of the most beautiful and historic parts of Europe and always worth a visit. It combines the sometimes rugged English flair with the art of living of France, both scenically and in the architecture and the way people live there. My wife likes all things English and I am a friend of the french ‘Savoir Vivre’, and we were able to combine the two beautifully on a trip to Saint-Malo and Jersey. It was a photographers dream…&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;hr&gt;
&lt;h2 id=&#34;Breton-Glow&#34;&gt;&lt;a href=&#34;#Breton-Glow&#34; class=&#34;headerlink&#34; title=&#34;Breton Glow&#34;&gt;&lt;/a&gt;Breton Glow&lt;/h2&gt;&lt;p&gt;The sunsets off Saint-Malo are wonderful. The water of the English Channel glows and in the sky the silhuettes of the paragliders stand out, pulling the sportsmen over the rippling water. You can sit on the waterfront for hours and still not get enough of it.&lt;/p&gt;

    &lt;div id=&#34;image-compare-c8014y&#34;&gt;
      &lt;img class=&#34;image-compare image-original&#34; src=&#34;/post/Breton-Presets-for-Lightroom/22-08 Bretagne-Jersey-0218_ORIGINAL.jpg&#34; alt=&#34;&#34; /&gt;
      &lt;img class=&#34;image-compare image-modified&#34; src=&#34;/post/Breton-Presets-for-Lightroom/22-08 Bretagne-Jersey-0218_PRESET-Glow.jpg&#34; alt=&#34;&#34; /&gt;
    &lt;/div&gt;
    
  


    &lt;p class=&#34;download-link&#34;&gt;
      &lt;a class=&#34;button&#34; href=&#34;Bretagne Glow.xmp&#34; download&gt;
        Download Lightroom Preset &lt;strong&gt;Bretagne Glow.xmp&lt;/strong&gt;
      &lt;/a&gt;
    &lt;/p&gt;
    

&lt;hr&gt;
&lt;h2 id=&#34;Breton-Sundown&#34;&gt;&lt;a href=&#34;#Breton-Sundown&#34; class=&#34;headerlink&#34; title=&#34;Breton Sundown&#34;&gt;&lt;/a&gt;Breton Sundown&lt;/h2&gt;&lt;p&gt;Having good and clear weather here, as in the British Isles, is not a given. The evenings are all the more beautiful when it is like this and the small islands off the coast are bathed in a warm orange.&lt;/p&gt;

    &lt;div id=&#34;image-compare-ld12nr&#34;&gt;
      &lt;img class=&#34;image-compare image-original&#34; src=&#34;/post/Breton-Presets-for-Lightroom/22-08 Bretagne-Jersey-0582_ORIGINAL.jpg&#34; alt=&#34;&#34; /&gt;
      &lt;img class=&#34;image-compare image-modified&#34; src=&#34;/post/Breton-Presets-for-Lightroom/22-08 Bretagne-Jersey-0582_PRESET_Sundown.jpg&#34; alt=&#34;&#34; /&gt;
    &lt;/div&gt;
    
  


    &lt;p class=&#34;download-link&#34;&gt;
      &lt;a class=&#34;button&#34; href=&#34;Bretagne Sundown.xmp&#34; download&gt;
        Download Lightroom Preset &lt;strong&gt;Bretagne Sundown.xmp&lt;/strong&gt;
      &lt;/a&gt;
    &lt;/p&gt;
    

&lt;hr&gt;
&lt;h2 id=&#34;Breton-Color&#34;&gt;&lt;a href=&#34;#Breton-Color&#34; class=&#34;headerlink&#34; title=&#34;Breton Color&#34;&gt;&lt;/a&gt;Breton Color&lt;/h2&gt;&lt;p&gt;I love colors, but rarely does the camera manage to capture that magic the way I feel it. And Brittany has beautiful colors. Be it the famous Mont Saint-Michel or a cornfield … :)&lt;/p&gt;

    &lt;div id=&#34;image-compare-suyphq&#34;&gt;
      &lt;img class=&#34;image-compare image-original&#34; src=&#34;/post/Breton-Presets-for-Lightroom/22-08 Bretagne-Jersey-0246_ORIGINAL.jpg&#34; alt=&#34;&#34; /&gt;
      &lt;img class=&#34;image-compare image-modified&#34; src=&#34;/post/Breton-Presets-for-Lightroom/22-08 Bretagne-Jersey-0246_PRESET-Color.jpg&#34; alt=&#34;&#34; /&gt;
    &lt;/div&gt;
    
  


    &lt;p class=&#34;download-link&#34;&gt;
      &lt;a class=&#34;button&#34; href=&#34;Bretagne Color.xmp&#34; download&gt;
        Download Lightroom Preset &lt;strong&gt;Bretagne Color.xmp&lt;/strong&gt;
      &lt;/a&gt;
    &lt;/p&gt;
    

&lt;hr&gt;
&lt;h2 id=&#34;Breton-Sea-Circle&#34;&gt;&lt;a href=&#34;#Breton-Sea-Circle&#34; class=&#34;headerlink&#34; title=&#34;Breton Sea Circle&#34;&gt;&lt;/a&gt;Breton Sea Circle&lt;/h2&gt;&lt;p&gt;Oysters from Cancale are not only famous in the region, but far beyond. A product that tastes just like the sea from which it comes looks: Awesome.&lt;/p&gt;

    &lt;div id=&#34;image-compare-s7vjul&#34;&gt;
      &lt;img class=&#34;image-compare image-original&#34; src=&#34;/post/Breton-Presets-for-Lightroom/22-08 Bretagne-Jersey-0761_ORIGINAL.jpg&#34; alt=&#34;&#34; /&gt;
      &lt;img class=&#34;image-compare image-modified&#34; src=&#34;/post/Breton-Presets-for-Lightroom/22-08 Bretagne-Jersey-0761_PRESET-SeaCircle.jpg&#34; alt=&#34;&#34; /&gt;
    &lt;/div&gt;
    
  


    &lt;p class=&#34;download-link&#34;&gt;
      &lt;a class=&#34;button&#34; href=&#34;Bretagne Sea Circle.xmp&#34; download&gt;
        Download Lightroom Preset &lt;strong&gt;Bretagne Sea Circle.xmp&lt;/strong&gt;
      &lt;/a&gt;
    &lt;/p&gt;
    

&lt;hr&gt;
&lt;h2 id=&#34;Breton-Beach&#34;&gt;&lt;a href=&#34;#Breton-Beach&#34; class=&#34;headerlink&#34; title=&#34;Breton Beach&#34;&gt;&lt;/a&gt;Breton Beach&lt;/h2&gt;&lt;p&gt;The beach in Saint-Malo is 3 kilometers long and it is fascinating to observe how one of the highest tides in Europe swallows it in no time and later releases it cleaned.&lt;/p&gt;

    &lt;div id=&#34;image-compare-eat96w&#34;&gt;
      &lt;img class=&#34;image-compare image-original&#34; src=&#34;/post/Breton-Presets-for-Lightroom/22-08 Bretagne-Jersey-1074_ORIGINAL.jpg&#34; alt=&#34;&#34; /&gt;
      &lt;img class=&#34;image-compare image-modified&#34; src=&#34;/post/Breton-Presets-for-Lightroom/22-08 Bretagne-Jersey-1074_PRESET-Beach.jpg&#34; alt=&#34;&#34; /&gt;
    &lt;/div&gt;
    
  


    &lt;p class=&#34;download-link&#34;&gt;
      &lt;a class=&#34;button&#34; href=&#34;Bretagne Beach.xmp&#34; download&gt;
        Download Lightroom Preset &lt;strong&gt;Bretagne Beach.xmp&lt;/strong&gt;
      &lt;/a&gt;
    &lt;/p&gt;
    

        </content>
        <category term="Photo-Editing" scheme="https://kiko.io/categories/Photo-Editing/" />
        <category term="Lightroom" scheme="https://kiko.io/tags/Lightroom/" />
        <category term="Presets" scheme="https://kiko.io/tags/Presets/" />
    </entry>
    <entry>
        <id>https://kiko.io/post/Discoveries-23-UI-CSS/</id>
        <title>Discoveries #23 -  UI/CSS</title>
        <published>2023-02-12T10:45:10.000Z</published>
        <updated>2023-02-12T10:45:10.000Z</updated>
        <link href="https://kiko.io/post/Discoveries-23-UI-CSS/"/>
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Discoveries-23-UI-CSS.thumb.png" height="1200" width="630" />
        <content type="html">
            
            
            &lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Discoveries-23-UI-CSS.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;As a visual person, I’m always thrilled when I come across small but subtle tips, tricks or even entire solutions that lift my understanding of what can be done with CSS to new heights. Of course, this month &lt;code&gt;:has()&lt;/code&gt; is once again one of them, but also once again contributions from &lt;a href=&#34;https://www.bram.us/&#34;&gt;Bramus van Damme&lt;/a&gt; and &lt;a href=&#34;https://ishadeed.com/&#34;&gt;Ahmad Shadeed&lt;/a&gt;, whose posts I read without exception because they are both so good at what they do.&lt;/p&gt;

        &lt;ul class=&#34;anchorlist&#34;&gt;
            &lt;li data-anchor=&#34;#tree-views-in-css&#34;&gt;Tree views in CSS&lt;/li&gt;&lt;li data-anchor=&#34;#scroll-shadows-with-javascript&#34;&gt;Scroll Shadows With JavaScript&lt;/li&gt;&lt;li data-anchor=&#34;#css-mirror-editing-in-edge-devtools-for-vs-code&#34;&gt;CSS Mirror Editing in Edge DevTools for VS Code&lt;/li&gt;&lt;li data-anchor=&#34;#prevent-scroll-chaining-with-overscroll-behavior&#34;&gt;Prevent Scroll Chaining With Overscroll Behavior&lt;/li&gt;&lt;li data-anchor=&#34;#display-content-in-the-title-bar-microsoft-edge-development&#34;&gt;Display content in the title bar - Microsoft Edge Development&lt;/li&gt;&lt;li data-anchor=&#34;#the-large-small-and-dynamic-viewport-units&#34;&gt;The large, small, and dynamic viewport units&lt;/li&gt;&lt;li data-anchor=&#34;#an-interactive-guide-to-flexbox-in-css&#34;&gt;An Interactive Guide to Flexbox in CSS&lt;/li&gt;&lt;li data-anchor=&#34;#flexbox-dynamic-line-separator&#34;&gt;Flexbox Dynamic Line Separator&lt;/li&gt;&lt;li data-anchor=&#34;#style-a-parent-element-based-on-its-number-of-children-using-css-has&#34;&gt;Style a parent element based on its number of children using CSS :has()&lt;/li&gt;&lt;li data-anchor=&#34;#has-the-family-selector&#34;&gt;:has(): the family selector&lt;/li&gt;
        &lt;/ul&gt;
    

&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;


    &lt;hr id=&#34;tree-views-in-css&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Tree views in CSS
    &lt;/h2&gt;
    &lt;small&gt;by Kate Rose Morley&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://iamkate.com/code/tree-views/&#34;&gt;https://iamkate.com/code/tree-views/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Kate shows us how to create a tree view as collapsible list, created using only html and css, without the need for JavaScript&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://iamkate.com/code/tree-views/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;tree-views-in-css.png&#34; alt=&#34;Tree views in CSS&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;scroll-shadows-with-javascript&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Scroll Shadows With JavaScript
    &lt;/h2&gt;
    &lt;small&gt;by Chris Coyier&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://css-tricks.com/scroll-shadows-with-javascript/&#34;&gt;https://css-tricks.com/scroll-shadows-with-javascript/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;A good scrollable design shows the user if he can scroll further or not. Chris has an approach on that with pure CSS.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://css-tricks.com/scroll-shadows-with-javascript/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;scroll-shadows-with-javascript.png&#34; alt=&#34;Scroll Shadows With JavaScript&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;css-mirror-editing-in-edge-devtools-for-vs-code&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      CSS Mirror Editing in Edge DevTools for VS Code
    &lt;/h2&gt;
    &lt;small&gt;by Christian Heilmann&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://christianheilmann.com/2021/09/16/css-mirror-editing-in-edge-devtools-for-vs-code/&#34;&gt;https://christianheilmann.com/2021/09/16/css-mirror-editing-in-edge-devtools-for-vs-code/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;How often do you fiddle around with CSS in Chrome&amp;#39;s DevTools and copy the stuff back to your code? Christian shows how Mirror Editing works.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://christianheilmann.com/2021/09/16/css-mirror-editing-in-edge-devtools-for-vs-code/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;css-mirror-editing-in-edge-devtools-for-vs-code.png&#34; alt=&#34;CSS Mirror Editing in Edge DevTools for VS Code&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;prevent-scroll-chaining-with-overscroll-behavior&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Prevent Scroll Chaining With Overscroll Behavior
    &lt;/h2&gt;
    &lt;small&gt;by Ahmad Shadeed&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://ishadeed.com/article/prevent-scroll-chaining-overscroll-behavior/&#34;&gt;https://ishadeed.com/article/prevent-scroll-chaining-overscroll-behavior/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Dealing with scroll boundaries when you have many scrolling boxes on a page is a mess, until you have read Ahmad&amp;#39;s advice regarding the use of &amp;#39;overscroll-behavior&amp;#39;&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://ishadeed.com/article/prevent-scroll-chaining-overscroll-behavior/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;prevent-scroll-chaining-with-overscroll-behavior.png&#34; alt=&#34;Prevent Scroll Chaining With Overscroll Behavior&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;display-content-in-the-title-bar-microsoft-edge-development&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Display content in the title bar - Microsoft Edge Development
    &lt;/h2&gt;
    &lt;small&gt;by Microsoft Learn&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/microsoft-edge/progressive-web-apps-chromium/how-to/window-controls-overlay&#34;&gt;https://learn.microsoft.com/en-us/microsoft-edge/progressive-web-apps-chromium/how-to/window-controls-overlay&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;In PWAs, at least on the desktop, a lot of space is wasted with the title bar of the window. The use of &amp;#39;display_override&amp;#39; should change that.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://learn.microsoft.com/en-us/microsoft-edge/progressive-web-apps-chromium/how-to/window-controls-overlay&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;display-content-in-the-title-bar-microsoft-edge-development.png&#34; alt=&#34;Display content in the title bar - Microsoft Edge Development&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;the-large-small-and-dynamic-viewport-units&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      The large, small, and dynamic viewport units
    &lt;/h2&gt;
    &lt;small&gt;by Bramus Van Damme&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://web.dev/viewport-units/&#34;&gt;https://web.dev/viewport-units/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;The most used device on the Internet has long been the smartphone, but the visible area is trimmed by the browsers there from the necessary dynamic toolbars. To address this, there are new size units.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://web.dev/viewport-units/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;the-large-small-and-dynamic-viewport-units.png&#34; alt=&#34;The large, small, and dynamic viewport units&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;an-interactive-guide-to-flexbox-in-css&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      An Interactive Guide to Flexbox in CSS
    &lt;/h2&gt;
    &lt;small&gt;by Josh Comeau&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://www.joshwcomeau.com/css/interactive-guide-to-flexbox/&#34;&gt;https://www.joshwcomeau.com/css/interactive-guide-to-flexbox/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;There are plenty of Flexbox tutorials, cheat sheets and generators, but Josh turns it into an interactive learning lesson. Very memorable.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://www.joshwcomeau.com/css/interactive-guide-to-flexbox/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;an-interactive-guide-to-flexbox-in-css.png&#34; alt=&#34;An Interactive Guide to Flexbox in CSS&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;flexbox-dynamic-line-separator&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Flexbox Dynamic Line Separator
    &lt;/h2&gt;
    &lt;small&gt;by Ahmad Shadeed&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://ishadeed.com/article/flexbox-separator/&#34;&gt;https://ishadeed.com/article/flexbox-separator/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Flexbox again and Ahmad again … If you need separator lines between boxes for different devices, here&amp;#39;s how the can be done nice and easy.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://ishadeed.com/article/flexbox-separator/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;flexbox-dynamic-line-separator.png&#34; alt=&#34;Flexbox Dynamic Line Separator&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;style-a-parent-element-based-on-its-number-of-children-using-css-has&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Style a parent element based on its number of children using CSS :has()
    &lt;/h2&gt;
    &lt;small&gt;by Bramus Van Damme&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://www.bram.us/2022/11/17/style-a-parent-element-based-on-its-number-of-children-using-css-has/&#34;&gt;https://www.bram.us/2022/11/17/style-a-parent-element-based-on-its-number-of-children-using-css-has/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;:has() is the hottest kid in town right now, because it allows the long-cherished dream of many web developers to style a parent element depending on his children. Bramus shows how…&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://www.bram.us/2022/11/17/style-a-parent-element-based-on-its-number-of-children-using-css-has/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;style-a-parent-element-based-on-its-number-of-children-using-css-has.png&#34; alt=&#34;Style a parent element based on its number of children using CSS :has()&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;has-the-family-selector&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      :has(): the family selector
    &lt;/h2&gt;
    &lt;small&gt;by Jhey Tompkins&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://developer.chrome.com/blog/has-m105/&#34;&gt;https://developer.chrome.com/blog/has-m105/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;As :has() is so hot, it&amp;#39;s good to have another resource talking about. Jhey has collected so many examples that hardly any questions remain open.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://developer.chrome.com/blog/has-m105/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;has-the-family-selector.png&#34; alt=&#34;:has(): the family selector&#34; /&gt;
    &lt;/a&gt;
  

        </content>
        <category term="Misc" scheme="https://kiko.io/categories/Misc/" />
        <category term="Collection" scheme="https://kiko.io/tags/Collection/" />
    </entry>
    <entry>
        <id>https://kiko.io/post/Provide-Blog-Metadata-via-JSON-LD/</id>
        <title>Provide Blog Metadata via JSON-LD</title>
        <published>2023-02-09T23:00:00.000Z</published>
        <updated>2023-02-09T23:00:00.000Z</updated>
        <link href="https://kiko.io/post/Provide-Blog-Metadata-via-JSON-LD/"/>
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Provide-Blog-Metadata-via-JSON-LD.thumb.png" height="1200" width="630" />
        <content type="html">
            
            
            &lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Provide-Blog-Metadata-via-JSON-LD.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;Chris Coyier’s post “&lt;a href=&#34;https://chriscoyier.net/2023/01/28/open-graph-blues/&#34;&gt;Open Graph Blues&lt;/a&gt;“ got me thinking that my blog’s metadata, which are used by Google among others to index my pages, aren’t really at the cutting edge anymore. I took the markup of the individual elements of the pages via &lt;a href=&#34;https://schema.org/&#34;&gt;schema.org&lt;/a&gt; Microdata attributes from the standard Hexo template years ago and always adjusted it by value, but never questioned that there are more modern variants to provide the metadata.&lt;/p&gt;
&lt;p&gt;It’s Ok for Google to use Microdata attributes, but the HTML code of my templates is getting more and more opaque, because next to these stick to the tags also those for the Indieweb, classes for CSS and last but not least those for the own indexing via Pagefind. There becomes from a simple&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;article&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;Title of my latest blog post&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt; ... &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;article&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;quickly becomes a …&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;article&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;article-type-post h-entry&amp;quot;&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;data-pagefind-body&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;data-pagefind-meta&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;type:Article&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;itemscope&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;itemprop&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;blogPost&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;article-title p-name&amp;quot;&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;itemprop&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Title of my latest blog post&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt; ... &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;article&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Lots of textual overhead and the hardest part is maintaining it over the long term. Better would be a complete search engine description in the header of a page, where also the other meta information is available. In one place and not spread all over the HTML code. &lt;strong&gt;JSON-LD to the rescue&lt;/strong&gt;…&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;hr&gt;
&lt;h2 id=&#34;Structured-Meta-Data&#34;&gt;&lt;a href=&#34;#Structured-Meta-Data&#34; class=&#34;headerlink&#34; title=&#34;Structured Meta Data&#34;&gt;&lt;/a&gt;Structured Meta Data&lt;/h2&gt;&lt;p&gt;Google has published tons of information in its &lt;a href=&#34;https://developers.google.com/search/docs/appearance/structured-data/intro-structured-data&#34;&gt;Search Central&lt;/a&gt; on how to place metadata on your page to be found more easily in the index. You can also see that they are maintained by the update date of individual pages, for example “&lt;em&gt;Last updated 2023-01-26 UTC&lt;/em&gt;“. End of last week. That’s up to date, fine.&lt;/p&gt;
&lt;p&gt;Of course, they also show how to use Microdata, but recommended is the use of &lt;a href=&#34;https://json-ld.org/&#34;&gt;JSON-LD&lt;/a&gt;, a structured and centralized inclusion of the required information via a SCRIPT tag in the header of the page. Thereby information about the &lt;strong&gt;website&lt;/strong&gt; in general, the &lt;strong&gt;author&lt;/strong&gt;, the &lt;strong&gt;organization&lt;/strong&gt; behind it and the actual &lt;strong&gt;article&lt;/strong&gt; page can be combined separately in one piece of JSON-LD code.&lt;/p&gt;

    &lt;div class=&#34;alertbox alertbox-exclamation&#34;&gt;
      &lt;p&gt;Google’s solution is based on schema.org, but they have picked only what is necessary for them, which means: they deal only with a subset of the schema.org types.&lt;/p&gt;

    &lt;/div&gt;
  

&lt;p&gt;Since it is somewhat cumbersome to write correct JSON-LD by hand, there are of course online editors for it, e.g. within the &lt;a href=&#34;https://webcode.tools/generators/structured-data&#34;&gt;web code tools&lt;/a&gt; or &lt;a href=&#34;https://technicalseo.com/tools/schema-markup-generator/&#34;&gt;Merkle&lt;/a&gt;. But these generators unfortunately do not map all the possibilities and useful entries, so they can only generate general templates to be elaborated. Moreover, you can use the JSON-LD code from this article as a basis for your solution, because it covers the most important aspects.&lt;/p&gt;
&lt;p&gt;In the following I first describe the general content of the individual JSON-LD blocks and then how to assemble them, so that it makes sense for the search engine.&lt;/p&gt;
&lt;h3 id=&#34;Author&#34;&gt;&lt;a href=&#34;#Author&#34; class=&#34;headerlink&#34; title=&#34;Author&#34;&gt;&lt;/a&gt;Author&lt;/h3&gt;&lt;p&gt;First of all, this code is about me myself and I…&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;@type&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Person&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/#person&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Kristof Zerbe&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/about&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;image&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/images/kristof-zerbe.png&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;sameAs&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;https://indieweb.social/@kiko&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;https://github.com/kristofzerbe&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;https://500px.com/p/kikon&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;]&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


    &lt;div class=&#34;alertbox alertbox-info&#34;&gt;
      &lt;p&gt;It is advisable to include so called &lt;strong&gt;Node Identifiers&lt;/strong&gt; (&lt;code&gt;@id&lt;/code&gt;) in order to reuse certain information later on as a reference and prevent repeating data. These &lt;a href=&#34;https://schema.org/docs/datamodel.html#identifierBg&#34;&gt;identifiers&lt;/a&gt; are canonical URL&amp;#x2F;URI representations.&lt;/p&gt;

    &lt;/div&gt;
  

&lt;h3 id=&#34;Organization&#34;&gt;&lt;a href=&#34;#Organization&#34; class=&#34;headerlink&#34; title=&#34;Organization&#34;&gt;&lt;/a&gt;Organization&lt;/h3&gt;&lt;p&gt;Most blogs are run by individuals and not necessarily by organizations, so you might think this area would not be interesting, but it is for a reason: only here you can deposit the link to a logo of your blog, which can then be displayed in the search.&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;@type&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Organization&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/#organization&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;kiko.io&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;logo&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/images/apple-touch-icon.png&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;Website&#34;&gt;&lt;a href=&#34;#Website&#34; class=&#34;headerlink&#34; title=&#34;Website&#34;&gt;&lt;/a&gt;Website&lt;/h3&gt;&lt;p&gt;The JSON-LD block related to this website itself looks like this:&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;@type&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;WebSite&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/#website&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;kiko.io&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Blog about memorable tech stuff by Kristof Zerbe&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;inLanguage&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;en-US&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;publisher&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/#organization&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;potentialAction&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;@type&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;SearchAction&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;target&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;&amp;quot;@type&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;EntryPoint&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;&amp;quot;urlTemplate&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/search/?q=&amp;#123;searchTerm&amp;#125;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;query-input&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;required name=searchTerm&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Remarkable in this block is the &lt;code&gt;potentialAction&lt;/code&gt;, which specifies the possibility to let the search engine (Google, whatelse) integrate a Sitelinks Search Box, a search box inside the result list, as described &lt;a href=&#34;https://developers.google.com/search/docs/appearance/structured-data/sitelinks-searchbox&#34;&gt;here&lt;/a&gt;. There is a shorthand format for this and some generators like Merkle are using it, but it is not recommended, because it’s non-standard.&lt;/p&gt;
&lt;h3 id=&#34;Page-Images&#34;&gt;&lt;a href=&#34;#Page-Images&#34; class=&#34;headerlink&#34; title=&#34;(Page) Images&#34;&gt;&lt;/a&gt;(Page) Images&lt;/h3&gt;&lt;p&gt;I use my own photographs on every page as header images and to provide some additional information on these, there is a JSON-LD block for the image I use.&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;@type&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;ImageObject&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io#photo/D70_9216&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;caption&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Broken Onion&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/photos/normal/D70_9216.jpg&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;contentUrl&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/photos/normal/D70_9216.jpg&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;license&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://creativecommons.org/licenses/by-sa/4.0/&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;acquireLicensePage&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/photos&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;creditText&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Kristof Zerbe&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;copyrightNotice&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Kristof Zerbe (CC BY-SA 4.0)&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;creator&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/#person&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;For better recognition of my posts (currently articles only), I generate a special image for each post for the social media platforms. It is based on the  photo associated with the post and includes it’s title and subtitle in addition to the logo. How I generate these things can be read in my post &lt;a href=&#34;/post/Generate-Social-Media-Images-Automatically/&#34; title=&#34;Generate Social Media Images Automatically&#34;&gt;Generate Social Media Images Automatically&lt;/a&gt;. For this image, there is a second JSON-LD block that I can reference later on:&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;@type&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;ImageObject&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io#image/Provide-Blog-Metadata-via-JSON-LD&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/images/social-media/Provide-Blog-Metadata-via-JSON-LD.png&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;contentUrl&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/images/social-media/Provide-Blog-Metadata-via-JSON-LD.png&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;creator&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/#person&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/images/social-media/Provide-Blog-Metadata-via-JSON-LD.thumb.png&#34; alt=&#34;Social Media image of this post&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;Webpage&#34;&gt;&lt;a href=&#34;#Webpage&#34; class=&#34;headerlink&#34; title=&#34;Webpage&#34;&gt;&lt;/a&gt;Webpage&lt;/h3&gt;&lt;p&gt;The previously described JSON-LD blocks are basically just a preparation for the description of the individual pages that will be indexed by the search engine. The following block now describes a page itself and includes the previously described blocks by referencing the &lt;code&gt;@id&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;@type&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;WebPage&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/post/Provide-Blog-Metadata-via-JSON-LD&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/post/Provide-Blog-Metadata-via-JSON-LD&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Provide Blog Metadata via JSON-LD&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;isPartOf&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/#website&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Centralization of a website&amp;#x27;s schema.org data in the HEAD instead of everywhere in the HTML&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;inLanguage&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;en-US&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;primaryImageOfPage&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io#photo/D70_9216&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;image&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io#photo/D70_9216&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;Article&#34;&gt;&lt;a href=&#34;#Article&#34; class=&#34;headerlink&#34; title=&#34;Article&#34;&gt;&lt;/a&gt;Article&lt;/h3&gt;&lt;p&gt;In addition to the previous description of a web page, the following block is a more detailed description of the page as an article or blog post.&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;@type&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Article&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/post/Provide-Blog-Metadata-via-JSON-LD#article&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;mainEntityOfPage&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/post/Provide-Blog-Metadata-via-JSON-LD&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;headline&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Provide Blog Metadata via JSON-LD&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;datePublished&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;2023-02-02T12:00:00+00:00&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;dateModified&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;2023-02-02T12:00:00+00:00&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;image&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io#image/Provide-Blog-Metadata-via-JSON-LD&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;author&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/#person&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;publisher&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/#organization&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;As described earlier, the identifiers defined in the other blocks are used for referencing the &lt;code&gt;author&lt;/code&gt; and the &lt;code&gt;publisher&lt;/code&gt;, as I did it in the block &lt;code&gt;website&lt;/code&gt;. At first glance, this information appears to be duplicated and I am currently not sure if it is really needed.&lt;br&gt;&lt;code&gt;mainEntityOfPage&lt;/code&gt; makes clear, that this article is the main entity for that web page.&lt;br&gt;The image of the article will be the social media image defined in the second &lt;code&gt;ImageObject&lt;/code&gt; block.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;Assembling-the-blocks&#34;&gt;&lt;a href=&#34;#Assembling-the-blocks&#34; class=&#34;headerlink&#34; title=&#34;Assembling the blocks&#34;&gt;&lt;/a&gt;Assembling the blocks&lt;/h2&gt;&lt;p&gt;Generally, JSON-LD data is included in a page via a &lt;code&gt;script&lt;/code&gt; tag. You can either output each individual block separately or together within a so called &lt;strong&gt;graph&lt;/strong&gt;. In both cases, the leading specification of the &lt;strong&gt;context&lt;/strong&gt; is necessary.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Separate&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;application/ld+json&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;@context&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;http://schema.org/&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    ... rest &lt;span class=&#34;keyword&#34;&gt;of&lt;/span&gt; the block&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;application/ld+json&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; ... &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Together&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;application/ld+json&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;@context&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;http://schema.org/&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;@graph&amp;quot;&lt;/span&gt;: &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    [&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      ... all needed blocks &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; hierarchy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    ]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Since this is probably the most common and also the most space-saving way, I have chosen the graph.&lt;/p&gt;
&lt;p&gt;When arranging the blocks it is useful to keep the &lt;strong&gt;hierarchy, from specific to general&lt;/strong&gt;. Here is a schematic example of an &lt;strong&gt;article&lt;/strong&gt;:&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;application/ld+json&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;@context&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;http://schema.org/&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;@graph&amp;quot;&lt;/span&gt;: &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    [&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &amp;#123; ... &lt;span class=&#34;title class_&#34;&gt;Article&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &amp;#123; ... &lt;span class=&#34;title class_&#34;&gt;WebPage&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &amp;#123; ... &lt;span class=&#34;title class_&#34;&gt;ImageObject&lt;/span&gt; (&lt;span class=&#34;title class_&#34;&gt;Social&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Media&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Image&lt;/span&gt;) &amp;#125;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &amp;#123; ... &lt;span class=&#34;title class_&#34;&gt;ImageObject&lt;/span&gt; (&lt;span class=&#34;title class_&#34;&gt;Photo&lt;/span&gt;) &amp;#125;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &amp;#123; ... &lt;span class=&#34;title class_&#34;&gt;WebSite&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &amp;#123; ... &lt;span class=&#34;title class_&#34;&gt;Organization&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &amp;#123; ... &lt;span class=&#34;title class_&#34;&gt;Person&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    ]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;On all pages that are not an article, of course, the &lt;em&gt;Article&lt;/em&gt; and the &lt;em&gt;ImageObject (Social Media Image)&lt;/em&gt; blocks are not necessary. Here is the sample for an ordinary &lt;strong&gt;page&lt;/strong&gt;:&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;application/ld+json&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;@context&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;http://schema.org/&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;@graph&amp;quot;&lt;/span&gt;: &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    [&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &amp;#123; ... &lt;span class=&#34;title class_&#34;&gt;WebPage&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &amp;#123; ... &lt;span class=&#34;title class_&#34;&gt;ImageObject&lt;/span&gt; (&lt;span class=&#34;title class_&#34;&gt;Photo&lt;/span&gt;) &amp;#125;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &amp;#123; ... &lt;span class=&#34;title class_&#34;&gt;WebSite&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &amp;#123; ... &lt;span class=&#34;title class_&#34;&gt;Organization&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &amp;#123; ... &lt;span class=&#34;title class_&#34;&gt;Person&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    ]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h2 id=&#34;Generation&#34;&gt;&lt;a href=&#34;#Generation&#34; class=&#34;headerlink&#34; title=&#34;Generation&#34;&gt;&lt;/a&gt;Generation&lt;/h2&gt;&lt;p&gt;Since my blog is based on SSG &lt;a href=&#34;https://hexo.io/&#34;&gt;Hexo&lt;/a&gt;, I have all the data and capabilities to have the JSON-LD data of a page automatically generated. I don&amp;#96;t want to go into too much depth here about how I implemented this, but in general there is an EJS file for each block that renders the required JSON-LD code via the available configuration and page data stored and passed in a META object. Through various wrappers, these are then included in the &lt;code&gt;head.ejs&lt;/code&gt;. I have currently three of them:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;json-ld-page.ejs&lt;/code&gt; … for all pages, except the other two below&lt;/li&gt;
&lt;li&gt;&lt;code&gt;json-ld-article.ejs&lt;/code&gt; … for articles (normal &lt;a href=&#34;/archives&#34;&gt;kiko.io Posts&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;json-ld-blogposting.ejs&lt;/code&gt; … for notes (see &lt;a href=&#34;/notes&#34;&gt;kiko.io Notes&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;json-ld-article.ejs&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;quot;@context&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;http://schema.org/&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;quot;@graph&amp;quot;&lt;/span&gt;: &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;%- &lt;span class=&#34;title function_&#34;&gt;partial&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;_partial/meta/_article&amp;#x27;&lt;/span&gt;) %&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;%- &lt;span class=&#34;title function_&#34;&gt;partial&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;_partial/meta/_webpage&amp;#x27;&lt;/span&gt;) %&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;%- &lt;span class=&#34;title function_&#34;&gt;partial&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;_partial/meta/_image&amp;#x27;&lt;/span&gt;) %&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;%- &lt;span class=&#34;title function_&#34;&gt;partial&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;_partial/meta/_photo&amp;#x27;&lt;/span&gt;) %&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;%- &lt;span class=&#34;title function_&#34;&gt;partial&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;_partial/meta/_website&amp;#x27;&lt;/span&gt;) %&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;%- &lt;span class=&#34;title function_&#34;&gt;partial&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;_partial/meta/_organization&amp;#x27;&lt;/span&gt;) %&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;%- &lt;span class=&#34;title function_&#34;&gt;partial&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;_partial/meta/_author&amp;#x27;&lt;/span&gt;) %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;head.ejs&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%#!-- &lt;span class=&#34;title class_&#34;&gt;JSON&lt;/span&gt;-&lt;span class=&#34;variable constant_&#34;&gt;LD&lt;/span&gt; (schema.&lt;span class=&#34;property&#34;&gt;org&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Google&lt;/span&gt; --%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; jsonPartial = &lt;span class=&#34;string&#34;&gt;&amp;quot;json-ld-&amp;quot;&lt;/span&gt; + meta.&lt;span class=&#34;property&#34;&gt;type&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; jsonLD = &lt;span class=&#34;title function_&#34;&gt;partial&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;_partial/meta/&amp;#x27;&lt;/span&gt; + jsonPartial, &amp;#123; &lt;span class=&#34;attr&#34;&gt;meta&lt;/span&gt;: meta &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  jsonLD = &lt;span class=&#34;title class_&#34;&gt;JSON&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;stringify&lt;/span&gt;(&lt;span class=&#34;title class_&#34;&gt;JSON&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;parse&lt;/span&gt;(jsonLD));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;application/ld+json&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;lt;%- jsonLD %&amp;gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;The last line in the JavaScript ensures, that the produced JSON is compacted to one single line … easy, by converting the string into an object and back to a string.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;Test-the-JSON-LD&#34;&gt;&lt;a href=&#34;#Test-the-JSON-LD&#34; class=&#34;headerlink&#34; title=&#34;Test the JSON-LD&#34;&gt;&lt;/a&gt;Test the JSON-LD&lt;/h2&gt;&lt;p&gt;When you have everything together, it is advisable to test the resulting code. Schema.org offers such a tool at &lt;strong&gt;&lt;a href=&#34;https://validator.schema.org/&#34;&gt;https://validator.schema.org/&lt;/a&gt;&lt;/strong&gt;. In addition, there is the &lt;a href=&#34;https://search.google.com/test/rich-results&#34;&gt;Google Rich Results Test&lt;/a&gt;, which validates your code against the partially specific implementation for their own search engine.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/Provide-Blog-Metadata-via-JSON-LD/schema-markup-validator.png&#34; alt=&#34;Schema Markup Validator&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;Conclusion&#34;&gt;&lt;a href=&#34;#Conclusion&#34; class=&#34;headerlink&#34; title=&#34;Conclusion&#34;&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;&lt;p&gt;It may be a few bytes more that are delivered to the user in the browser or the search engine bot, but the advantage is, that all the information describing the page is stored in one place in the header of the page and nothing is scattered all over the HTML anymore. Maintenance of both the code and the meta data is made much easier as a result.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;More-Information&#34;&gt;&lt;a href=&#34;#More-Information&#34; class=&#34;headerlink&#34; title=&#34;More Information&#34;&gt;&lt;/a&gt;More Information&lt;/h2&gt;
        &lt;ul class=&#34;moreinfo-list&#34;&gt;
            &lt;li&gt;Google Search Central: &lt;a href=&#34;https://developers.google.com/search/docs/appearance/structured-data/intro-structured-data&#34;&gt;Introduction to structured data markup in Google Search&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Patrick Coombe and Craig Mount: &lt;a href=&#34;https://jsonld.com/&#34;&gt;Steal Our JSON-LD&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Andrew Welch: &lt;a href=&#34;https://nystudio107.com/blog/annotated-json-ld-structured-data-examples&#34;&gt;Annotated JSON-LD Structured Data Examples&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Alberto Carniel: &lt;a href=&#34;https://www.albertocarniel.com/post/schema-markup&#34;&gt;Schema markup and structured data ultimate guide (JSON-LD)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Brian Gorman: &lt;a href=&#34;https://moz.com/blog/writing-structured-data-guide&#34;&gt;An SEO’s Guide to Writing Structured Data (JSON-LD)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Merkle: &lt;a href=&#34;https://technicalseo.com/tools/schema-markup-generator/&#34;&gt;Schema Markup Generator (JSON-LD)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;webcode.tools: &lt;a href=&#34;https://webcode.tools/generators/structured-data&#34;&gt;Generators &gt; Structured Data&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
    

        </content>
        <category term="Tools" scheme="https://kiko.io/categories/Tools/" />
        <category term="Hexo" scheme="https://kiko.io/tags/Hexo/" />
        <category term="Search" scheme="https://kiko.io/tags/Search/" />
        <category term="JSON-LD" scheme="https://kiko.io/tags/JSON-LD/" />
    </entry>
    <entry>
        <id>https://kiko.io/post/Pagefind-UI-and-URL-Parameters/</id>
        <title>Updated: Pagefind UI and URL Parameters</title>
        <published>2023-01-31T11:04:00.000Z</published>
        <updated>2023-02-03T10:51:00.000Z</updated>
        <link href="https://kiko.io/post/Pagefind-UI-and-URL-Parameters/"/>
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Pagefind-UI-and-URL-Parameters.thumb.png" height="1200" width="630" />
        <content type="html">
            
            
            &lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Pagefind-UI-and-URL-Parameters.png&#34; /&gt;&lt;/p&gt;
    &lt;div class=&#34;alertbox alertbox-exclamation&#34;&gt;
      &lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;: Parts of the original post are outdated, as Pagefind &lt;strong&gt;DOES&lt;/strong&gt; offer a way to preset a search string, which just hasn’t been documented yet … \o&amp;#x2F; … see below.&lt;/p&gt;

    &lt;/div&gt;
  

&lt;hr&gt;
&lt;p&gt;A couple of days ago I wrote about my attempt to &lt;a href=&#34;/post/Integration-of-Pagefind-in-Hexo/&#34; title=&#34;Integration of Pagefind in Hexo&#34;&gt;integrate Pagefind in my blog&lt;/a&gt;. In the meantime, I further refined the indexing by excluding more content areas and adding more for the metadata to make the search results even better.&lt;/p&gt;
&lt;p&gt;But one thing was still missing: controlling the search via url parameters, so that you can actually consider the page as a search page. I came across this in a post about the sense and nonsense of Open Graph attributes and other search engine related metadata nowadays. Google, for example, &lt;a href=&#34;https://developers.google.com/search/docs/appearance/structured-data/intro-structured-data&#34;&gt;likes to use JSON-LD&lt;/a&gt; and when describing the site you can define a search page which then makes it easier to search the site directly via Google … see &lt;a href=&#34;https://developers.google.com/search/docs/appearance/structured-data/sitelinks-searchbox&#34;&gt;Sitelinks search box (WebSite) structured data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In my implementation, I decided to adapt the &lt;a href=&#34;https://pagefind.app/docs/ui/&#34;&gt;Pagefind UI&lt;/a&gt; for myself instead of developing everything from scratch via JavaScript. There are always some limitations with pre-built solutions, but I want to show here that they are actually none for the inclusion of a url parameter.&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;p&gt;My Pagefind search page is accessible at &lt;a href=&#34;/search&#34;&gt;&amp;#x2F;search&lt;/a&gt; and therefore it’s easy to provide with parameters, f.e. &lt;code&gt;/search/?q=test&lt;/code&gt;. Retrieving them on the page via JavaScript is no rocket science either:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;Search Page&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// get value search parameter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; queryString = &lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;location&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;search&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; urlParams = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;URLSearchParams&lt;/span&gt;(queryString);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; searchString = urlParams.&lt;span class=&#34;title function_&#34;&gt;get&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;q&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// initialize Pagefind UI&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;DOMContentLoaded&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;event&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;PagefindUI&lt;/span&gt;(&amp;#123; &lt;span class=&#34;attr&#34;&gt;element&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;#search&amp;quot;&lt;/span&gt; &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p style=&#34;text-decoration: line-through;&#34;&gt;
Now Pagefind does not offer the possibility to initialize the search on the page already with a certain value, which would be the easiest way. You can only insert the value supplied via the URL parameter into the initialized INPUT field **afterwards** and ensure that the search is triggered with it.
&lt;/p&gt;

&lt;p style=&#34;text-decoration: line-through;&#34;&gt;
Unfortunately, Pagefind also does not provide a callback method to do things after successful initialization. So, my implementation needs a &#34;guard&#34; that kicks in as soon as the INPUT field is ready for a search string to be entered. For this I use the following small function called ``waitForElm``, which uses JS&#39;s ``MutationAbserver`` and is located in my *tools.js* file. It triggers a Promise as soon as an element is available on the page.
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As I learned after creating an &lt;a href=&#34;https://github.com/CloudCannon/pagefind/issues/214&#34;&gt;issue (#214)&lt;/a&gt; in Pagefind’s GitHub repo, there IS a way to preset the incoming search string by using the method &lt;code&gt;triggerSearch&lt;/code&gt;, but as Liam pointed out it is not yet documented.&lt;/p&gt;
&lt;p&gt;But I still need the following function called &lt;code&gt;waitForElm&lt;/code&gt; to set the &lt;strong&gt;focus&lt;/strong&gt; into the created INPUT … but there is also an existing &lt;a href=&#34;https://github.com/CloudCannon/pagefind/issues/121&#34;&gt;issue (#121)&lt;/a&gt; for this focus feature, so let’s see how long I need the function at all.&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;tools.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;waitForElm&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;selector&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Promise&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;resolve&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;querySelector&lt;/span&gt;(selector)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;resolve&lt;/span&gt;(&lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;querySelector&lt;/span&gt;(selector));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; observer = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;MutationObserver&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;mutations&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;querySelector&lt;/span&gt;(selector)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;title function_&#34;&gt;resolve&lt;/span&gt;(&lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;querySelector&lt;/span&gt;(selector));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        observer.&lt;span class=&#34;title function_&#34;&gt;disconnect&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    observer.&lt;span class=&#34;title function_&#34;&gt;observe&lt;/span&gt;(&lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;childList&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;subtree&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p style=&#34;text-decoration: line-through;&#34;&gt;
With this function and the name of the INPUT field that Pagefind inserts into the ``#search`` wrapper during initialization, the URL parameter can now be set.
&lt;/p&gt;
&lt;p style=&#34;text-decoration: line-through;&#34;&gt;
Since Pagefind already shows results when typing the first characters, the easiest way to trigger the search after setting the value is by dispatching the ``input`` event.
&lt;/p&gt;

&lt;p&gt;Lets see how to implement Pagefind’s &lt;code&gt;triggerSearch&lt;/code&gt; function, which is automatically delayed until the search is loaded and ready, if there is an incoming search string:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;Search Page&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// get value search parameter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; queryString = &lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;location&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;search&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; urlParams = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;URLSearchParams&lt;/span&gt;(queryString);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; searchString = urlParams.&lt;span class=&#34;title function_&#34;&gt;get&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;q&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// initialize Pagefind UI&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;DOMContentLoaded&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;event&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; pagefind = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;PagefindUI&lt;/span&gt;(&amp;#123; &lt;span class=&#34;attr&#34;&gt;element&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;#search&amp;quot;&lt;/span&gt; &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (searchString) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      pagefind.&lt;span class=&#34;title function_&#34;&gt;triggerSearch&lt;/span&gt;(searchString);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// setting the focus into the generated INPUT field as it appears&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title function_&#34;&gt;waitForElm&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;.pagefind-ui__search-input&amp;quot;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;then&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;elm&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    elm.&lt;span class=&#34;title function_&#34;&gt;focus&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;You can try my solution here: &lt;strong&gt;&lt;a href=&#34;/search/?q=pagefind&#34;&gt;&amp;#x2F;search&amp;#x2F;?q&amp;#x3D;pagefind&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

        </content>
        <category term="Tools" scheme="https://kiko.io/categories/Tools/" />
        <category term="Hexo" scheme="https://kiko.io/tags/Hexo/" />
        <category term="Blogging" scheme="https://kiko.io/tags/Blogging/" />
        <category term="Search" scheme="https://kiko.io/tags/Search/" />
    </entry>
    <entry>
        <id>https://kiko.io/post/Radio-Garden/</id>
        <title>Radio Garden</title>
        <published>2023-02-01T23:00:00.000Z</published>
        <updated>2023-02-01T23:00:00.000Z</updated>
        <link href="https://kiko.io/post/Radio-Garden/"/>
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Radio-Garden.thumb.png" height="1200" width="630" />
        <content type="html">
            
            
            &lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Radio-Garden.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;In the age of streaming services, radio may seem out of date, but it still surrounds us constantly, even if we often hardly notice it - in the car, on the public transport, at work or simply at home in the kitchen. One strength of the old medium is that it presents us with music we haven’t heard before, away from our playlists on Spotify or iTunes.&lt;/p&gt;
&lt;p&gt;The easiest way to rediscover new artists or entire genres of music is to pick a radio station at random. It’s precisely this lack of control, the being at the mercy, the sometimes unpredictable that makes the medium so appealing to many - and with digital streaming, many of the world’s stations are just a tap away.&lt;/p&gt;
&lt;p&gt;As is so often the case in the modern world, it’s the oversupply that leaves some confused and frustrated. You first have to be able to pick out what you might like from the gigantic haystack of options. For this purpose, there are little helpers that more or less independently suggest what you might listen to. One of them stands out from the crowd because, on the one hand, it does not pursue commercial interests and, on the other hand, it approaches the station search very intuitively: &lt;strong&gt;&lt;a href=&#34;https://radio.garden/&#34;&gt;Radio Garden (https://radio.garden)&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h2 id=&#34;Indian-esotericism-Estonian-metal&#34;&gt;&lt;a href=&#34;#Indian-esotericism-Estonian-metal&#34; class=&#34;headerlink&#34; title=&#34;Indian esotericism, Estonian metal&#34;&gt;&lt;/a&gt;Indian esotericism, Estonian metal&lt;/h2&gt;&lt;p&gt;The tool, which works very well in any modern browser, but is also available as an Android or iOS app, initially shows nothing more than an interactive globe on which tens of thousands of green dots whiz by under a round target cursor when you move the map back and forth or zoom into the world. If you set your sights on one of the green dots, the station for that city is loaded and played. If there are several stations in one place, the dot appears larger and you are also offered a station list.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/Radio-Garden/radio-garden-screen-2.png&#34; alt=&#34;Screenshot Radio Garden&#34;&gt;&lt;/p&gt;
&lt;p&gt;This is so intuitive that it instantly awakens the spirit of discovery and in a few minutes you can listen to Japanese, Australian or Peruvian radio stations and decide whether to add them to your list of favorites. Using the search function, you can find not only your local, familiar stations (if they offer an Internet stream), but also thematic stations. The directory even includes some US police stations that stream their radio traffic on the Internet.&lt;/p&gt;
&lt;p&gt;Radio Garden grew out of a scholarly project by the Netherland Institute for Sound and Vision in Hilversum, the Netherlands, which between 2013 and 2016 studied what radio sounds like in other parts of the world and what borders, different cultural identities, and encounters do to the medium.&lt;/p&gt;
&lt;p&gt;The British &lt;a href=&#34;http://puckey.studio/&#34;&gt;&lt;strong&gt;Jonathan Puckey&lt;/strong&gt; and his studio&lt;/a&gt; played a key role in the project and its technical implementation. In several iteration stages, this resulted in the web app radio.garden, which Puckey is still in charge of today. Instead of maps, the team from Amsterdam used satellite images from the beginning to illustrate that radio signals have always had the power to cross borders.&lt;/p&gt;
&lt;p&gt;Radio Garden is free, and you don’t need to register, log in, or even provide an email address. Nothing. Open up, select a station, listen to the radio.&lt;/p&gt;

      &lt;div class=&#34;image-slider&#34; id=&#34;image-slide-xnor0c&#34;&gt;
        &lt;div&gt;&lt;img src=&#34;/post/Radio-Garden/radio-garden-screen-1.png&#34; alt=&#34;Screenshot Radio Garden&#34; /&gt;&lt;/div&gt;&lt;div&gt;&lt;img src=&#34;/post/Radio-Garden/radio-garden-screen-3.png&#34; alt=&#34;Screenshot Radio Garden&#34; /&gt;&lt;/div&gt;&lt;div&gt;&lt;img src=&#34;/post/Radio-Garden/radio-garden-screen-4.png&#34; alt=&#34;Screenshot Radio Garden&#34; /&gt;&lt;/div&gt;
      &lt;/div&gt;
      
    

&lt;p&gt;Unfortunately, there are a few regions in the world that have limited access to the radio.garden website or apps. For example, in the replies to a Mastodon post on the topic, there were some comments from people in the UK who could not access a station outside their island.&lt;/p&gt;
&lt;p&gt;This problem seems to have a licensing background and thus be a Brexit impact, but there are unfortunately no official statements on this. Similarly in Turkey, where the service was discontinued after the Radio and Television Supreme Council there ordered the operator to make license payments, according to Wikipedia. The only way around these restrictions is to use a VPN in another country.&lt;/p&gt;
&lt;p&gt;It’s a lot of fun to roam around the globe and try to follow an Indonesian news broadcast, guess which products the advertisements of a Greek station are trying to sell, let yourself be carried away to other worlds by the spherical sounds of an Indian esoteric station, or really shake your hair to the beat of the hard metal sounds of an Estonian rock station. Radio Garden is a very exciting project, wonderfully presented.&lt;/p&gt;

        </content>
        <category term="Tools" scheme="https://kiko.io/categories/Tools/" />
        <category term="Audio" scheme="https://kiko.io/tags/Audio/" />
    </entry>
    <entry>
        <id>https://kiko.io/post/Integration-of-Pagefind-in-Hexo/</id>
        <title>Integration of Pagefind in Hexo</title>
        <published>2023-01-19T12:24:00.000Z</published>
        <updated>2023-01-19T12:24:00.000Z</updated>
        <link href="https://kiko.io/post/Integration-of-Pagefind-in-Hexo/"/>
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Integration-of-Pagefind-in-Hexo.thumb.png" height="1200" width="630" />
        <content type="html">
            
            
            &lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Integration-of-Pagefind-in-Hexo.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;From the beginning of this blog I wanted to provide some kind of full text search in order to give my users the ability to find stuff by keyword.&lt;/p&gt;
&lt;p&gt;There are a few Hexo plugins that have approached the subject, but it was not really satisfactory and performant. So I relied on the worlds biggest search engine: Google. A search button, which drives out a small input field and with the pressing of the ENTER key the form was sent via GET to &lt;code&gt;//google.com/search&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/Integration-of-Pagefind-in-Hexo/google-site-search.png&#34; alt=&#34;Google Site Search on kiko.io&#34;&gt;&lt;/p&gt;
&lt;p&gt;The procedure was simple, but also burdened with the fact that I always expose my users to Google. At least until now … :)&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mstdn.social/@BryceWrayTX&#34;&gt;Bryce Wray&lt;/a&gt; set me on a new path with his post &lt;a href=&#34;https://www.brycewray.com/posts/2022/12/sweeter-searches-pagefind/&#34;&gt;Sweeter searches with Pagefind&lt;/a&gt;, in which he talks about his experience with the still fairly fresh tool &lt;a href=&#34;https://pagefind.app/&#34;&gt;&lt;strong&gt;Pagefind&lt;/strong&gt;&lt;/a&gt;…&lt;/p&gt;

    &lt;div&gt;
        &lt;blockquote&gt;&lt;p&gt;Pagefind is a fully static search library that aims to perform well on large sites, while using as little of your users’ bandwidth as possible, and without hosting any infrastructure …&lt;/p&gt;
&lt;/blockquote&gt;
        &lt;cite&gt;&lt;a href=&#34;https://pagefind.app/&#34;&gt;--- Liam Bigelow @ pagefind.app&lt;/a&gt;&lt;/cite&gt;
    &lt;/div&gt;
  

&lt;p&gt;Pardon me? A full text search for SSG’s running completely in the browser? It sounded so great that I had to try it right away. And what can I say … it not only works fantastically well, but is also extremely easy to implement. Of course, you have to consider a few things, especially with regard to the SSG Hexo I use, but I didn’t find any big hurdles, also because the tool is so &lt;a href=&#34;https://pageind.app/&#34;&gt;well documented&lt;/a&gt;. Let’s see what my implementation looks like…&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;hr&gt;
&lt;h2 id=&#34;The-Tool-in-Brief&#34;&gt;&lt;a href=&#34;#The-Tool-in-Brief&#34; class=&#34;headerlink&#34; title=&#34;The Tool in Brief&#34;&gt;&lt;/a&gt;The Tool in Brief&lt;/h2&gt;&lt;p&gt;Pagefind it is a Node.js tool and is started via the Node Package Runner (npx) and &lt;strong&gt;runs against the static files already created during the build&lt;/strong&gt;. It indexes all the desired pages or even parts of the pages and creates meta and index files for them in a special build folder, which can be retrieved later via JavaScript. To make things a bit more user-friendly, Pagefind also directly generates the necessary JavaScript and CSS files for a UI.&lt;/p&gt;
&lt;p&gt;… but Liam can explain better how it works: &lt;/p&gt;
&lt;div class=&#34;video-container&#34;&gt;&lt;iframe src=https://www.youtube.com/embed/74lsEXqRQys frameborder=0 allow=autoplay; encrypted-media allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;Implementation-in-Hexo&#34;&gt;&lt;a href=&#34;#Implementation-in-Hexo&#34; class=&#34;headerlink&#34; title=&#34;Implementation in Hexo&#34;&gt;&lt;/a&gt;Implementation in Hexo&lt;/h2&gt;&lt;p&gt;First of all I decided to store all necessary parameters in a supported &lt;a href=&#34;https://pagefind.app/docs/config-sources/&#34;&gt;config file&lt;/a&gt; in the root of my blog project.&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;figcaption&gt;&lt;span&gt;pagefind.yml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;source:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;docs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;bundle_dir:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;pagefind&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;exclude_selectors:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;.note-list&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;.anything-list&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;.article-related&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;source&lt;/code&gt; defines the relative folder where all static files are created during the build and which should now be indexed.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bundle_dir&lt;/code&gt; overrides the default storage folder called &lt;code&gt;_pagefind&lt;/code&gt;, which is created in the build folder for the search files. This is necessary because my blog is built and hosted on &lt;strong&gt;Github Pages&lt;/strong&gt; and the responsible GitHub Action goes over folders with a starting underscore on deployment. More info on that &lt;a href=&#34;https://github.com/orgs/community/discussions/23640&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://github.com/CloudCannon/pagefind/discussions/126&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;exclude_selectors&lt;/code&gt; is a list of all those page elements whose content should NOT be indexed, but more about that later.&lt;/p&gt;
&lt;p&gt;With another setting called &lt;code&gt;glob&lt;/code&gt; it is possible to tell Pagefind which files to index, but this currently has its pitfalls when trying to exclude some. Liam already &lt;a href=&#34;https://github.com/CloudCannon/pagefind/discussions/127&#34;&gt;has this on the screen&lt;/a&gt; for one of the next versions.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;Limiting-Indexing-Content&#34;&gt;&lt;a href=&#34;#Limiting-Indexing-Content&#34; class=&#34;headerlink&#34; title=&#34;Limiting Indexing Content&#34;&gt;&lt;/a&gt;Limiting Indexing Content&lt;/h3&gt;&lt;p&gt;A post on a web page never stands alone, but is surrounded by other elements such as navigation, further links, etc. However, these addional elements should not end up in the index. Pagefind skips some of them like &lt;code&gt;nav&lt;/code&gt;, &lt;code&gt;form&lt;/code&gt; or &lt;code&gt;script&lt;/code&gt; automatically, but there always remain some that should be excluded by hand.&lt;/p&gt;
&lt;p&gt;Best option to narrow down the indexable content is the use of the attribute &lt;code&gt;data-pagefind-body&lt;/code&gt;. Instead of excluding something, tell Pagefind what to include. However, this approach makes it easier, but also has consequences:&lt;/p&gt;

    &lt;div&gt;
        &lt;blockquote&gt;&lt;p&gt;If &lt;em&gt;data-pagefind-body&lt;/em&gt; is found &lt;strong&gt;anywhere&lt;/strong&gt; on your site, any pages without this attribute will be removed from your index.&lt;/p&gt;
&lt;/blockquote&gt;
        &lt;cite&gt;&lt;a href=&#34;https://pagefind.app/docs/indexing/&#34;&gt;--- pagefind.app&lt;/a&gt;&lt;/cite&gt;
    &lt;/div&gt;
  

&lt;p&gt;In my case, I had a few places in my templates that I needed to add the attribute to:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;File&lt;/th&gt;
&lt;th&gt;Element&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;Post&lt;/td&gt;
&lt;td&gt;_partial&amp;#x2F;article.ejs&lt;/td&gt;
&lt;td&gt;article&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Notes&lt;/td&gt;
&lt;td&gt;note.ejs&lt;/td&gt;
&lt;td&gt;article&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Page&lt;/td&gt;
&lt;td&gt;page.ejs&lt;/td&gt;
&lt;td&gt;.page-content&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dynamic Page&lt;/td&gt;
&lt;td&gt;[name].ejs&lt;/td&gt;
&lt;td&gt;.page-content&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Anything Page&lt;/td&gt;
&lt;td&gt;_partial&amp;#x2F;anything-page-item.ejs&lt;/td&gt;
&lt;td&gt;.anything-content&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;All elements inside of the elements attributed like that, I had to exclude via the setting &lt;code&gt;exclude_selectors&lt;/code&gt; in the config (see above).&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;Specifying-Meta-Information&#34;&gt;&lt;a href=&#34;#Specifying-Meta-Information&#34; class=&#34;headerlink&#34; title=&#34;Specifying Meta Information&#34;&gt;&lt;/a&gt;Specifying Meta Information&lt;/h3&gt;&lt;p&gt;It was important to me to show the date of a post in the search result, because nothing is as inaccurate as a post that is many years old. With Pagefind you select the HTML element in the templates in which the meta value is located and attribute it with &lt;code&gt;data-pagefind-meta&lt;/code&gt;, for example:&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption&gt;&lt;span&gt;date.ejs&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;published dt-published&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;itemprop&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;datePublished&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;data-pagefind-meta&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;%= date(page.date, &amp;#x27;DD MMM YYYY&amp;#x27;) %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;time&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;As title for the search hit Pagefind searches for H1 tags and takes the value of the last tag it finds. If you are not sure that there is always only one H1 tag on the page (and for me it is), then you better specify which tag it should take:&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption&gt;&lt;span&gt;title.ejs&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;%= class_name %&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;itemprop&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;data-pagefind-meta&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;%= post.title %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Thus, on specifying meta data you can refer not only to the content of a tag, but also to other attributes. Here’s the example for my special Hexo implementation for header images:&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption&gt;&lt;span&gt;photograph.ejs&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;header-photo&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;data-pagefind-meta&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;image[src], image_alt[alt]&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;     &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;/photos/normal/&amp;lt;%= page.photograph.file %&amp;gt;&amp;quot;&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;     &lt;span class=&#34;attr&#34;&gt;alt&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;%= page.photograph.name%&amp;gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;     &lt;span class=&#34;attr&#34;&gt;width&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;height&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;In case there is simply no element that contains the meta value, you can also specify it within the attribute:&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption&gt;&lt;span&gt;article.ejs&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;article&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;note-&amp;lt;%= page.slug %&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;itemprop&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;blogPost&amp;quot;&lt;/span&gt;   &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;       &lt;span class=&#34;attr&#34;&gt;data-pagefind-body&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;       &lt;span class=&#34;attr&#34;&gt;data-pagefind-meta&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;type:Note&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;article&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h3 id=&#34;Adding-a-Search-Page&#34;&gt;&lt;a href=&#34;#Adding-a-Search-Page&#34; class=&#34;headerlink&#34; title=&#34;Adding a Search Page&#34;&gt;&lt;/a&gt;Adding a Search Page&lt;/h3&gt;&lt;p&gt;Pagefind includes not only everything to get search results from the created index by JavaScript, but also the complete &lt;a href=&#34;https://pagefind.app/docs/ui/&#34;&gt;UI for a search page&lt;/a&gt;, which means that you can build the complete search into your site yourself, or simply take a pre-built UI and visually customize it if necessary. I did the latter.&lt;/p&gt;
&lt;p&gt;The following code is the basic structure of the search page as suggested by Pagefind:&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;link&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;href&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;/pagefind/pagefind-ui.css&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;rel&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;/pagefind/pagefind-ui.js&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;search&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;DOMContentLoaded&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;event&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;PagefindUI&lt;/span&gt;(&amp;#123; &lt;span class=&#34;attr&#34;&gt;element&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;#search&amp;quot;&lt;/span&gt; &amp;#125;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;To accommodate this in Hexo, it is advisable to use your own template and generate the page with an appropriate generator. A standard PAGE in Markdown format is only conditionally suitable for this, because links and scripts are needed. I described how to implement such a generator that renders descriptive Markdown in addition to the EJS template in my post &lt;a href=&#34;/post/Pattern-for-dynamic-Hexo-pages/&#34; title=&#34;Pattern for dynamic Hexo pages&#34;&gt;Pattern for dynamic Hexo pages&lt;/a&gt;, and I’ve taken that approach here as well.&lt;/p&gt;
&lt;p&gt;For simplicity, I won’t list the full code here, but link to my blog’s GitHub repo:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;File&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/kristofzerbe/kiko.io/blob/master/source/_dynamic/search.md&#34;&gt;&lt;em&gt;&amp;#x2F;source&amp;#x2F;_dynamic&amp;#x2F;&lt;/em&gt;&lt;br&gt;&lt;strong&gt;search.md&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Markdown file with Frontmatter data and introduction text&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/kristofzerbe/kiko.io/blob/master/themes/landscape/layout/search.ejs&#34;&gt;&lt;em&gt;&amp;#x2F;themes&amp;#x2F;landscape&amp;#x2F;layout&amp;#x2F;&lt;/em&gt;&lt;br&gt;&lt;strong&gt;search.ejs&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Layout template for search page&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/kristofzerbe/kiko.io/blob/master/themes/landscape/script/generator-dynamic-search.js&#34;&gt;&lt;em&gt;&amp;#x2F;themes&amp;#x2F;landscape&amp;#x2F;script&amp;#x2F;&lt;/em&gt;&lt;br&gt;&lt;strong&gt;generator-dynamic-search.js&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Hexo Generator for creating the page during build&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/kristofzerbe/kiko.io/blob/master/themes/landscape/script/source/css/_pagefind.styl&#34;&gt;&lt;em&gt;&amp;#x2F;themes&amp;#x2F;landscape&amp;#x2F;script&amp;#x2F;source&amp;#x2F;css&amp;#x2F;&lt;/em&gt;&lt;br&gt;&lt;strong&gt;_pagefind.styl&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Customized CSS Variables and style overrides&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;For the visual customization of the user interface Pagefind provides some CSS variables in the automatically generated CSS file. These help a bit to customize the UI to your own ideas, but I decided to override some of the styles in a seperate file called &lt;code&gt;_pagefind.styl&lt;/code&gt;, which will be bundled via &lt;code&gt;@import &amp;quot;_pagefind&amp;quot;&lt;/code&gt; in the main &lt;code&gt;styles.styl&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Since the main bundled CSS file is loaded in the HEAD before the &lt;code&gt;_pagefind.css&lt;/code&gt; somewhere in the page, for simplicity I first made sure to pull the overrides with &lt;code&gt;!important&lt;/code&gt;. This is not yet pretty and I will have to revise this later on.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;Running-Build-and-Pagefind&#34;&gt;&lt;a href=&#34;#Running-Build-and-Pagefind&#34; class=&#34;headerlink&#34; title=&#34;Running Build and Pagefind&#34;&gt;&lt;/a&gt;Running Build and Pagefind&lt;/h3&gt;&lt;p&gt;Thus prepared, the rest is a piece of cake. Pagefind does not need to be installed, because if you call the npm package via npx, the latest version will be downloaded and executed automatically. You just have to make sure that the hexo build has run before. The best way is to run the following command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hexo clean &amp;amp;&amp;amp; hexo generate &amp;amp;&amp;amp;&lt;/code&gt;&lt;strong&gt;&lt;code&gt;npx pagefind&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This my result in the console:&lt;/p&gt;
&lt;figure class=&#34;highlight accesslog&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Running Pagefind v0.&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;.&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; (Extended)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Running from: &lt;span class=&#34;string&#34;&gt;&amp;quot;...\\kiko.io&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Source:       &lt;span class=&#34;string&#34;&gt;&amp;quot;docs&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Bundle Directory:  &lt;span class=&#34;string&#34;&gt;&amp;quot;pagefind&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;[Walking source directory]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Found &lt;span class=&#34;number&#34;&gt;319&lt;/span&gt; files matching **/*.&amp;#123;html&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;[Parsing files]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Found a data-pagefind-body element on the site.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;↳ Ignoring pages without this tag.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;[Reading languages]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Discovered &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; language: en&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;[Building search indexes]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Total: &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Indexed &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; language&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Indexed &lt;span class=&#34;number&#34;&gt;124&lt;/span&gt; pages&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Indexed &lt;span class=&#34;number&#34;&gt;7220&lt;/span&gt; words&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Indexed &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; filters&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Indexed &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; sorts&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Finished in &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;.&lt;span class=&#34;number&#34;&gt;924&lt;/span&gt; seconds&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h3 id=&#34;Mount-in-GitHub-Action&#34;&gt;&lt;a href=&#34;#Mount-in-GitHub-Action&#34; class=&#34;headerlink&#34; title=&#34;Mount in GitHub Action&#34;&gt;&lt;/a&gt;Mount in GitHub Action&lt;/h3&gt;&lt;p&gt;Since I am hosting this blog on GitHub Pages and the complete build and deployment is done by a GitHub Action, I added a step to the &lt;code&gt;hexo-build&lt;/code&gt; job in the workflow file so that after the build Pagefind indexes the result:&lt;/p&gt;
&lt;figure class=&#34;highlight yml&#34;&gt;&lt;figcaption&gt;&lt;span&gt;hexo-build.yml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;jobs:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;hexo-build:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;runs-on:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;ubuntu-latest&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;steps:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;string&#34;&gt;...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Build&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;run:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;run&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;generate&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Run&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Pagefind&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;run:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;npm_config_yes=true&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;npx&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;pagefind&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;string&#34;&gt;...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Thankfully, in his article on Pagefind, Bryce also put me on the track of how to prevent a possible security prompt caused by npx from blocking Pagefind to run … &lt;a href=&#34;/notes/2023/avoid-npx-install-prompt/&#34;&gt;npm_config_yes&amp;#x3D;true&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;The-Result&#34;&gt;&lt;a href=&#34;#The-Result&#34; class=&#34;headerlink&#34; title=&#34;The Result&#34;&gt;&lt;/a&gt;The Result&lt;/h3&gt;&lt;p&gt;The finished solution is really amazing. As soon as you start typing, the included Pagefind JavaScript updates the results list … and it’s sooo fast. Really an exciting tool. Thanks to Liam and CloudCannon.&lt;/p&gt;

    &lt;a href=&#34;/search&#34;&gt;
        &lt;img src=&#34;kiko-io-search.png&#34; alt=&#34;Pagefind Search on kiko.io&#34; /&gt;
    &lt;/a&gt;
    

&lt;p&gt;I hope that my explanation has inspired you to try it out for yourself on your Hexo driven blog or website. If you need some help or advice, drop me a line…&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;More-Info&#34;&gt;&lt;a href=&#34;#More-Info&#34; class=&#34;headerlink&#34; title=&#34;More Info&#34;&gt;&lt;/a&gt;More Info&lt;/h2&gt;
        &lt;ul class=&#34;moreinfo-list&#34;&gt;
            &lt;li&gt;CloudCannon: &lt;a href=&#34;https://pagefind.app/&#34;&gt;Pagefind&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Liam Bigelow: &lt;a href=&#34;https://cloudcannon.com/blog/introducing-pagefind/&#34;&gt;Introducing Pagefind: Static Low-bandwidth Search at Scale&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Bryce Wray: &lt;a href=&#34;https://www.brycewray.com/posts/2022/07/pagefind-quite-find-site-search/&#34;&gt;Pagefind is quite a find for site search&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Bryce Wray: &lt;a href=&#34;https://www.brycewray.com/posts/2022/12/sweeter-searches-pagefind/&#34;&gt;Sweeter searches with Pagefind&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Nicolas Deville: &lt;a href=&#34;https://notes.nicolasdeville.com/helpers/pagefind/&#34;&gt;Pagefind&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
    

        </content>
        <category term="Tools" scheme="https://kiko.io/categories/Tools/" />
        <category term="Hexo" scheme="https://kiko.io/tags/Hexo/" />
        <category term="Blogging" scheme="https://kiko.io/tags/Blogging/" />
        <category term="Search" scheme="https://kiko.io/tags/Search/" />
    </entry>
    <entry>
        <id>https://kiko.io/post/Favourite-Pens-of-2022/</id>
        <title>Favourite Pens of 2022</title>
        <published>2023-01-14T12:10:48.000Z</published>
        <updated>2023-01-14T12:10:48.000Z</updated>
        <link href="https://kiko.io/post/Favourite-Pens-of-2022/"/>
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Favourite-Pens-of-2022.thumb.png" height="1200" width="630" />
        <content type="html">
            
            
            &lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Favourite-Pens-of-2022.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;Every year CodePen publishes a list of the 100 most “liked” pens on their site: &lt;a href=&#34;https://codepen.io/2022/popular/&#34;&gt;The Most Hearted of 2022&lt;/a&gt;. It’s always exciting to scroll through the list and marvel at the incredibly good work of CSS artists. &lt;/p&gt;
&lt;p&gt;My favorite in terms of CSS coding art this year is the work &lt;a href=&#34;https://codepen.io/ivorjetski/pen/yLjeqgb&#34;&gt;A moment of pure CSS&lt;/a&gt; by Ben Evans. Absolutely amazing what he does with pure CSS:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/Favourite-Pens-of-2022/a-moment-of-pure-css.png&#34; alt=&#34;Really ... no image involved!&#34;&gt;&lt;/p&gt;
&lt;p&gt;From all these works you can take a lot of know-how for yourself, but many of these pens have no practical use at first, i.e. you can’t really use them directly on your own website. They are art. Some of them impressed me not only because of their creativity, but I saved them on my own Trello list to try them out in one of the next projects. Partly they are clever approaches regarding usability, partly more or less standard functions were implemented in a visually impressive way. Some of them need some JS to work, sime of them not. Let yourself be inspired …&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;hr&gt;&lt;br&gt;

&lt;h2 id=&#34;1-iOS-Notifications-by-Yoav-Kadosh&#34;&gt;&lt;a href=&#34;#1-iOS-Notifications-by-Yoav-Kadosh&#34; class=&#34;headerlink&#34; title=&#34;1. iOS Notifications by Yoav Kadosh&#34;&gt;&lt;/a&gt;1. iOS Notifications by Yoav Kadosh&lt;/h2&gt;
    &lt;iframe height=&#34;400&#34; 
        id=&#34;codepen-ZERjpRJ&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/ZERjpRJ?height=400&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: iOS Notifications&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-Lotsa-Notifications-by-Jon-Kantner&#34;&gt;&lt;a href=&#34;#2-Lotsa-Notifications-by-Jon-Kantner&#34; class=&#34;headerlink&#34; title=&#34;2. Lotsa Notifications by Jon Kantner&#34;&gt;&lt;/a&gt;2. Lotsa Notifications by Jon Kantner&lt;/h2&gt;
    &lt;iframe height=&#34;400&#34; 
        id=&#34;codepen-XWzePgp&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/XWzePgp?height=400&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Lotsa Notifications&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;3-Animated-Star-Rating-by-Jon-Kantner&#34;&gt;&lt;a href=&#34;#3-Animated-Star-Rating-by-Jon-Kantner&#34; class=&#34;headerlink&#34; title=&#34;3. Animated Star Rating by Jon Kantner&#34;&gt;&lt;/a&gt;3. Animated Star Rating by Jon Kantner&lt;/h2&gt;
    &lt;iframe height=&#34;400&#34; 
        id=&#34;codepen-BarvVNa&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/BarvVNa?height=400&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Animated Star Rating&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;4-Changing-Face-Rating-by-Jon-Kantner&#34;&gt;&lt;a href=&#34;#4-Changing-Face-Rating-by-Jon-Kantner&#34; class=&#34;headerlink&#34; title=&#34;4. Changing Face Rating by Jon Kantner&#34;&gt;&lt;/a&gt;4. Changing Face Rating by Jon Kantner&lt;/h2&gt;
    &lt;iframe height=&#34;400&#34; 
        id=&#34;codepen-YzLQoXM&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/YzLQoXM?height=400&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Changing Face Rating&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;5-CSS-Minimal-Dark-Mode-Toggle-Button-by-Greg-Vissing&#34;&gt;&lt;a href=&#34;#5-CSS-Minimal-Dark-Mode-Toggle-Button-by-Greg-Vissing&#34; class=&#34;headerlink&#34; title=&#34;5. CSS Minimal Dark Mode Toggle Button by Greg Vissing&#34;&gt;&lt;/a&gt;5. CSS Minimal Dark Mode Toggle Button by Greg Vissing&lt;/h2&gt;
    &lt;iframe height=&#34;400&#34; 
        id=&#34;codepen-OJvxoJq&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/OJvxoJq?height=400&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: CSS Minimal Dark Mode Toggle Button&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;6-Menu-micro-interaction-with-CSS-by-Mert-Cukuren&#34;&gt;&lt;a href=&#34;#6-Menu-micro-interaction-with-CSS-by-Mert-Cukuren&#34; class=&#34;headerlink&#34; title=&#34;6. Menu micro-interaction with CSS by Mert Cukuren&#34;&gt;&lt;/a&gt;6. Menu micro-interaction with CSS by Mert Cukuren&lt;/h2&gt;
    &lt;iframe height=&#34;400&#34; 
        id=&#34;codepen-rNJxwGR&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/rNJxwGR?height=400&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Menu micro-interaction with CSS&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;7-Animated-BottomBar-Experiment-by-Chris-Bautista&#34;&gt;&lt;a href=&#34;#7-Animated-BottomBar-Experiment-by-Chris-Bautista&#34; class=&#34;headerlink&#34; title=&#34;7. Animated BottomBar Experiment by Chris Bautista&#34;&gt;&lt;/a&gt;7. Animated BottomBar Experiment by Chris Bautista&lt;/h2&gt;
    &lt;iframe height=&#34;400&#34; 
        id=&#34;codepen-NWXjqLN&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/NWXjqLN?height=400&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Animated BottomBar Experiment&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;8-Progress-Button-by-Taylon-Chan&#34;&gt;&lt;a href=&#34;#8-Progress-Button-by-Taylon-Chan&#34; class=&#34;headerlink&#34; title=&#34;8. Progress Button by Taylon, Chan&#34;&gt;&lt;/a&gt;8. Progress Button by Taylon, Chan&lt;/h2&gt;
    &lt;iframe height=&#34;400&#34; 
        id=&#34;codepen-dyepVJp&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/dyepVJp?height=400&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Progress Button&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;9-Gradient-background-with-waves-by-Barbara-Rodriguez&#34;&gt;&lt;a href=&#34;#9-Gradient-background-with-waves-by-Barbara-Rodriguez&#34; class=&#34;headerlink&#34; title=&#34;9. Gradient background with waves by Bárbara Rodríguez&#34;&gt;&lt;/a&gt;9. Gradient background with waves by Bárbara Rodríguez&lt;/h2&gt;
    &lt;iframe height=&#34;400&#34; 
        id=&#34;codepen-KKovmGb&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/KKovmGb?height=400&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Gradient background with waves&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;10-Cascading-CSS-Text-Effects-by-Jhey&#34;&gt;&lt;a href=&#34;#10-Cascading-CSS-Text-Effects-by-Jhey&#34; class=&#34;headerlink&#34; title=&#34;10. Cascading CSS Text Effects by Jhey&#34;&gt;&lt;/a&gt;10. Cascading CSS Text Effects by Jhey&lt;/h2&gt;
    &lt;iframe height=&#34;400&#34; 
        id=&#34;codepen-gOeGmRN&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/gOeGmRN?height=400&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Cascading CSS Text Effects&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

        </content>
        <category term="UI/UX" scheme="https://kiko.io/categories/UI-UX/" />
        <category term="CSS" scheme="https://kiko.io/tags/CSS/" />
        <category term="Collection" scheme="https://kiko.io/tags/Collection/" />
        <category term="UI" scheme="https://kiko.io/tags/UI/" />
    </entry>
    <entry>
        <id>https://kiko.io/post/Discoveries-22-Tips-Tricks/</id>
        <title>Discoveries #22 -  Tips/Tricks</title>
        <published>2023-01-06T14:05:55.000Z</published>
        <updated>2023-01-06T14:05:55.000Z</updated>
        <link href="https://kiko.io/post/Discoveries-22-Tips-Tricks/"/>
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Discoveries-22-Tips-Tricks.thumb.png" height="1200" width="630" />
        <content type="html">
            
            
            &lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Discoveries-22-Tips-Tricks.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;As someone said the other day? “January is the Monday of the year”. How true. After programming myself a new workflow for creating my discoveries (see &lt;a href=&#34;/post/Generate-Content-from-Trello/&#34;&gt;Generate Content from Trello&lt;/a&gt;) at the end of last year, I wanted to try it out again right away and give you a list of tips and tricks for starting 2023.&lt;/p&gt;

        &lt;ul class=&#34;anchorlist&#34;&gt;
            &lt;li data-anchor=&#34;#6-steps-to-get-verified-on-mastodon-with-encrypted-keys&#34;&gt;6 steps to get verified on Mastodon with encrypted keys&lt;/li&gt;&lt;li data-anchor=&#34;#generate-a-pull-request-of-static-content-with-a-simple-html-form&#34;&gt;Generate a Pull Request of Static Content With a Simple HTML Form&lt;/li&gt;&lt;li data-anchor=&#34;#my-wonderful-html-email-workflow-using-mjml-and-mdx-for-responsive-emails&#34;&gt;My Wonderful HTML Email Workflow, using MJML and MDX for responsive emails&lt;/li&gt;&lt;li data-anchor=&#34;#how-to-view-build-logs-for-github-pages&#34;&gt;How to View Build Logs for GitHub Pages&lt;/li&gt;&lt;li data-anchor=&#34;#enabling-intellisense-for-github-actions-workflows-in-vs-code&#34;&gt;Enabling IntelliSense for GitHub Actions workflows in VS Code&lt;/li&gt;&lt;li data-anchor=&#34;#9-javascript-console-tips-that-will-improve-your-debugging-skills&#34;&gt;9 JavaScript Console Tips That Will Improve Your Debugging Skills&lt;/li&gt;&lt;li data-anchor=&#34;#fun-with-console-log-&#34;&gt;Fun with console.log()&lt;/li&gt;&lt;li data-anchor=&#34;#load-hierarchical-data-from-mssql-with-recursive-common-table-expressions&#34;&gt;Load hierarchical data from MSSQL with recursive common table expressions&lt;/li&gt;&lt;li data-anchor=&#34;#an-html-first-mental-model&#34;&gt;An HTML-first Mental Model&lt;/li&gt;&lt;li data-anchor=&#34;#project-documentation-with-hexo-static-site-generator&#34;&gt;Project Documentation with Hexo Static Site Generator&lt;/li&gt;
        &lt;/ul&gt;
    

&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;


    &lt;hr id=&#34;6-steps-to-get-verified-on-mastodon-with-encrypted-keys&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      6 steps to get verified on Mastodon with encrypted keys
    &lt;/h2&gt;
    &lt;small&gt;by Seth Kenlon&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://opensource.com/article/22/12/verified-mastodon-pgp-keyoxide&#34;&gt;https://opensource.com/article/22/12/verified-mastodon-pgp-keyoxide&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;To verify that you control your Mastodon account, the easiest way is to add a verification link in your profile, which points to your blog&amp;#x2F;website and where Mastodon find a link attributed with &amp;#39;rel&amp;#x3D;me&amp;#39;. For advanced verification you can use the power of shared encrypted keys, which Mastodon can link to thanks to the open source project Keyoxide … and Seth shows how to get it.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://opensource.com/article/22/12/verified-mastodon-pgp-keyoxide&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;6-steps-to-get-verified-on-mastodon-with-encrypted-keys.png&#34; alt=&#34;6 steps to get verified on Mastodon with encrypted keys&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;generate-a-pull-request-of-static-content-with-a-simple-html-form&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Generate a Pull Request of Static Content With a Simple HTML Form
    &lt;/h2&gt;
    &lt;small&gt;by Hilman Ramadhan&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://css-tricks.com/generate-a-pull-request-of-static-content-with-a-simple-html-form/&#34;&gt;https://css-tricks.com/generate-a-pull-request-of-static-content-with-a-simple-html-form/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Hosting your static files blog&amp;#x2F;site&amp;#x2F;whatever on GitHub and wan&amp;#39;t others to contribute? Hilman has an idea to achieve this via a standard form, that creates a Pull Request!&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://css-tricks.com/generate-a-pull-request-of-static-content-with-a-simple-html-form/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;generate-a-pull-request-of-static-content-with-a-simple-html-form.png&#34; alt=&#34;Generate a Pull Request of Static Content With a Simple HTML Form&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;my-wonderful-html-email-workflow-using-mjml-and-mdx-for-responsive-emails&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      My Wonderful HTML Email Workflow, using MJML and MDX for responsive emails
    &lt;/h2&gt;
    &lt;small&gt;by Josh Comeau&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://www.joshwcomeau.com/react/wonderful-emails-with-mjml-and-mdx/&#34;&gt;https://www.joshwcomeau.com/react/wonderful-emails-with-mjml-and-mdx/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Writing HTML E-Mails can be challenging, because you can&amp;#39;t use all the modern stuff. For a good reason the technique building mails has stuck in the 90s. Josh&amp;#39;s tutorial is about using the framework MJML (Mailjet Markup Language), which offers an abstraction layer over raw HTML.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://www.joshwcomeau.com/react/wonderful-emails-with-mjml-and-mdx/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;my-wonderful-html-email-workflow-using-mjml-and-mdx-for-responsive-emails.png&#34; alt=&#34;My Wonderful HTML Email Workflow, using MJML and MDX for responsive emails&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;how-to-view-build-logs-for-github-pages&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      How to View Build Logs for GitHub Pages
    &lt;/h2&gt;
    &lt;small&gt;by Rizèl Scarlett&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://dev.to/github/visualize-github-pages-build-logs-1mc1&#34;&gt;https://dev.to/github/visualize-github-pages-build-logs-1mc1&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;GitHub Pages are build with Jekyll and as the deployments runs with GitHub Actions it&amp;#39;s easy to view the build details. But more interesting in Rizèl&amp;#39;s article is as he describes a fully custom deployment without Jekyll.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://dev.to/github/visualize-github-pages-build-logs-1mc1&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;how-to-view-build-logs-for-github-pages.png&#34; alt=&#34;How to View Build Logs for GitHub Pages&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;enabling-intellisense-for-github-actions-workflows-in-vs-code&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Enabling IntelliSense for GitHub Actions workflows in VS Code
    &lt;/h2&gt;
    &lt;small&gt;by Gérald Barré&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://www.meziantou.net/enabling-intellisense-for-github-actions-workflows-in-vs-code.htm&#34;&gt;https://www.meziantou.net/enabling-intellisense-for-github-actions-workflows-in-vs-code.htm&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;There are som VS Code Plugins out there, which supports Intellisense while writing workflow YAML files for configuring GitHub Actions. Gérald has a tip how to achieve that manually.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://www.meziantou.net/enabling-intellisense-for-github-actions-workflows-in-vs-code.htm&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;enabling-intellisense-for-github-actions-workflows-in-vs-code.png&#34; alt=&#34;Enabling IntelliSense for GitHub Actions workflows in VS Code&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;9-javascript-console-tips-that-will-improve-your-debugging-skills&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      9 JavaScript Console Tips That Will Improve Your Debugging Skills
    &lt;/h2&gt;
    &lt;small&gt;by Sunil Sandhu&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://blog.bitsrc.io/9-javascript-console-tips-that-will-improve-your-debugging-skills-1899e37469d5&#34;&gt;https://blog.bitsrc.io/9-javascript-console-tips-that-will-improve-your-debugging-skills-1899e37469d5&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;The console is more powerful than you might think. Sunil talks here about the possibilities to debug a bit better and more efficient. I have to use &amp;#39;time&amp;#39; more often…&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://blog.bitsrc.io/9-javascript-console-tips-that-will-improve-your-debugging-skills-1899e37469d5&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;9-javascript-console-tips-that-will-improve-your-debugging-skills.png&#34; alt=&#34;9 JavaScript Console Tips That Will Improve Your Debugging Skills&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;fun-with-console-log-&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Fun with console.log()
    &lt;/h2&gt;
    &lt;small&gt;by Alicia Sykes&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://dev.to/lissy93/fun-with-consolelog-3i59&#34;&gt;https://dev.to/lissy93/fun-with-consolelog-3i59&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;In addition to Sunils tips above, Alicia summarizes it here and has some more tips for efficient debugging in the browser.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://dev.to/lissy93/fun-with-consolelog-3i59&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;fun-with-console-log-.png&#34; alt=&#34;Fun with console.log()&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;load-hierarchical-data-from-mssql-with-recursive-common-table-expressions&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Load hierarchical data from MSSQL with recursive common table expressions
    &lt;/h2&gt;
    &lt;small&gt;by Robert Muehsig&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://blog.codeinside.eu/2019/03/31/load-hierarchical-data-from-mssql-with-recursive-common-table-expressions/&#34;&gt;https://blog.codeinside.eu/2019/03/31/load-hierarchical-data-from-mssql-with-recursive-common-table-expressions/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Designing a hierachie inside MS SQL can be painfull, but at least there is a way to load this data in a fast way, as Robert shows.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://blog.codeinside.eu/2019/03/31/load-hierarchical-data-from-mssql-with-recursive-common-table-expressions/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;load-hierarchical-data-from-mssql-with-recursive-common-table-expressions.png&#34; alt=&#34;Load hierarchical data from MSSQL with recursive common table expressions&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;an-html-first-mental-model&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      An HTML-first Mental Model
    &lt;/h2&gt;
    &lt;small&gt;by Noam Rosenthal&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://calendar.perfplanet.com/2022/an-html-first-mental-model/&#34;&gt;https://calendar.perfplanet.com/2022/an-html-first-mental-model/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Noam, from Google Chrome&amp;#39;s speed metrics team, writes about his experiences on developing a showcase movies app using different frameworks regarding speed and performance in the browser and why we always keep good old HTML in mind.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://calendar.perfplanet.com/2022/an-html-first-mental-model/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;an-html-first-mental-model.png&#34; alt=&#34;An HTML-first Mental Model&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;project-documentation-with-hexo-static-site-generator&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Project Documentation with Hexo Static Site Generator
    &lt;/h2&gt;
    &lt;small&gt;by Bruno Mota&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://www.sitepoint.com/project-documentation-hexo/&#34;&gt;https://www.sitepoint.com/project-documentation-hexo/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Bruno Mota looks at how you can create project documentation using Hexo, the static site generator built on Node.js, and deploy easily to GitHub Pages. Some stuff to learn there for me, who runs this blog nearly the same way…&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://www.sitepoint.com/project-documentation-hexo/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;project-documentation-with-hexo-static-site-generator.png&#34; alt=&#34;Project Documentation with Hexo Static Site Generator&#34; /&gt;
    &lt;/a&gt;
  


        </content>
        <category term="Misc" scheme="https://kiko.io/categories/Misc/" />
        <category term="Collection" scheme="https://kiko.io/tags/Collection/" />
    </entry>
    <entry>
        <id>https://kiko.io/post/Generate-Content-from-Trello/</id>
        <title>Generate Content from Trello</title>
        <published>2022-12-29T11:08:00.000Z</published>
        <updated>2022-12-29T11:08:00.000Z</updated>
        <link href="https://kiko.io/post/Generate-Content-from-Trello/"/>
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Generate-Content-from-Trello.thumb.png" height="1200" width="630" />
        <content type="html">
            
            
            &lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Generate-Content-from-Trello.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;I’m collecting&amp;#x2F;bookmarking links to interesting website post on a public Trello board and aggregating them from time to time in a special post series called &lt;em&gt;Discoveries&lt;/em&gt;, where I present 10 of them in one post on a specific topic.&lt;/p&gt;
&lt;p&gt;Writing these summaries is currently still a bit time-consuming, because in addition to the link, the name of the author and a small description, I would also like to display a screenshot of the page in each case … and it is still a completely manual process.&lt;/p&gt;
&lt;p&gt;After selecting the 10 links I want to talk about, I first create a new post for my Hexo blog and then process the links as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Creating, resizing and saving the screenshot&lt;/li&gt;
&lt;li&gt;Creating a new section in the post&lt;/li&gt;
&lt;li&gt;Setting a key for the post based on the title&lt;/li&gt;
&lt;li&gt;Setting the title&lt;/li&gt;
&lt;li&gt;Setting the author&lt;/li&gt;
&lt;li&gt;Setting the screenshot file&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I do use two tag plugins (&lt;a href=&#34;https://github.com/kristofzerbe/kiko.io/blob/2c80a548e188c05879039a15e67419b548bfbfcd/themes/landscape/scripts/tag-anchorlist.js&#34;&gt;tag-anchorlist&lt;/a&gt; and &lt;a href=&#34;https://github.com/kristofzerbe/kiko.io/blob/2c80a548e188c05879039a15e67419b548bfbfcd/themes/landscape/scripts/tag-discovery.js&#34;&gt;tag-discovery&lt;/a&gt;) for this in the post draft, but despite that, it’s quite time-consuming and always the same procedure that can be wonderfully automated… and here I’d like to write about how I approached this task, while I’m working on it.&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;hr&gt;
&lt;h2 id=&#34;The-Trello-List&#34;&gt;&lt;a href=&#34;#The-Trello-List&#34; class=&#34;headerlink&#34; title=&#34;The Trello List&#34;&gt;&lt;/a&gt;The Trello List&lt;/h2&gt;&lt;p&gt;How easy it is to save a link as a card in a Trello board via Chrome, I described recently in my post &lt;a href=&#34;/post/Add-website-to-Trello-card-the-better-way/&#34; title=&#34;Add website to Trello card the better way&#34;&gt;Add website to Trello card the better way&lt;/a&gt;. As this works also in Chrome on Android, I store interesting links on the go mostly. In order to get all information I need later on, I have extended my collections board with a custom field called ‘Author’. For adding the screenshot to the card as an attachment, I use actually the build-in feature of Android 6.&lt;/p&gt;
&lt;p&gt;As I have a long, long list if incoming links, I sort them by topic into an appropriate list, for example, “Discoveries: JS Libraries” and this lists should then be automatically turned into new blog posts as I want to publish one.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/Generate-Content-from-Trello/trello-test-board.png&#34; alt=&#34;Trello Test Board&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;The-Data&#34;&gt;&lt;a href=&#34;#The-Data&#34; class=&#34;headerlink&#34; title=&#34;The Data&#34;&gt;&lt;/a&gt;The Data&lt;/h2&gt;&lt;p&gt;Now, to get the raw data of a Trello list, I could use to the Atlassian API, but that’s not even necessary, because each board can be accessed machine-readable per se via adding &lt;code&gt;.JSON&lt;/code&gt; to the board url. &lt;strong&gt;Prerequisite is that the board is set to PUBLIC&lt;/strong&gt;. The URL is structured according to the following scheme:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://trello.com/b/&amp;lt;WORKPLACE-ID&amp;gt;/&amp;lt;BOARD-NAME&amp;gt;.json&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The URL accepts following parameters (as far as I found out), to filter out some not needed content:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;fields&lt;/strong&gt; (string)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;lists&lt;/strong&gt; (string)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;list_fields&lt;/strong&gt; (string)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;cards&lt;/strong&gt; (string)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;card_fields&lt;/strong&gt; (string)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;card_attachments&lt;/strong&gt; (bool)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;card_attachment_fields&lt;/strong&gt; (string)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;customFields&lt;/strong&gt; (bool)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;card_customFieldItems&lt;/strong&gt; (bool)&lt;/li&gt;
&lt;li&gt;members (bool)&lt;/li&gt;
&lt;li&gt;member_fields (string)&lt;/li&gt;
&lt;li&gt;organization (bool)&lt;/li&gt;
&lt;li&gt;checklists (string)&lt;/li&gt;
&lt;li&gt;checklist_fields (string)&lt;/li&gt;
&lt;li&gt;labels (string)&lt;/li&gt;
&lt;li&gt;actions (string)&lt;/li&gt;
&lt;li&gt;action_fields (string)&lt;/li&gt;
&lt;li&gt;actions_limit (number)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All boolean parameters can assume &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; and the string parameters either &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;none&lt;/code&gt; or (some) a comma-separated value list of fields to show. For example:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://trello.com/b/o2tmzJAw/test.json?fields=none&amp;amp;lists=all&amp;amp;list_fields=name&amp;amp;cards=all&amp;amp;card_fields=desc,idList,name&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;… shows up like this:&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption&gt;&lt;span&gt;Trello JSON (shortened)&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;63a871b59e3b200022455381&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;cards&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt; ... &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;63a8586e7de45d0fc54d0d39&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;&amp;quot;desc&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Kate shows us how to create a tree view as collapsible list, created using only html and css, without the need for JavaScript&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;&amp;quot;idList&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;63a8585dc0c10c020ca9ea03&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Tree views in CSS&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt; ... &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;lists&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;63a997ab23684f02303a0525&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Discoveries INBOX&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;63a8585dc0c10c020ca9ea03&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Discoveries: CSS&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Important to now here is, that most of the data are NOT hierarchially structured, like Board &amp;gt; List &amp;gt; Cards, but in parallel. You have to pick the id of a list to filter the cards array by it. The same with custom fields inside a card: it holds a reference to the custom field list only.&lt;/p&gt;
&lt;p&gt;For the attachments of a card, Trello distinguishes between URL’s and files. The attribute &lt;code&gt;bytes&lt;/code&gt; is null for URLs and the URL itself is in name. Files, on the other hand, have &lt;code&gt;bytes&lt;/code&gt; greater than 0 and a specific &lt;code&gt;mimeType&lt;/code&gt;, while images additionally have up to seven different &lt;code&gt;previews&lt;/code&gt; in the widths 70, 150, 250, 300, 600 and original. Very handy for my case, since I always scale down my screenshots to 600 pixels.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://trello.com/b/o2tmzJAw/test.json?fields=none&amp;amp;lists=all&amp;amp;list_fields=name&amp;amp;cards=all&amp;amp;card_fields=desc,idList,name&amp;amp;card_attachments=true&amp;amp;card_attachment_fields=bytes,mimeType,name,previews&amp;amp;customFields=true&amp;amp;card_customFieldItems=true&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption&gt;&lt;span&gt;... card item in Trello JSON (shortened)&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;63a8586e7de45d0fc54d0d39&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;desc&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Kate shows us how to create a tree view as collapsible list, created using only html and css, without the need for JavaScript&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;idList&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;63a8585dc0c10c020ca9ea03&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Tree views in CSS&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;attachments&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;bytes&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;mimeType&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://iamkate.com/code/tree-views/&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;previews&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;63a8586e7de45d0fc54d0d5b&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;bytes&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;225271&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;mimeType&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;image/png&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Screenshot_20221225-121537.png&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;previews&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt; ... &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;&amp;quot;_id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;63a8586e7de45d0fc54d0d58&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;63a8586e7de45d0fc54d0d58&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;&amp;quot;scaled&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://trello.com/1/cards/63a8586e7de45d0fc54d0d39/attachments/63a8586e7de45d0fc54d0d52/previews/63a8586e7de45d0fc54d0d58/download/Screenshot_20221225-121537.png&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;&amp;quot;bytes&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;111574&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;&amp;quot;height&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;499&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;&amp;quot;width&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;600&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt; ... &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;63a8586e7de45d0fc54d0d52&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h2 id=&#34;The-Generator&#34;&gt;&lt;a href=&#34;#The-Generator&#34; class=&#34;headerlink&#34; title=&#34;The Generator&#34;&gt;&lt;/a&gt;The Generator&lt;/h2&gt;&lt;p&gt;First of all: This generator has NOTHING to do with Hexo’s build-in &lt;a href=&#34;https://hexo.io/api/generator.html&#34;&gt;generators&lt;/a&gt;. It’s just a Node script, which produces MD files that later on will be processed by Hexo into posts!&lt;/p&gt;
&lt;p&gt;What should he do:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download Board JSON from Trello&lt;/li&gt;
&lt;li&gt;Iterate through &lt;code&gt;lists&lt;/code&gt; to find the one to process&lt;/li&gt;
&lt;li&gt;Iterate through &lt;code&gt;cards&lt;/code&gt; to find all referencing the chosen list&lt;/li&gt;
&lt;li&gt;Create new POST object to store all needed information&lt;/li&gt;
&lt;li&gt;Process all found cards…&lt;ol&gt;
&lt;li&gt;Create new ITEM object to store all needed information&lt;/li&gt;
&lt;li&gt;Store TITLE, generated KEY out of TITLE, DESCRIPTION in ITEM&lt;/li&gt;
&lt;li&gt;Resolve AUTHOR from &lt;code&gt;customfields&lt;/code&gt; for ITEM&lt;/li&gt;
&lt;li&gt;Iterate through card &lt;code&gt;attachments&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Store URL in ITEM, when its a link&lt;/li&gt;
&lt;li&gt;Generate IMAGENAME out of KEY and store in ITEM, when its an image&lt;/li&gt;
&lt;li&gt;Create new POST.FOLDER for the images&lt;/li&gt;
&lt;li&gt;Download image from attachment URL into POST.FOLDER as IMAGENAME&lt;/li&gt;
&lt;li&gt;Add ITEM to POST.ITEMS&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Get photograph for new post (kiko.io special, see &lt;a href=&#34;/post/Automatic-Header-Images-in-Hexo/&#34; title=&#34;Automatic Header Images in Hexo&#34;&gt;Automatic Header Images in Hexo&lt;/a&gt;)&lt;ol&gt;
&lt;li&gt;Store PHOTOGRAPH information in POST&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Generate new post via Handlebars template&lt;/li&gt;
&lt;li&gt;Store new post&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The goal is that I only need to write an introduction and adjust a few frontmatter variables before generating and publishing the post.&lt;/p&gt;
&lt;h3 id=&#34;Settings&#34;&gt;&lt;a href=&#34;#Settings&#34; class=&#34;headerlink&#34; title=&#34;Settings&#34;&gt;&lt;/a&gt;Settings&lt;/h3&gt;&lt;p&gt;First task is to save the possible settings in Hexo’s default configuration file:&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# Trello Discoveries Generator Script&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;discoveries:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;board:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;url:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;https://trello.com/b/D6zIhLus/collections.json&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;parameters:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;key:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;fields&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;value:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;name&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;key:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;lists&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;value:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;all&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;key:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;list_fields&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;value:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;name&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;key:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;cards&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;value:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;all&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;key:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;card_fields&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;value:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;closed,desc,idList,name&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;key:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;card_attachments&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;value:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;key:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;card_attachment_fields&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;value:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;bytes,mimeType,name,previews&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;key:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;customFields&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;value:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;key:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;card_customFieldItems&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;value:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;template:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;discoveries.handlebars&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;Template&#34;&gt;&lt;a href=&#34;#Template&#34; class=&#34;headerlink&#34; title=&#34;Template&#34;&gt;&lt;/a&gt;Template&lt;/h3&gt;&lt;p&gt;Next step is creating a &lt;a href=&#34;https://handlebarsjs.com/&#34;&gt;Handlebars&lt;/a&gt; template out of my scaffold file I used so far:&lt;/p&gt;
&lt;figure class=&#34;highlight hbs&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;slug: &lt;/span&gt;&lt;span class=&#34;template-variable&#34;&gt;&amp;#123;&amp;#123;&amp;#123;&lt;span class=&#34;name&#34;&gt;key&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;title: &amp;#x27;&lt;/span&gt;&lt;span class=&#34;template-variable&#34;&gt;&amp;#123;&amp;#123;&amp;#123;&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;subtitle:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;date: &lt;/span&gt;&lt;span class=&#34;template-variable&#34;&gt;&amp;#123;&amp;#123;&amp;#123;&lt;span class=&#34;name&#34;&gt;date&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;photograph:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;  file: &lt;/span&gt;&lt;span class=&#34;template-variable&#34;&gt;&amp;#123;&amp;#123;&amp;#123;&lt;span class=&#34;name&#34;&gt;photograph.file&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;  name: &lt;/span&gt;&lt;span class=&#34;template-variable&#34;&gt;&amp;#123;&amp;#123;&amp;#123;&lt;span class=&#34;name&#34;&gt;photograph.name&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;  link: &lt;/span&gt;&lt;span class=&#34;template-variable&#34;&gt;&amp;#123;&amp;#123;&amp;#123;&lt;span class=&#34;name&#34;&gt;photograph.link&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;  socialmedia: /static/images/social-media/&lt;/span&gt;&lt;span class=&#34;template-variable&#34;&gt;&amp;#123;&amp;#123;&amp;#123;&lt;span class=&#34;name&#34;&gt;key&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;series: Discoveries&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;categories:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;  - Misc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;tags:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;  - Collection&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;related:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;  - Discoveries-xx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;  - Discoveries-yy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;  - Discoveries-zz&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;syndication:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;  - host: Mastodon&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;    url: &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;INTRODUCTION...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&amp;#123;% anchorlist &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;span class=&#34;template-tag&#34;&gt;&amp;#123;&amp;#123;#&lt;span class=&#34;name&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;each&lt;/span&gt;&lt;/span&gt; items&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;  &amp;quot;&lt;/span&gt;&lt;span class=&#34;template-variable&#34;&gt;&amp;#123;&amp;#123;&amp;#123;&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;template-variable&#34;&gt;&amp;#123;&amp;#123;&amp;#123;&lt;span class=&#34;name&#34;&gt;key&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;span class=&#34;template-tag&#34;&gt;&amp;#123;&amp;#123;/&lt;span class=&#34;name&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;each&lt;/span&gt;&lt;/span&gt;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;%&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- more --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;span class=&#34;template-tag&#34;&gt;&amp;#123;&amp;#123;#&lt;span class=&#34;name&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;each&lt;/span&gt;&lt;/span&gt; items&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&amp;#123;% discovery &amp;quot;&lt;/span&gt;&lt;span class=&#34;template-variable&#34;&gt;&amp;#123;&amp;#123;&amp;#123;&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class=&#34;template-variable&#34;&gt;&amp;#123;&amp;#123;&amp;#123;&lt;span class=&#34;name&#34;&gt;author&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class=&#34;template-variable&#34;&gt;&amp;#123;&amp;#123;&amp;#123;&lt;span class=&#34;name&#34;&gt;url&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;&amp;quot; &lt;/span&gt;&lt;span class=&#34;template-variable&#34;&gt;&amp;#123;&amp;#123;&amp;#123;.&lt;span class=&#34;name&#34;&gt;./key&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt; &lt;/span&gt;&lt;span class=&#34;template-variable&#34;&gt;&amp;#123;&amp;#123;&amp;#123;&lt;span class=&#34;name&#34;&gt;imageName&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt; %&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;span class=&#34;template-variable&#34;&gt;&amp;#123;&amp;#123;&amp;#123;&lt;span class=&#34;name&#34;&gt;description&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&amp;#123;% enddiscovery %&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;span class=&#34;template-tag&#34;&gt;&amp;#123;&amp;#123;/&lt;span class=&#34;name&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;each&lt;/span&gt;&lt;/span&gt;&amp;#125;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;Generator-Script&#34;&gt;&lt;a href=&#34;#Generator-Script&#34; class=&#34;headerlink&#34; title=&#34;Generator Script&#34;&gt;&lt;/a&gt;Generator Script&lt;/h3&gt;&lt;p&gt;Next, the generator itself, which lives in &lt;code&gt;/lib/scripts/&lt;/code&gt;. It is implemented as a class with CommonJS and takes two parameters in the constructor for defining the number of the Discoveries post to create and the name of the Trello list, where the data for this should come from. It’s main function is &lt;code&gt;generate&lt;/code&gt;, which starts the generation. Here’s the skeleton:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;discoveries-generator.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; fs = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;fs&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; yaml = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;js-yaml&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; path = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;path&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; axios = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;axios&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; handlebars = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;handlebars&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &amp;#123; marked &amp;#125; = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;marked&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Generator&lt;/span&gt; &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; _config;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; _trelloUrl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; _templateFile;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// Init new post object&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; _post = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;board&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;list&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title function_&#34;&gt;constructor&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;discoveryNo, listName&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Init the generator and gather all necessary data for running it&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title function_&#34;&gt;generate&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Run the generator&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;downloadImage&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;url, item&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Helper for downloading the images asynchronously  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title function_&#34;&gt;createPostFromTemplate&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Helper for creating the post&amp;#x27;s MD file out of the template&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;At this point I will refrain from reproducing the complete code here. Just follow this &lt;a href=&#34;https://github.com/kristofzerbe/kiko.io/blob/cb9ba3f9157771231258834b156bb6aead2cd229/lib/discoveries-generator.cjs&#34;&gt;link&lt;/a&gt; …&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;However, a few points in the implementation are important to consider:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The downloads are performed by means of the promise based HTTP client &lt;a href=&#34;https://axios-http.com/&#34;&gt;axios&lt;/a&gt;. I can only recommend this thing…&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The image downloads are initially collected in a Promise list for subsequent execution, while iterating through the cards of the selected Trello list&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The script is actually really straight forward, but I have some improvements in mind, which will find their way into the code later on:&lt;/p&gt;
&lt;p&gt;A. If an image is missing, create a proper screenshot via Puppeteer&lt;/p&gt;
&lt;p&gt;B. Introduce a top most card(s) for the INTRODUCTION, a SUBTITLE and some additional TAGS, to avoid having to rework the new post before publishing&lt;/p&gt;
&lt;p&gt;C. Automated insertion of the RELATED posts, based on the last three Discoveries issues&lt;/p&gt;
&lt;h3 id=&#34;Run-it-…&#34;&gt;&lt;a href=&#34;#Run-it-…&#34; class=&#34;headerlink&#34; title=&#34;Run it …&#34;&gt;&lt;/a&gt;Run it …&lt;/h3&gt;&lt;p&gt;The easiest way to get the generator running, is to create a simple runner script:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;_run_discoveries-generator.cjs&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Generator&lt;/span&gt; = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;./discoveries-generator.cjs&amp;quot;&lt;/span&gt;).&lt;span class=&#34;property&#34;&gt;Generator&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; discoveryNo = process.&lt;span class=&#34;property&#34;&gt;argv&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;].&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; listName = process.&lt;span class=&#34;property&#34;&gt;argv&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;].&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; generator = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Generator&lt;/span&gt;(discoveryNo, listName);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;generator.&lt;span class=&#34;title function_&#34;&gt;generate&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;The execution in the console then is just a one-liner:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;node &amp;quot;./lib/_run_discoveries-generator.cjs&amp;quot; &amp;quot;&amp;lt;NUMBER&amp;gt;&amp;quot; &amp;quot;&amp;lt;TRELLO-LISTNAME&amp;gt;&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;It was fun to write this automation during Christmas. Also kept me from stuffing too many cookies inside me ;)&lt;/p&gt;

        </content>
        <category term="JavaScript" scheme="https://kiko.io/categories/JavaScript/" />
        <category term="Hexo" scheme="https://kiko.io/tags/Hexo/" />
        <category term="Trello" scheme="https://kiko.io/tags/Trello/" />
        <category term="Publishing" scheme="https://kiko.io/tags/Publishing/" />
    </entry>
    <entry>
        <id>https://kiko.io/post/Discoveries-21-Sites-Pages/</id>
        <title>Discoveries #21 -  Sites &amp; Pages</title>
        <published>2022-12-28T17:38:22.000Z</published>
        <updated>2022-12-28T17:38:22.000Z</updated>
        <link href="https://kiko.io/post/Discoveries-21-Sites-Pages/"/>
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Discoveries-21-Sites-Pages.thumb.png" height="1200" width="630" />
        <content type="html">
            
            
            &lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Discoveries-21-Sites-Pages.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;Websites always have a certain purpose and depending on what you want to do with it, there are pre-designed tools, that make it very easy to get started. In this issue of Discoveries I have collected a few such enablers.&lt;/p&gt;
&lt;p&gt;Also included are two hosting offers that address the hot topics of #Fediverse and #IndieWeb in times of #TwitterMigration.&lt;/p&gt;

        &lt;ul class=&#34;anchorlist&#34;&gt;
            &lt;li data-anchor=&#34;#webmention-analytics&#34;&gt;Webmention Analytics&lt;/li&gt;&lt;li data-anchor=&#34;#indiekit&#34;&gt;Indiekit&lt;/li&gt;&lt;li data-anchor=&#34;#masto-host&#34;&gt;Masto.host&lt;/li&gt;&lt;li data-anchor=&#34;#static-timeline-generator&#34;&gt;Static Timeline Generator&lt;/li&gt;&lt;li data-anchor=&#34;#glossary-page-template&#34;&gt;Glossary Page Template&lt;/li&gt;&lt;li data-anchor=&#34;#markdoc&#34;&gt;Markdoc&lt;/li&gt;&lt;li data-anchor=&#34;#docs-page&#34;&gt;docs.page&lt;/li&gt;&lt;li data-anchor=&#34;#jpage&#34;&gt;JPage&lt;/li&gt;&lt;li data-anchor=&#34;#github-octo-flat-data&#34;&gt;GitHub OCTO: Flat Data&lt;/li&gt;&lt;li data-anchor=&#34;#batnoter&#34;&gt;BatNoter&lt;/li&gt;
        &lt;/ul&gt;
    

&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;


    &lt;hr id=&#34;webmention-analytics&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Webmention Analytics
    &lt;/h2&gt;
    &lt;small&gt;by Max Böck&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://mxb.dev/blog/webmention-analytics/&#34;&gt;https://mxb.dev/blog/webmention-analytics/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Your blog supports Webmentions? Then you should have a look on Max project, which I&amp;#39;m also contributing to. It collects all Webmention data of your post and gives you a nice analytics page.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://mxb.dev/blog/webmention-analytics/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;webmention-analytics.png&#34; alt=&#34;Webmention Analytics&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;indiekit&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Indiekit
    &lt;/h2&gt;
    &lt;small&gt;by Paul Robert Lloyd&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://getindiekit.com/&#34;&gt;https://getindiekit.com/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;This Node-driven server is everything you need to start into the IndieWeb. Publish and share your own content, integrate SSG&amp;#39;s like Hugo or Jekyll and file storage on GitHub, GitLab or FTP. It works with the Micropub protocol and has a plugin API for developing extensions.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://getindiekit.com/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;indiekit.png&#34; alt=&#34;Indiekit&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;masto-host&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Masto.host
    &lt;/h2&gt;
    &lt;small&gt;by Hugo Gameiro&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://masto.host/&#34;&gt;https://masto.host/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Since a crazed billionaire has decided to make something &amp;#39;different&amp;#39; out of Twitter, the Fediverse alternative Mastodon gains more and more attraction. #TwitterMigration. But it is not easy to host an instance by yourself. Hugo jumps in here and offers a fully managed Mastodon hosting service.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://masto.host/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;masto-host.png&#34; alt=&#34;Masto.host&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;static-timeline-generator&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Static Timeline Generator
    &lt;/h2&gt;
    &lt;small&gt;by Molly White&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://github.com/molly/static-timeline-generator&#34;&gt;https://github.com/molly/static-timeline-generator&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Some data are best presented by a timeline in order to show what has happened in descending order. Best example is actually &lt;a href=&#34;https://twitterisgoinggreat.com&#34;&gt;twitterisgoinggreat.com&lt;/a&gt;, which lists all things happened since Elon Musk has taken over Twitter. This site is built with Mollys static timeline generator.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://github.com/molly/static-timeline-generator&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;static-timeline-generator.png&#34; alt=&#34;Static Timeline Generator&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;glossary-page-template&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Glossary Page Template
    &lt;/h2&gt;
    &lt;small&gt;by Hilverd Reker&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://glossary.page/template/&#34;&gt;https://glossary.page/template/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Ever had to maintain a glossary? Can be very time consuming, first of all to present it in a structured, searchable way. This project from Hilverd, available on GitHub, is a single HTML page with a build-in editor.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://glossary.page/template/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;glossary-page-template.png&#34; alt=&#34;Glossary Page Template&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;markdoc&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Markdoc
    &lt;/h2&gt;
    &lt;small&gt;by Stripe Dev&#39;s&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://markdoc.io/&#34;&gt;https://markdoc.io/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Markdoc is a Markdown-based system for creating custom documentation sites, build by the guys from Stripe on order to provide a documentation of their service to their customers. It is available at GitHub and a good starting point for your next documentation. You are documenting your stuff, right?&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://markdoc.io/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;markdoc.png&#34; alt=&#34;Markdoc&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;docs-page&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      docs.page
    &lt;/h2&gt;
    &lt;small&gt;by Invertase Dev&#39;s&amp;nbsp;&lt;br&gt;&lt;a href=&#34;docs.page&#34;&gt;docs.page&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Another way to easily create documentation. This time with the focus on GitHub projects and from the developers of the British company Invertase It is as simple as the name suggests: create a &amp;#x2F;docs folder in the repository, put the configuration in a docs.json and start with the first MDX file…&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;docs.page&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;docs-page.png&#34; alt=&#34;docs.page&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;jpage&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      JPage
    &lt;/h2&gt;
    &lt;small&gt;by Pedro Isac&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://pedro-isacss.github.io/jpage/&#34;&gt;https://pedro-isacss.github.io/jpage/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Some sites just need to have some slides to present the main purpose. Marketing stuff, photos, whatever. That&amp;#39;s what Pedro built his JPage for. It supports slides in two axis and its configuration is just about the arrangement of standard HTML tags. Super simple and super effective.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://pedro-isacss.github.io/jpage/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;jpage.png&#34; alt=&#34;JPage&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;github-octo-flat-data&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      GitHub OCTO: Flat Data
    &lt;/h2&gt;
    &lt;small&gt;by Idan Gazit, Amelia Wattenberger, Matt Rothenberg, Irene Alvarado&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://octo.github.com/projects/flat-data&#34;&gt;https://octo.github.com/projects/flat-data&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Flat is an experiment from the Developer Experience team in GitHub Next and gives you the possibility to fetch, aggregate and view data of many different types. It incorporates three different pieces: Flat Action to fetch data, Flat Editor and Flat Viewer. It&amp;#39;s based on GitHub Actions and can be fully integrated in your repository.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://octo.github.com/projects/flat-data&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;github-octo-flat-data.png&#34; alt=&#34;GitHub OCTO: Flat Data&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;batnoter&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      BatNoter
    &lt;/h2&gt;
    &lt;small&gt;by GitHub User vivekweb2013&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://github.com/batnoter/batnoter&#34;&gt;https://github.com/batnoter/batnoter&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Batnoter is an open source, markdown-based, self-hosted note taking webapp, written with React, that uses your github repository to store markdown notes.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://github.com/batnoter/batnoter&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;batnoter.png&#34; alt=&#34;BatNoter&#34; /&gt;
    &lt;/a&gt;
  


        </content>
        <category term="Misc" scheme="https://kiko.io/categories/Misc/" />
        <category term="Collection" scheme="https://kiko.io/tags/Collection/" />
        <category term="Publishing" scheme="https://kiko.io/tags/Publishing/" />
        <category term="Hosting" scheme="https://kiko.io/tags/Hosting/" />
    </entry>
    <entry>
        <id>https://kiko.io/post/The-State-of-the-Blog/</id>
        <title>The State of the Blog</title>
        <published>2022-12-23T21:40:00.000Z</published>
        <updated>2022-12-23T21:40:00.000Z</updated>
        <link href="https://kiko.io/post/The-State-of-the-Blog/"/>
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/The-State-of-the-Blog.thumb.png" height="1200" width="630" />
        <content type="html">
            
            
            &lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/The-State-of-the-Blog.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;I’ve started this blog in 2019 with &lt;a href=&#34;/post/How-To-Visual-Studio-Database-Project-and-ADSI/&#34; title=&#34;How-To: Visual Studio Database Project and ADSI&#34;&gt;this article&lt;/a&gt; primarily because I needed an area to record things learned for myself, with the side effect that others can benefit from it if they want.&lt;/p&gt;
&lt;p&gt;Why my choice fell on the static site generator &lt;a href=&#34;https://hexo.io/&#34;&gt;Hexo&lt;/a&gt;, I no longer know, but I have now become accustomed (even to the shortcomings) and so far I have been able to implement all my ideas in it … and I had a few of them.&lt;/p&gt;
&lt;p&gt;In this post I would like to share a few experiences I have had with Hexo, regarding the main functionality and the things I’ve customized and describe my workflow behind the individual features of my blog. The latter is not as straightforward as I would like it to be, especially because I have different devices in use that require different approaches. The main purpose of this post is to simply write down for me, how things currently work on kiko.io and to have one or the other idea how to do it better while writing. Doing this publicly is in the hope that you might read this and have a terrific idea that I haven’t come up with yet and leave a comment or webmention … :)&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;hr&gt;
&lt;h2 id=&#34;Hexo-…&#34;&gt;&lt;a href=&#34;#Hexo-…&#34; class=&#34;headerlink&#34; title=&#34;Hexo …&#34;&gt;&lt;/a&gt;Hexo …&lt;/h2&gt;&lt;p&gt;I don’t have experience with other SSGs like Hugo or others, so I can’t make comparisons, but I can share a few things about Hexo that have kept me engaged in my work with Hexo. I won’t go into the general functionality of Hexo here, but the ones that interest me most for my particular needs. A more or less good start into the tool is &lt;a href=&#34;https://hexo.io/&#34;&gt;https://hexo.io&lt;/a&gt; with its DOCS and API.&lt;/p&gt;
&lt;p&gt;One of the first commands you get to know is &lt;code&gt;generate&lt;/code&gt;, which generates the static HTML pages from the MD files stored in the &lt;code&gt;source/_posts&lt;/code&gt; folder. You can add your own &lt;a href=&#34;https://hexo.io/api/generator&#34;&gt;generators&lt;/a&gt;, which can generate any other custom pages, to this process and put them under &lt;code&gt;themes/&amp;lt;your-theme/scripts&lt;/code&gt; for automatic execution. Every generator has a &lt;code&gt;locals&lt;/code&gt; argument, which holds all site variables, including a list of all posts.&lt;/p&gt;
&lt;p&gt;Unfortunately, the documentation at &lt;a href=&#34;https://hexo.io/api/&#34;&gt;hexo.io&amp;#x2F;api&lt;/a&gt; is rather poor and so only after a while I realized, that a custom generator is called relatively late in the process, when the MD files have long since been preprocessed. So you can process any MD files in a generator, but you have to do without the automatic processing of the powerful &lt;a href=&#34;https://hexo.io/docs/tag-plugins&#34;&gt;Tag Plugins&lt;/a&gt; or syntax highlighting, because this takes place in an upstream &lt;a href=&#34;https://hexo.io/api/processor&#34;&gt;processor&lt;/a&gt;, which deals with &lt;a href=&#34;https://hexo.io/api/box&#34;&gt;boxes&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I don’t understand Hexo’s concept at this point. For me it is not particularly catchy and straightforward. Unfortunately a few help-, discussion- and example pages are written in Chinese, since the creator Tommy Chen is from Taiwan, as I guess, but my Chinese really sucks… ;)&lt;/p&gt;
&lt;p&gt;The best thing about Hexo in general is, that you can get your first results quickly after the basic installation, so you are able to concentrate on writing and prettying things up for a while. Only when the requirements increase is it necessary to take a closer look at the insufficiently documented substructure. A challenge even for experienced web developers, but unfortunately absolutely impossible for beginners…&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;Posts&#34;&gt;&lt;a href=&#34;#Posts&#34; class=&#34;headerlink&#34; title=&#34;Posts&#34;&gt;&lt;/a&gt;Posts&lt;/h2&gt;&lt;p&gt;Hexo is based on a structure of posts and pages, where posts can be aggregated in various ways, whether in the time-based archive or via tags and categories. Posts has to have a specific structure, regarding the Frontmatter in the MD file and teh storage of attached images. Hexo offers the user a separate command for this: &lt;code&gt;hexo new&lt;/code&gt;, which works with template files in the folder &lt;code&gt;scaffolds&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;For the presentation of my posts, I decided to incorporate my passion of photography by assigning a unique header image to each post (and most pages). How I implemented this, I have described in the article &lt;a href=&#34;/post/Automatic-Header-Images-in-Hexo/&#34; title=&#34;Automatic Header Images in Hexo&#34;&gt;Automatic Header Images in Hexo&lt;/a&gt;. The main point is, when I create a new post, I automatically and randomly pick a photo (in the three media-dependent versions &lt;em&gt;normal&lt;/em&gt;, &lt;em&gt;tablet&lt;/em&gt; and &lt;em&gt;mobile&lt;/em&gt;) from a pool, copy the images to the appropriate delivery folder and bind it to the new post via frontmatter. For this I’ve written the Hexo event hook &lt;code&gt;on-new-get-photo-for-post.js&lt;/code&gt;, which runs on the command &lt;code&gt;hexo new post &amp;quot;&amp;lt;title-of-new-post&amp;gt;&amp;quot;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Works great, except for the fact that I’m often on the go and using a Node.JS-powered command towards an SSG project hosted on GitHub definitely doesn’t work on an Android smartphone. So, how do I get it to create a new post remotely?&lt;/p&gt;
&lt;p&gt;First part of the answer, regarding access to all project files, was to store the project in a folder that is synchronized with one of the usual suspects: Dropbox, OneDrive, GoogleDrive. With this, I have access to the entire project at all times on all devices that can sync the files. In the case of Android with the help of one of the &lt;a href=&#34;https://play.google.com/store/search?q=metactrl+%22autosync%22&amp;c=apps&#34;&gt;Autosync apps from metactrl&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The second part of the answer, regarding execution of the new post command, was a bit more difficult, but part of my solution was to use my little home server, where the project also syncs and which is always switched on. Problem here: This tiny box is not publicly available on the web and never will be. Therefore the only communication channel I had, was file synchronization and the solution was to use a simple text file to hold the commands I want to be executed. For this purpose, I have written a small command line tool that runs and processes a modified command file when it is received. For file monitoring I have &lt;a href=&#34;https://www.2brightsparks.com/syncback/sbpro.html&#34;&gt;SyncBackPro&lt;/a&gt; in use, which has the incredibly useful feature of being able to execute commands before and after a synchronization takes place, in this case my tool, which I have named &lt;strong&gt;HexoCommander&lt;/strong&gt; and whose source code is &lt;a href=&#34;https://github.com/kristofzerbe/HexoCommander&#34;&gt;available on GitHub&lt;/a&gt;.&lt;/p&gt;

    &lt;div class=&#34;alertbox alertbox-note&#34;&gt;
      &lt;p&gt;Before you think “&lt;em&gt;What the hell is he doing? That’s what&lt;/em&gt; [fill in the Linux tool of your choice] &lt;em&gt;is for&lt;/em&gt;“ … I’m more of a Windows guy. Linux means something to me, but I’ve never worked with it and never had to … and yessss, there is a career in IT also with Windows ;)&lt;/p&gt;

    &lt;/div&gt;
  

&lt;p&gt;The advantage of synchronizing the whole GitHub project via cloud storage service is that I also host &lt;strong&gt;kiko.io&lt;/strong&gt; on &lt;a href=&#34;https://pages.github.com/&#34;&gt;Github Pages&lt;/a&gt; and that a commit to the repository on GitHub automatically triggers a deployment, which I don’t always want right away. So, because of my changes to the post process, I don’t use Hexo’s built-in drafts, but write on a new post until I’m done and then release by committing to GitHub.&lt;/p&gt;

    &lt;div class=&#34;alertbox thinkbox&#34;&gt;
      &lt;svg viewBox=&#34;0 0 36 36&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;circle cx=&#34;18&#34; cy=&#34;17.018&#34; fill=&#34;#ffcb4c&#34; r=&#34;17&#34;/&gt;&lt;g fill=&#34;#65471b&#34;&gt;&lt;path d=&#34;m14.524 21.036c-.145-.116-.258-.274-.312-.464-.134-.46.13-.918.59-1.021 4.528-1.021 7.577 1.363 7.706 1.465.384.306.459.845.173 1.205-.286.358-.828.401-1.211.097-.11-.084-2.523-1.923-6.182-1.098-.274.061-.554-.016-.764-.184z&#34;/&gt;&lt;ellipse cx=&#34;13.119&#34; cy=&#34;11.174&#34; rx=&#34;2.125&#34; ry=&#34;2.656&#34;/&gt;&lt;ellipse cx=&#34;24.375&#34; cy=&#34;12.236&#34; rx=&#34;2.125&#34; ry=&#34;2.656&#34;/&gt;&lt;/g&gt;&lt;path d=&#34;m17.276 35.149s1.265-.411 1.429-1.352c.173-.972-.624-1.167-.624-1.167s1.041-.208 1.172-1.376c.123-1.101-.861-1.363-.861-1.363s.97-.4 1.016-1.539c.038-.959-.995-1.428-.995-1.428s5.038-1.221 5.556-1.341c.516-.12 1.32-.615 1.069-1.694-.249-1.08-1.204-1.118-1.697-1.003-.494.115-6.744 1.566-8.9 2.068l-1.439.334c-.54.127-.785-.11-.404-.512.508-.536.833-1.129.946-2.113.119-1.035-.232-2.313-.433-2.809-.374-.921-1.005-1.649-1.734-1.899-1.137-.39-1.945.321-1.542 1.561.604 1.854.208 3.375-.833 4.293-2.449 2.157-3.588 3.695-2.83 6.973.828 3.575 4.377 5.876 7.952 5.048z&#34; fill=&#34;#f19020&#34;/&gt;&lt;path d=&#34;m9.296 6.351c-.164-.088-.303-.224-.391-.399-.216-.428-.04-.927.393-1.112 4.266-1.831 7.699-.043 7.843.034.433.231.608.747.391 1.154-.216.405-.74.546-1.173.318-.123-.063-2.832-1.432-6.278.047-.257.109-.547.085-.785-.042zm12.135 3.75c-.156-.098-.286-.243-.362-.424-.187-.442.023-.927.468-1.084 4.381-1.536 7.685.48 7.823.567.415.26.555.787.312 1.178-.242.39-.776.495-1.191.238-.12-.072-2.727-1.621-6.267-.379-.266.091-.553.046-.783-.096z&#34; fill=&#34;#65471b&#34;/&gt;&lt;/svg&gt;
      &lt;h4&gt;is there an easier way?&lt;/h4&gt;
      &lt;p&gt;I admit that on an Android smartphone, it’s a bit fiddly to write a special command to a text file and then wait 2 or 3 minutes for the file to sync, the new line to be read and executed, and the new post files to sync back to the smartphone, but it works. But I would rather have a smartphone capable interface, where I can enter my data and the whole thing runs at the push of a button.&lt;/p&gt;
&lt;p&gt;Currently I have no idea how to achieve this in a static site environment. Do you have one?&lt;/p&gt;

    &lt;/div&gt;
  

&lt;hr&gt;
&lt;h2 id=&#34;Photos&#34;&gt;&lt;a href=&#34;#Photos&#34; class=&#34;headerlink&#34; title=&#34;Photos&#34;&gt;&lt;/a&gt;&lt;a href=&#34;/photos&#34;&gt;Photos&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;As I speak from photos … to provide header images for my new posts (or pages), I have prepared a pool of photos that I display on a special filterable page. This page is not one that comes with Hexo, but is based on a dynamic page generator I’ve created for this purpose. I wrote about it in 2021: &lt;a href=&#34;/post/Pattern-for-dynamic-Hexo-pages/&#34; title=&#34;Pattern for dynamic Hexo pages&#34;&gt;Pattern for dynamic Hexo pages&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;But how do I fill this pool with new photos, especially because I need three variants of a new photo for the standard device classes Desktop (normal), Tablet and Mobile?&lt;/p&gt;
&lt;p&gt;I have a very specific workflow in Lightroom to edit my photos and convert them from RAW to JPEG while exporting, to add them to &lt;a href=&#34;https://500px.com/p/kikon&#34;&gt;my 500px collection&lt;/a&gt; for example. The destination of these export is again my cloud storage.&lt;/p&gt;
&lt;p&gt;From time to time I pick some images from these export folders that I want to use on the blog. I do this mostly on my Android smartphone in a quiet minute and these are the steps and Android apps I need, to turn a high resolution 10MB photo into one that can be used on the web:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=pl.solidexplorer2&#34;&gt;Solid Explorer&lt;/a&gt;: Creating a new folder in the projects pool folder with the name of the image.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=pl.solidexplorer2&#34;&gt;Solid Explorer&lt;/a&gt;: Copy the original photo into the new pool folder.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=pl.solidexplorer2&#34;&gt;Solid Explorer&lt;/a&gt;: Create &lt;code&gt;meta.txt&lt;/code&gt; to hold the name and the 500px Url of the photo in the new pool folder.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=de.vsmedia.imagesize&#34;&gt;ImageSize&lt;/a&gt;: Create normal (1280px), tablet (768px) and mobile (480px) versions of the photo as web images.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=pl.solidexplorer2&#34;&gt;Solid Explorer&lt;/a&gt;: Copy web images to new pool folder and delete original.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I have a similar workflow working on my Windows machine, but both workflows are manual ones.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/The-State-of-the-Blog/kiko-io-PHOTOS.png&#34; alt=&#34;kiko.io&amp;#39;s Photos Workflow&#34;&gt;&lt;/p&gt;

    &lt;div class=&#34;alertbox thinkbox&#34;&gt;
      &lt;svg viewBox=&#34;0 0 36 36&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;circle cx=&#34;18&#34; cy=&#34;17.018&#34; fill=&#34;#ffcb4c&#34; r=&#34;17&#34;/&gt;&lt;g fill=&#34;#65471b&#34;&gt;&lt;path d=&#34;m14.524 21.036c-.145-.116-.258-.274-.312-.464-.134-.46.13-.918.59-1.021 4.528-1.021 7.577 1.363 7.706 1.465.384.306.459.845.173 1.205-.286.358-.828.401-1.211.097-.11-.084-2.523-1.923-6.182-1.098-.274.061-.554-.016-.764-.184z&#34;/&gt;&lt;ellipse cx=&#34;13.119&#34; cy=&#34;11.174&#34; rx=&#34;2.125&#34; ry=&#34;2.656&#34;/&gt;&lt;ellipse cx=&#34;24.375&#34; cy=&#34;12.236&#34; rx=&#34;2.125&#34; ry=&#34;2.656&#34;/&gt;&lt;/g&gt;&lt;path d=&#34;m17.276 35.149s1.265-.411 1.429-1.352c.173-.972-.624-1.167-.624-1.167s1.041-.208 1.172-1.376c.123-1.101-.861-1.363-.861-1.363s.97-.4 1.016-1.539c.038-.959-.995-1.428-.995-1.428s5.038-1.221 5.556-1.341c.516-.12 1.32-.615 1.069-1.694-.249-1.08-1.204-1.118-1.697-1.003-.494.115-6.744 1.566-8.9 2.068l-1.439.334c-.54.127-.785-.11-.404-.512.508-.536.833-1.129.946-2.113.119-1.035-.232-2.313-.433-2.809-.374-.921-1.005-1.649-1.734-1.899-1.137-.39-1.945.321-1.542 1.561.604 1.854.208 3.375-.833 4.293-2.449 2.157-3.588 3.695-2.83 6.973.828 3.575 4.377 5.876 7.952 5.048z&#34; fill=&#34;#f19020&#34;/&gt;&lt;path d=&#34;m9.296 6.351c-.164-.088-.303-.224-.391-.399-.216-.428-.04-.927.393-1.112 4.266-1.831 7.699-.043 7.843.034.433.231.608.747.391 1.154-.216.405-.74.546-1.173.318-.123-.063-2.832-1.432-6.278.047-.257.109-.547.085-.785-.042zm12.135 3.75c-.156-.098-.286-.243-.362-.424-.187-.442.023-.927.468-1.084 4.381-1.536 7.685.48 7.823.567.415.26.555.787.312 1.178-.242.39-.776.495-1.191.238-.12-.072-2.727-1.621-6.267-.379-.266.091-.553.046-.783-.096z&#34; fill=&#34;#65471b&#34;/&gt;&lt;/svg&gt;
      &lt;h4&gt;is there an easier way?&lt;/h4&gt;
      &lt;p&gt;Fiddling around with images on the smartphone like this almost has a medidative effect on me, but it’s not really effective. Better would be to throw the original image into a folder and let Hexo do the work of resizing by utilizing &lt;a href=&#34;https://sharp.pixelplumbing.com/&#34;&gt;Sharp&lt;/a&gt; and &lt;a href=&#34;https://github.com/imagemin/imagemin&#34;&gt;imagemin&lt;/a&gt;.&lt;/p&gt;

    &lt;/div&gt;
  

&lt;hr&gt;
&lt;h2 id=&#34;Series-amp-Projects&#34;&gt;&lt;a href=&#34;#Series-amp-Projects&#34; class=&#34;headerlink&#34; title=&#34;Series &amp;amp; Projects&#34;&gt;&lt;/a&gt;&lt;a href=&#34;%5Cseries&#34;&gt;Series&lt;/a&gt; &amp;amp; &lt;a href=&#34;%5Cprojects&#34;&gt;Projects&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Relatively soon it was clear to me, that I want to aggregate posts to series and I didn’t want to use the integrated categories or tags for it. It should be working with a new frontmatter attribute called &lt;code&gt;series&lt;/code&gt; with the value of a slug of a referencing MD file, which provides some text to describe the series. &lt;em&gt;Projects&lt;/em&gt; is basically a index like series, but merely works with a different Frontmatter attribute.&lt;/p&gt;
&lt;p&gt;The whole thing was made possible by &lt;strong&gt;Levi Wheatcroft&lt;/strong&gt;‘s work on his plugin &lt;em&gt;hexo-index-anything&lt;/em&gt;. Unfortunately Levi stopped working on it a long time ago and so I forked it under the new name &lt;a href=&#34;/projects/hexo-generator-anything/&#34;&gt;hexo-generator-anything&lt;/a&gt;. The generator is controlled by a section in Hexo’s configuration file, which defines the EJS layout file to render the main index page respectively the index pages of each series, beside a mapping list for the appropriate Frontmatter variable and the output path:&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;figcaption&gt;&lt;span&gt;_config.yaml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;anything:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;layout_index:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;anything-index&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;layout_posts:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;anything-posts&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;index_mappings:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;variable:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;series&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;path:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;series&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;variable:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;project&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;path:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;projects&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/post/The-State-of-the-Blog/kiko-io-SERIES.png&#34; alt=&#34;kiko.io&amp;#39;s Series Workflow&#34;&gt;&lt;/p&gt;

    &lt;div class=&#34;alertbox alertbox-info&#34;&gt;
      &lt;p&gt;Tag Plugins and syntax highlighting for code blocks in the reference MD files are not resolved actually, because it is a generator only (see first section ‘Hexo…’).&lt;/p&gt;

    &lt;/div&gt;
  

&lt;hr&gt;
&lt;h2 id=&#34;Tiny-Tools&#34;&gt;&lt;a href=&#34;#Tiny-Tools&#34; class=&#34;headerlink&#34; title=&#34;Tiny-Tools&#34;&gt;&lt;/a&gt;&lt;a href=&#34;/collections/tiny-tools&#34;&gt;Tiny-Tools&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Since this blog is primarily a memory aid for me and my future self (how often do I have stumbled across my own posts during web search), it was logical to place a special bookmark collection here, because it happened to me more often that I found and used an online tool and some time later wonder what the thing was called when I have the same requirement again. &lt;/p&gt;
&lt;p&gt;That’s why I started to collect these URL’s in a public Trello board (see &lt;a href=&#34;/post/Add-website-to-Trello-card-the-better-way/&#34; title=&#34;Add website to Trello card the better way&#34;&gt;Add website to Trello card the better way&lt;/a&gt;) and provide them with keywords and a screenshot. But Trello is a Kanban tool and not designed for such special requirements as the display of bookmarks and so I use it only as a data source for my page TINY-TOOLS.&lt;/p&gt;
&lt;p&gt;Generating a static page out of Trello cards was again a job for my dynamic pages, I had introduced for the photos page. It takes advantage of the fact that any Trello board can be retrieved as machine-readable data by extending the url with &lt;code&gt;.json&lt;/code&gt;. The &lt;a href=&#34;https://github.com/kristofzerbe/kiko.io/blob/26ccfa18b8abff279a05b1f12363992a278c130c/themes/landscape/scripts/generator-dynamic-trello.js&#34;&gt;Dynamic Trello Generator&lt;/a&gt; is really straight forward.&lt;/p&gt;
&lt;p&gt;With this script it is only a matter of configuration to generate a page from a given list of a board (URL ist shortended):&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;trello:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;boards:&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Collections&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;url:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;https://trello.com/.../collections.json?fields=all&amp;amp;cards=all&amp;amp;card_fields=all&amp;amp;card_attachments=true&amp;amp;lists=all&amp;amp;list_fields=all&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;pages:&lt;/span&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;tiny-tools&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;list:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;TinyTools&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/post/The-State-of-the-Blog/kiko-io-TINY-TOOLS.png&#34; alt=&#34;kiko-io&amp;#39;s Tiny Tools Workflow&#34;&gt;&lt;/p&gt;

    &lt;div class=&#34;alertbox thinkbox&#34;&gt;
      &lt;svg viewBox=&#34;0 0 36 36&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;circle cx=&#34;18&#34; cy=&#34;17.018&#34; fill=&#34;#ffcb4c&#34; r=&#34;17&#34;/&gt;&lt;g fill=&#34;#65471b&#34;&gt;&lt;path d=&#34;m14.524 21.036c-.145-.116-.258-.274-.312-.464-.134-.46.13-.918.59-1.021 4.528-1.021 7.577 1.363 7.706 1.465.384.306.459.845.173 1.205-.286.358-.828.401-1.211.097-.11-.084-2.523-1.923-6.182-1.098-.274.061-.554-.016-.764-.184z&#34;/&gt;&lt;ellipse cx=&#34;13.119&#34; cy=&#34;11.174&#34; rx=&#34;2.125&#34; ry=&#34;2.656&#34;/&gt;&lt;ellipse cx=&#34;24.375&#34; cy=&#34;12.236&#34; rx=&#34;2.125&#34; ry=&#34;2.656&#34;/&gt;&lt;/g&gt;&lt;path d=&#34;m17.276 35.149s1.265-.411 1.429-1.352c.173-.972-.624-1.167-.624-1.167s1.041-.208 1.172-1.376c.123-1.101-.861-1.363-.861-1.363s.97-.4 1.016-1.539c.038-.959-.995-1.428-.995-1.428s5.038-1.221 5.556-1.341c.516-.12 1.32-.615 1.069-1.694-.249-1.08-1.204-1.118-1.697-1.003-.494.115-6.744 1.566-8.9 2.068l-1.439.334c-.54.127-.785-.11-.404-.512.508-.536.833-1.129.946-2.113.119-1.035-.232-2.313-.433-2.809-.374-.921-1.005-1.649-1.734-1.899-1.137-.39-1.945.321-1.542 1.561.604 1.854.208 3.375-.833 4.293-2.449 2.157-3.588 3.695-2.83 6.973.828 3.575 4.377 5.876 7.952 5.048z&#34; fill=&#34;#f19020&#34;/&gt;&lt;path d=&#34;m9.296 6.351c-.164-.088-.303-.224-.391-.399-.216-.428-.04-.927.393-1.112 4.266-1.831 7.699-.043 7.843.034.433.231.608.747.391 1.154-.216.405-.74.546-1.173.318-.123-.063-2.832-1.432-6.278.047-.257.109-.547.085-.785-.042zm12.135 3.75c-.156-.098-.286-.243-.362-.424-.187-.442.023-.927.468-1.084 4.381-1.536 7.685.48 7.823.567.415.26.555.787.312 1.178-.242.39-.776.495-1.191.238-.12-.072-2.727-1.621-6.267-.379-.266.091-.553.046-.783-.096z&#34; fill=&#34;#65471b&#34;/&gt;&lt;/svg&gt;
      &lt;h4&gt;is there an easier way?&lt;/h4&gt;
      &lt;p&gt;Can’t imagine one. Do You?&lt;/p&gt;

    &lt;/div&gt;
  

&lt;hr&gt;
&lt;h2 id=&#34;Notes&#34;&gt;&lt;a href=&#34;#Notes&#34; class=&#34;headerlink&#34; title=&#34;Notes&#34;&gt;&lt;/a&gt;&lt;a href=&#34;/notes&#34;&gt;Notes&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The Notes section is the latest and with it I want to follow the POSSE principle, i.e. “Publish (on your) Own Site, Syndicate Elsewhere”, which is a vital part of the IndieWeb movement. So when something comes to mind that I want to post on Mastodon for example, I want it to end up in a new Note MD file that is then posted, preferably automatically.&lt;/p&gt;
&lt;p&gt;For me, notes differ from normal posts. From the beginning I wanted to present them chronologically connected on one page per year, like a diary, and not to mix them with the articles (posts). So a standard treatment as a Hexo post was out of the question and I had to come up with something of my own. Another reason not to work with the standard structures of Hexo was, that I did not want to create a subfolder with the name of the post for images as usual in Hexo, but one folder for all images of a year.&lt;/p&gt;
&lt;p&gt;Since I am familiar with Hexo generators, I built a new one called &lt;code&gt;generator-notes&lt;/code&gt; that iterates through the entire &lt;code&gt;source/_notes&lt;/code&gt; folder and generates an index file for all the notes in a year, as well as the notes file itself, and copies the images to the source path.&lt;/p&gt;
&lt;p&gt;This approach also freed me from using my HexoCommander, because there is no need of executing a &lt;code&gt;new xxx&lt;/code&gt; command. I can now create new Notes from the smartphone quite easily:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&#34;https://play.google.com/store/search?q=metactrl+%22autosync%22&amp;c=apps&#34;&gt;Autosync App&lt;/a&gt;: Synchronization of the source&amp;#x2F;notes folder&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=net.gsantner.markor&#34;&gt;Markor&lt;/a&gt;: Edit or create new Note MD file via snippet.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/&#34;&gt;GitHub PWA&lt;/a&gt;: Upload MD file to the appropriate folder of the repository&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The upload will automatically trigger the build and deployment to GitHub. Done.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/The-State-of-the-Blog/kiko-io-NOTES.png&#34; alt=&#34;kiko.io&amp;#39;s Notes Workflow&#34;&gt;&lt;/p&gt;

    &lt;div class=&#34;alertbox thinkbox&#34;&gt;
      &lt;svg viewBox=&#34;0 0 36 36&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;circle cx=&#34;18&#34; cy=&#34;17.018&#34; fill=&#34;#ffcb4c&#34; r=&#34;17&#34;/&gt;&lt;g fill=&#34;#65471b&#34;&gt;&lt;path d=&#34;m14.524 21.036c-.145-.116-.258-.274-.312-.464-.134-.46.13-.918.59-1.021 4.528-1.021 7.577 1.363 7.706 1.465.384.306.459.845.173 1.205-.286.358-.828.401-1.211.097-.11-.084-2.523-1.923-6.182-1.098-.274.061-.554-.016-.764-.184z&#34;/&gt;&lt;ellipse cx=&#34;13.119&#34; cy=&#34;11.174&#34; rx=&#34;2.125&#34; ry=&#34;2.656&#34;/&gt;&lt;ellipse cx=&#34;24.375&#34; cy=&#34;12.236&#34; rx=&#34;2.125&#34; ry=&#34;2.656&#34;/&gt;&lt;/g&gt;&lt;path d=&#34;m17.276 35.149s1.265-.411 1.429-1.352c.173-.972-.624-1.167-.624-1.167s1.041-.208 1.172-1.376c.123-1.101-.861-1.363-.861-1.363s.97-.4 1.016-1.539c.038-.959-.995-1.428-.995-1.428s5.038-1.221 5.556-1.341c.516-.12 1.32-.615 1.069-1.694-.249-1.08-1.204-1.118-1.697-1.003-.494.115-6.744 1.566-8.9 2.068l-1.439.334c-.54.127-.785-.11-.404-.512.508-.536.833-1.129.946-2.113.119-1.035-.232-2.313-.433-2.809-.374-.921-1.005-1.649-1.734-1.899-1.137-.39-1.945.321-1.542 1.561.604 1.854.208 3.375-.833 4.293-2.449 2.157-3.588 3.695-2.83 6.973.828 3.575 4.377 5.876 7.952 5.048z&#34; fill=&#34;#f19020&#34;/&gt;&lt;path d=&#34;m9.296 6.351c-.164-.088-.303-.224-.391-.399-.216-.428-.04-.927.393-1.112 4.266-1.831 7.699-.043 7.843.034.433.231.608.747.391 1.154-.216.405-.74.546-1.173.318-.123-.063-2.832-1.432-6.278.047-.257.109-.547.085-.785-.042zm12.135 3.75c-.156-.098-.286-.243-.362-.424-.187-.442.023-.927.468-1.084 4.381-1.536 7.685.48 7.823.567.415.26.555.787.312 1.178-.242.39-.776.495-1.191.238-.12-.072-2.727-1.621-6.267-.379-.266.091-.553.046-.783-.096z&#34; fill=&#34;#65471b&#34;/&gt;&lt;/svg&gt;
      &lt;h4&gt;is there an easier way?&lt;/h4&gt;
      &lt;p&gt;Using a generator directly means, that I can’t use tag plugins in my Notes and code blocks won’t be prettied up, as I mentioned earlier.&lt;/p&gt;
&lt;p&gt;Also the Notes are not included in the Hexo &lt;code&gt;Locals&lt;/code&gt; and are therefore not available later on for RSS feeds or other stuff to create. So I will probably extend my approach with a custom &lt;a href=&#34;https://hexo.io/api/processor.html&#34;&gt;Hexo processor&lt;/a&gt;, that will allow me to do this.&lt;/p&gt;

    &lt;/div&gt;
  

&lt;hr&gt;
&lt;h2 id=&#34;Deployment&#34;&gt;&lt;a href=&#34;#Deployment&#34; class=&#34;headerlink&#34; title=&#34;Deployment&#34;&gt;&lt;/a&gt;Deployment&lt;/h2&gt;&lt;p&gt;As I mentioned earlier, kiko.io is hosted at GitHub Pages. Due to a bug in Hexo regarding the treatment of non markdown files in post folders (&lt;a href=&#34;https://github.com/hexojs/hexo/pull/4781&#34;&gt;Fix #1490&lt;/a&gt;), I had to process all files locally and transfer the output folder to the repository as well. I would have liked to use a GitHub action for the entire deployment, including the generation of the output files, but for a long time there was no NPM package with a working Hexo version that would have allowed this.&lt;/p&gt;
&lt;p&gt;I recently checked again to see if the current Hexo release 6.0.3. had fixed my bug and the subsequent bugs …. and yes. With one or two workarounds, my Hexo installation now runs completely on NPM packages, without any manual adjustments!&lt;br&gt;So I could finally switch the deployment and automate it with its own &lt;a href=&#34;https://github.com/kristofzerbe/kiko.io/blob/master/.github/workflows/hexo-build.yml&#34;&gt;build action&lt;/a&gt;. This enables me to write a text on the go, commit the file via github.com and the build and deployment starts. Woohoo … \o&amp;#x2F;&lt;/p&gt;

    &lt;div class=&#34;alertbox thinkbox&#34;&gt;
      &lt;svg viewBox=&#34;0 0 36 36&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;circle cx=&#34;18&#34; cy=&#34;17.018&#34; fill=&#34;#ffcb4c&#34; r=&#34;17&#34;/&gt;&lt;g fill=&#34;#65471b&#34;&gt;&lt;path d=&#34;m14.524 21.036c-.145-.116-.258-.274-.312-.464-.134-.46.13-.918.59-1.021 4.528-1.021 7.577 1.363 7.706 1.465.384.306.459.845.173 1.205-.286.358-.828.401-1.211.097-.11-.084-2.523-1.923-6.182-1.098-.274.061-.554-.016-.764-.184z&#34;/&gt;&lt;ellipse cx=&#34;13.119&#34; cy=&#34;11.174&#34; rx=&#34;2.125&#34; ry=&#34;2.656&#34;/&gt;&lt;ellipse cx=&#34;24.375&#34; cy=&#34;12.236&#34; rx=&#34;2.125&#34; ry=&#34;2.656&#34;/&gt;&lt;/g&gt;&lt;path d=&#34;m17.276 35.149s1.265-.411 1.429-1.352c.173-.972-.624-1.167-.624-1.167s1.041-.208 1.172-1.376c.123-1.101-.861-1.363-.861-1.363s.97-.4 1.016-1.539c.038-.959-.995-1.428-.995-1.428s5.038-1.221 5.556-1.341c.516-.12 1.32-.615 1.069-1.694-.249-1.08-1.204-1.118-1.697-1.003-.494.115-6.744 1.566-8.9 2.068l-1.439.334c-.54.127-.785-.11-.404-.512.508-.536.833-1.129.946-2.113.119-1.035-.232-2.313-.433-2.809-.374-.921-1.005-1.649-1.734-1.899-1.137-.39-1.945.321-1.542 1.561.604 1.854.208 3.375-.833 4.293-2.449 2.157-3.588 3.695-2.83 6.973.828 3.575 4.377 5.876 7.952 5.048z&#34; fill=&#34;#f19020&#34;/&gt;&lt;path d=&#34;m9.296 6.351c-.164-.088-.303-.224-.391-.399-.216-.428-.04-.927.393-1.112 4.266-1.831 7.699-.043 7.843.034.433.231.608.747.391 1.154-.216.405-.74.546-1.173.318-.123-.063-2.832-1.432-6.278.047-.257.109-.547.085-.785-.042zm12.135 3.75c-.156-.098-.286-.243-.362-.424-.187-.442.023-.927.468-1.084 4.381-1.536 7.685.48 7.823.567.415.26.555.787.312 1.178-.242.39-.776.495-1.191.238-.12-.072-2.727-1.621-6.267-.379-.266.091-.553.046-.783-.096z&#34; fill=&#34;#65471b&#34;/&gt;&lt;/svg&gt;
      &lt;h4&gt;is there an easier way?&lt;/h4&gt;
      &lt;p&gt;Nope. The only drawback I see is that this approach always generates the entire site and not just the newly added posts, as is the case locally. It’s a bit of a waste of time and computing resources.&lt;/p&gt;

    &lt;/div&gt;
  

&lt;hr&gt;
&lt;h2 id=&#34;Syndication&#34;&gt;&lt;a href=&#34;#Syndication&#34; class=&#34;headerlink&#34; title=&#34;Syndication&#34;&gt;&lt;/a&gt;Syndication&lt;/h2&gt;&lt;p&gt;As I’m a fan of the &lt;a href=&#34;https://indieweb.org/&#34;&gt;Indieweb&lt;/a&gt;, I started early with &lt;a href=&#34;https://indieweb.org/Webmention&#34;&gt;Webmentions&lt;/a&gt; on my blog. The idea behind it is to mention an article from blog A in a post on Blog B or social media like Twitter or Mastodon and blog A gets an automated message like “&lt;em&gt;Hey, I’ve mentioned you here&lt;/em&gt;“. The operator of Blog A can now also automatically display this message under the article mentioned.&lt;/p&gt;
&lt;h3 id=&#34;Receiving-Webmentions&#34;&gt;&lt;a href=&#34;#Receiving-Webmentions&#34; class=&#34;headerlink&#34; title=&#34;Receiving Webmentions&#34;&gt;&lt;/a&gt;Receiving Webmentions&lt;/h3&gt;&lt;p&gt;kiko.io is a static site, therefore, there are no active components on the web server that could react to an incoming webmention. But that’s not a problem, because there are services like &lt;a href=&#34;https://webmention.io/&#34;&gt;webmention.io&lt;/a&gt; that can serve as recipients and from where you can then pick up the messages. Some bloggers do this by fetching and inserting them into the articles while generating the static pages, but for me this can take too long. My approach is, to load the mentions from webmention.io via JavaScript dynamically into the page, as described in my post &lt;a href=&#34;/post/Hexo-and-the-IndieWeb-Receiving-Webmentions/&#34; title=&#34;Hexo and the IndieWeb (Receiving Webmentions)&#34;&gt;Hexo and the IndieWeb (Receiving Webmentions)&lt;/a&gt;.&lt;/p&gt;

    &lt;div class=&#34;alertbox thinkbox&#34;&gt;
      &lt;svg viewBox=&#34;0 0 36 36&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;circle cx=&#34;18&#34; cy=&#34;17.018&#34; fill=&#34;#ffcb4c&#34; r=&#34;17&#34;/&gt;&lt;g fill=&#34;#65471b&#34;&gt;&lt;path d=&#34;m14.524 21.036c-.145-.116-.258-.274-.312-.464-.134-.46.13-.918.59-1.021 4.528-1.021 7.577 1.363 7.706 1.465.384.306.459.845.173 1.205-.286.358-.828.401-1.211.097-.11-.084-2.523-1.923-6.182-1.098-.274.061-.554-.016-.764-.184z&#34;/&gt;&lt;ellipse cx=&#34;13.119&#34; cy=&#34;11.174&#34; rx=&#34;2.125&#34; ry=&#34;2.656&#34;/&gt;&lt;ellipse cx=&#34;24.375&#34; cy=&#34;12.236&#34; rx=&#34;2.125&#34; ry=&#34;2.656&#34;/&gt;&lt;/g&gt;&lt;path d=&#34;m17.276 35.149s1.265-.411 1.429-1.352c.173-.972-.624-1.167-.624-1.167s1.041-.208 1.172-1.376c.123-1.101-.861-1.363-.861-1.363s.97-.4 1.016-1.539c.038-.959-.995-1.428-.995-1.428s5.038-1.221 5.556-1.341c.516-.12 1.32-.615 1.069-1.694-.249-1.08-1.204-1.118-1.697-1.003-.494.115-6.744 1.566-8.9 2.068l-1.439.334c-.54.127-.785-.11-.404-.512.508-.536.833-1.129.946-2.113.119-1.035-.232-2.313-.433-2.809-.374-.921-1.005-1.649-1.734-1.899-1.137-.39-1.945.321-1.542 1.561.604 1.854.208 3.375-.833 4.293-2.449 2.157-3.588 3.695-2.83 6.973.828 3.575 4.377 5.876 7.952 5.048z&#34; fill=&#34;#f19020&#34;/&gt;&lt;path d=&#34;m9.296 6.351c-.164-.088-.303-.224-.391-.399-.216-.428-.04-.927.393-1.112 4.266-1.831 7.699-.043 7.843.034.433.231.608.747.391 1.154-.216.405-.74.546-1.173.318-.123-.063-2.832-1.432-6.278.047-.257.109-.547.085-.785-.042zm12.135 3.75c-.156-.098-.286-.243-.362-.424-.187-.442.023-.927.468-1.084 4.381-1.536 7.685.48 7.823.567.415.26.555.787.312 1.178-.242.39-.776.495-1.191.238-.12-.072-2.727-1.621-6.267-.379-.266.091-.553.046-.783-.096z&#34; fill=&#34;#65471b&#34;/&gt;&lt;/svg&gt;
      &lt;h4&gt;is there an easier way?&lt;/h4&gt;
      &lt;p&gt;I don’t think so…&lt;/p&gt;

    &lt;/div&gt;
  

&lt;h3 id=&#34;Sending-Webmentions&#34;&gt;&lt;a href=&#34;#Sending-Webmentions&#34; class=&#34;headerlink&#34; title=&#34;Sending Webmentions&#34;&gt;&lt;/a&gt;Sending Webmentions&lt;/h3&gt;&lt;p&gt;Unfortunately a I can’t integrate sending Webmentions for the mentioned Url’s in a particular (new) post into the generation process while building the static files for the blog, because the target Url’s not yet exist at this point of time. I have to wait until it is deployed and thus publicly available. So this step is currently still a manual one.&lt;/p&gt;
&lt;p&gt;My current solution is based on Remy Sharp’s NPM package &lt;a href=&#34;https://www.npmjs.com/package/@remy/webmention&#34;&gt;@remy&amp;#x2F;webmention&lt;/a&gt;, which he himself also uses for his web service  &lt;a href=&#34;https://webmention.app/&#34;&gt;webmention.app&lt;/a&gt;. I integrate it into a Hexo console command called “console-webmention” which I call via &lt;code&gt;hexo webmention&lt;/code&gt;. Without parameters, the last post is searched for outgoing url’s and their webmention endpoints respectively. See the &lt;a href=&#34;/projects/hexo-console-webmention/&#34;&gt;project page&lt;/a&gt; for more details.&lt;/p&gt;

    &lt;div class=&#34;alertbox thinkbox&#34;&gt;
      &lt;svg viewBox=&#34;0 0 36 36&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;circle cx=&#34;18&#34; cy=&#34;17.018&#34; fill=&#34;#ffcb4c&#34; r=&#34;17&#34;/&gt;&lt;g fill=&#34;#65471b&#34;&gt;&lt;path d=&#34;m14.524 21.036c-.145-.116-.258-.274-.312-.464-.134-.46.13-.918.59-1.021 4.528-1.021 7.577 1.363 7.706 1.465.384.306.459.845.173 1.205-.286.358-.828.401-1.211.097-.11-.084-2.523-1.923-6.182-1.098-.274.061-.554-.016-.764-.184z&#34;/&gt;&lt;ellipse cx=&#34;13.119&#34; cy=&#34;11.174&#34; rx=&#34;2.125&#34; ry=&#34;2.656&#34;/&gt;&lt;ellipse cx=&#34;24.375&#34; cy=&#34;12.236&#34; rx=&#34;2.125&#34; ry=&#34;2.656&#34;/&gt;&lt;/g&gt;&lt;path d=&#34;m17.276 35.149s1.265-.411 1.429-1.352c.173-.972-.624-1.167-.624-1.167s1.041-.208 1.172-1.376c.123-1.101-.861-1.363-.861-1.363s.97-.4 1.016-1.539c.038-.959-.995-1.428-.995-1.428s5.038-1.221 5.556-1.341c.516-.12 1.32-.615 1.069-1.694-.249-1.08-1.204-1.118-1.697-1.003-.494.115-6.744 1.566-8.9 2.068l-1.439.334c-.54.127-.785-.11-.404-.512.508-.536.833-1.129.946-2.113.119-1.035-.232-2.313-.433-2.809-.374-.921-1.005-1.649-1.734-1.899-1.137-.39-1.945.321-1.542 1.561.604 1.854.208 3.375-.833 4.293-2.449 2.157-3.588 3.695-2.83 6.973.828 3.575 4.377 5.876 7.952 5.048z&#34; fill=&#34;#f19020&#34;/&gt;&lt;path d=&#34;m9.296 6.351c-.164-.088-.303-.224-.391-.399-.216-.428-.04-.927.393-1.112 4.266-1.831 7.699-.043 7.843.034.433.231.608.747.391 1.154-.216.405-.74.546-1.173.318-.123-.063-2.832-1.432-6.278.047-.257.109-.547.085-.785-.042zm12.135 3.75c-.156-.098-.286-.243-.362-.424-.187-.442.023-.927.468-1.084 4.381-1.536 7.685.48 7.823.567.415.26.555.787.312 1.178-.242.39-.776.495-1.191.238-.12-.072-2.727-1.621-6.267-.379-.266.091-.553.046-.783-.096z&#34; fill=&#34;#65471b&#34;/&gt;&lt;/svg&gt;
      &lt;h4&gt;is there an easier way?&lt;/h4&gt;
      &lt;p&gt;This works so far, but depending on a console application means once again having to use my HexoCommander and write commands to a text file when I’m on the road. Then I can also send the webmentions for a post directly manually via the &lt;strong&gt;&lt;a href=&#34;https://telegraph.p3k.io/&#34;&gt;Telegraph&lt;/a&gt;&lt;/strong&gt; service.&lt;/p&gt;
&lt;p&gt;One possibility would be a cron job in a Github Action, but this would require creating a new container with all dependencies every time the build has just run and Github has deployed the created files, just to run a console command that might not even return any results since there is nothing to mention in the last post. Unsatisfactory.&lt;/p&gt;
&lt;p&gt;Another possibility would be to utilize my Atom feed by setting up a Zapier, IFTT or Make&amp;#x2F;Integromat task, which picks the last added entry and run the &lt;a href=&#34;https://telegraph.p3k.io/api&#34;&gt;Telegraph API&lt;/a&gt; against it.&lt;/p&gt;
&lt;p&gt;Any ideas?&lt;/p&gt;

    &lt;/div&gt;
  

&lt;h3 id=&#34;Publish-on-Mastodon&#34;&gt;&lt;a href=&#34;#Publish-on-Mastodon&#34; class=&#34;headerlink&#34; title=&#34;Publish on Mastodon&#34;&gt;&lt;/a&gt;Publish on Mastodon&lt;/h3&gt;&lt;p&gt;I’m relatively new to Mastodon (Nov 22), but in the past I have syndicated some of my posts manually on Twitter. Now, that I’ve said goodbye to the greedy bird site, I’m thinking about how I’m going to automate publishing the notes in particular, but also at least an excerpt from a post, on Mastodon.&lt;/p&gt;
&lt;p&gt;What I do in the meantime? After the site is successfully deployed, I open up my Mastodon client and copy the complete content of a note or write an excerpt of a post manually into a new toot and append the permalink. After hitting SEND, I copy the newly created Mastodon post URL into a Frontmatter attribute called &lt;code&gt;syndication&lt;/code&gt; of the note or post and commit the file to GitHub. Build and deployment runs again and the syndication link will be visible on kiko.io.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/The-State-of-the-Blog/kiko-io-SYNDICATION.png&#34; alt=&#34;kiko.io&amp;#39;s Syndication Workflow&#34;&gt;&lt;/p&gt;

    &lt;div class=&#34;alertbox thinkbox&#34;&gt;
      &lt;svg viewBox=&#34;0 0 36 36&#34; xmlns=&#34;http://www.w3.org/2000/svg&#34;&gt;&lt;circle cx=&#34;18&#34; cy=&#34;17.018&#34; fill=&#34;#ffcb4c&#34; r=&#34;17&#34;/&gt;&lt;g fill=&#34;#65471b&#34;&gt;&lt;path d=&#34;m14.524 21.036c-.145-.116-.258-.274-.312-.464-.134-.46.13-.918.59-1.021 4.528-1.021 7.577 1.363 7.706 1.465.384.306.459.845.173 1.205-.286.358-.828.401-1.211.097-.11-.084-2.523-1.923-6.182-1.098-.274.061-.554-.016-.764-.184z&#34;/&gt;&lt;ellipse cx=&#34;13.119&#34; cy=&#34;11.174&#34; rx=&#34;2.125&#34; ry=&#34;2.656&#34;/&gt;&lt;ellipse cx=&#34;24.375&#34; cy=&#34;12.236&#34; rx=&#34;2.125&#34; ry=&#34;2.656&#34;/&gt;&lt;/g&gt;&lt;path d=&#34;m17.276 35.149s1.265-.411 1.429-1.352c.173-.972-.624-1.167-.624-1.167s1.041-.208 1.172-1.376c.123-1.101-.861-1.363-.861-1.363s.97-.4 1.016-1.539c.038-.959-.995-1.428-.995-1.428s5.038-1.221 5.556-1.341c.516-.12 1.32-.615 1.069-1.694-.249-1.08-1.204-1.118-1.697-1.003-.494.115-6.744 1.566-8.9 2.068l-1.439.334c-.54.127-.785-.11-.404-.512.508-.536.833-1.129.946-2.113.119-1.035-.232-2.313-.433-2.809-.374-.921-1.005-1.649-1.734-1.899-1.137-.39-1.945.321-1.542 1.561.604 1.854.208 3.375-.833 4.293-2.449 2.157-3.588 3.695-2.83 6.973.828 3.575 4.377 5.876 7.952 5.048z&#34; fill=&#34;#f19020&#34;/&gt;&lt;path d=&#34;m9.296 6.351c-.164-.088-.303-.224-.391-.399-.216-.428-.04-.927.393-1.112 4.266-1.831 7.699-.043 7.843.034.433.231.608.747.391 1.154-.216.405-.74.546-1.173.318-.123-.063-2.832-1.432-6.278.047-.257.109-.547.085-.785-.042zm12.135 3.75c-.156-.098-.286-.243-.362-.424-.187-.442.023-.927.468-1.084 4.381-1.536 7.685.48 7.823.567.415.26.555.787.312 1.178-.242.39-.776.495-1.191.238-.12-.072-2.727-1.621-6.267-.379-.266.091-.553.046-.783-.096z&#34; fill=&#34;#65471b&#34;/&gt;&lt;/svg&gt;
      &lt;h4&gt;is there an easier way?&lt;/h4&gt;
      &lt;p&gt;The Mastodon API is really simple and there are many examples written in Python, JS and other languages out there that are easy to adapt. But here I have the same problem as when sending webmentions: the target url is not yet available at the time of generating the page, when some code is running to do something. It must be a downstream task as well. I need some kind of service running on a server, where I only have a static site. Independent GitHub Action or Azure Function, triggered by a webhook after deployment is finished, which processes all notes and posts without the &lt;code&gt;syndication&lt;/code&gt; Frontmatter? Or extending HexoCommander again, but how to trigger this buddy automatically, as he depends on file synchronization?&lt;/p&gt;

    &lt;/div&gt;
  

&lt;hr&gt;
&lt;h2 id=&#34;Summary&#34;&gt;&lt;a href=&#34;#Summary&#34; class=&#34;headerlink&#34; title=&#34;Summary&#34;&gt;&lt;/a&gt;Summary&lt;/h2&gt;&lt;p&gt;Hexo is a good SSG system with which you can achieve good results in a short time and which leaves enough room for your own creative ideas. The documentation needs a lot of improvement, especially regarding the details in depth and enriched with examples. I’m not surprised that Hexo seems to lag behind other systems like Hugo or 11ty. Maybe this also have something to do with communication. It’s not as much of a conversation in the Western space as others. In the future, I have planed to be more involved in matters of documentation and communication, even though I have not yet understood the full complexity of the substructure.&lt;/p&gt;
&lt;p&gt;However, I enjoy working with Hexo despite or because of the shortcomings. Coding without a challenge is like driving on a highway … boring :)&lt;/p&gt;
&lt;p&gt;My workflows are currently not really straightforward, especially with regard to connectivity. However, this is also due to the fact that there are no reactive components working on “my” web server.&lt;/p&gt;
&lt;p&gt;It’s all still way too much tinkering, but it will be fun over the next few months to edit all the remarks in the “IS THERE AN EASIER WAY?” blocks above and continue to develop the blog.&lt;/p&gt;

        </content>
        <category term="Tools" scheme="https://kiko.io/categories/Tools/" />
        <category term="Hexo" scheme="https://kiko.io/tags/Hexo/" />
        <category term="Blogging" scheme="https://kiko.io/tags/Blogging/" />
    </entry>
    <entry>
        <id>https://kiko.io/post/Mastodon-simply-explained/</id>
        <title>Mastodon simply explained</title>
        <published>2022-11-15T15:32:07.000Z</published>
        <updated>2022-11-15T15:32:07.000Z</updated>
        <link href="https://kiko.io/post/Mastodon-simply-explained/"/>
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Mastodon-simply-explained.thumb.png" height="1200" width="630" />
        <content type="html">
            
            
            &lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Mastodon-simply-explained.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;This weekend I had a revival experience. I got myself a &lt;a href=&#34;https://joinmastodon.org/&#34;&gt;&lt;strong&gt;Mastodon&lt;/strong&gt;&lt;/a&gt; account, after many years of staying away from social media as far as I could and at most tweeting a new blog post. Since my active Twitter days, things have taken such a turn for the worse, that I’ve preferred to stay away completely.&lt;/p&gt;
&lt;p&gt;I don’t know what made me join Mastodon on Sunday, but it sparked something in me: The love for the good old internet of the late 90s, early 2000s. These guys gave me a warm welcome and made me feel that Internet communities, away from sleazy influencers and banner ads, could actually still work. I got a taste of it, when I let this blog become part of IndieWeb over a year ago, but didn’t quite believe in it because of the low traffic and mentions.&lt;/p&gt;
&lt;p&gt;Now the richest man on the planet has to come along and buy the bird site, and a niche product called Mastodon, well known but underestimated in tech circles, almost explodes under the onslaught of disappointed commercial users. And that’s what we are on Twitter, Facebook and Co … a commercial object.&lt;/p&gt;
&lt;p&gt;The problem now will be how the community can integrate these many users for whom it was not mentally prepared. What now adapts to whom? The most important thing, however, will be to teach the newcomers (and I count myself among them) that Mastodon is not Twitter in new clothes!&lt;/p&gt;
&lt;p&gt;I was going to write a few things about this, but this morning I read a Twitter thread from &lt;a href=&#34;https://mastodon.green/@pjakobs&#34;&gt;&lt;strong&gt;Peter Jakobs&lt;/strong&gt;&lt;/a&gt;, a self-proclaimed digital Aboriginal from Germany, that just sums it all up and explains it so well I could hardly do it:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/pjakobs/status/1590276045521195008&#34;&gt;&lt;img src=&#34;/post/Mastodon-simply-explained/tweet-peter-jakobs-22-11-09.png&#34; alt=&#34;Tweet from Peter Jakobs, November 29, 2022&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;That’s why I’m now doing something I’ve never done before: I quote Peter here completely, translated from German into English … Curtain up (and thank you &lt;a href=&#34;https://www.deepl.com/en/translator&#34;&gt;DeepL&lt;/a&gt; :D):&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;


    &lt;div&gt;
        &lt;blockquote&gt;&lt;p&gt;Keyword “Mastodon for Twitterer” 🧵&lt;/p&gt;
&lt;p&gt;I’ve now read from a few of you that Mastodon is too complicated, you’ve had problems, or you somehow don’t like it.&lt;br&gt;As a stone age Twitterer (I created this account on Feb 13, 2007), I have by now half of my activities to Mastodon. Many of my posts you see here now come from there and I mostly come here to respond to your replies.&lt;/p&gt;
&lt;p&gt;So it is possible for an old white guy like me to move, and maybe I can ease some of your fears and help with the move.&lt;/p&gt;
&lt;p&gt;You ask why you should and that almost nothing has changed here (yet)?&lt;/p&gt;
&lt;p&gt;Maybe, but the signs on the wall don’t bode well. Elon Musk is, if you look at it neutrally, someone who destroys things in order to rebuild them - better, in his sense.&lt;br&gt;But that means change is coming. It will disturb you here, but it will come here maybe not in one fell swoop like a move to Mastodon.&lt;/p&gt;
&lt;p&gt;I’m always a friend of bringing about change myself, because then I can shape it in my own way and am not dependent on others. &lt;/p&gt;
&lt;p&gt;But it could be that you will still like Twitter in 12 or 18 months. I know this myself, my Twitter experience is by no means as negative as many others say.&lt;br&gt;But many others, like me, go a different way, and are thus no longer accessible here.&lt;/p&gt;
&lt;p&gt;But that is exactly one of the biggest disadvantages of Twitter and one of the advantages of Mastodon.&lt;br&gt;Let me explain.&lt;/p&gt;
&lt;p&gt;Many write that they are confused by these “instances” (some say “groups” which is not quite true) on Mastodon.&lt;br&gt;I can understand that, it can be confusing. But what if I told you that &lt;strong&gt;there is also an instance on Twitter, but just exactly one&lt;/strong&gt;. Twitter.com namely. This one can’t communicate with anything or anyone else, an island in the middle of a vast social media ocean. And now this island has been stupidly bought by someone whose idea of what such an island should look like is rather special.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Mastodon has many such islands and they are connected with bridges.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You choose an island, pitch your tents there and - you are not tied to this island. On the one hand you can communicate completely freely with all inhabitants of all other islands, on the other hand you can, if you want to, &lt;strong&gt;take down your tents again and move to another island&lt;/strong&gt; (you will lose a little bit, but not as much as if you want to leave here [at Twitter]). These islands (instances) are of different sizes. The biggest ones in Germany are &lt;a href=&#34;https://mastodon.social/&#34;&gt;mastodon.social&lt;/a&gt;, &lt;a href=&#34;https://troet.cafe/&#34;&gt;troet.cafe&lt;/a&gt;, &lt;a href=&#34;https://mastodon.green/&#34;&gt;mastodon.green&lt;/a&gt; and a few others. But there are also tiny islands, I know more than one with a single inhabitant. Is he isolated on his island? No, because he is connected with all the others via said bridges.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Every island has one (or more) chiefs who keep order&lt;/strong&gt; (Twitter does too, but we’ve complained about that a lot). These chiefs are often private individuals who run an instance as a hobby, but with the large instances there is usually a team behind it, and some also a small company (&lt;a href=&#34;https://mastodon.social/&#34;&gt;mastodon.social&lt;/a&gt;, for example, is run by a limited liability company that was founded by the chief developer of the Mastodon software, &lt;a href=&#34;https://mastodon.green/&#34;&gt;mastodon.green&lt;/a&gt; is, as far as I know, a one-man limited liability company).&lt;/p&gt;
&lt;p&gt;So now we know that there are many islands, that we are not trapped on these islands and that we can move.&lt;br&gt;These islands are one of the standout features of Mastodon: &lt;strong&gt;a Musk, a Trump, or even a certain four-letter newspaper can buy an island or even build an island themselves, but they can’t possibly buy all the islands, simply because it’s so cheap to build new islands.&lt;/strong&gt; (I read somewhere once, to run an instance costs about 1€ per user per month). But because the interesting thing about Twitter, like Mastodon, is not the medium itself, but the networks we build on it, it doesn’t matter what happens to individual islands as long as we can move freely.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;If individual islands do not want to comply with the rules at all, then they are “defederated”&lt;/strong&gt;, or figuratively: the bridges there are demolished. However, this is the decision of each individual island chief, so it may not be grassroots democracy, but it is distributed.  &lt;/p&gt;
&lt;p&gt;Ok pjakobs, enough of the chatter, how am I supposed to find out which island is suitable for me?&lt;br&gt;Here is a searchable list of Mastodon instances: &lt;a href=&#34;https://instances.social/list#lang=de&amp;allowed=&amp;prohibited=&amp;min-users=&amp;max-users=&#34;&gt;instances.social&amp;#x2F;list&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;It is possible that another aspect of the “island” image will apply to you: there is a local timeline on the islands, which is also called that. So, if you choose an island that is particularly suited to a geographical region, a topic or a language, then you will see the contributions of the other “inhabitants of this island” in their local timeline - which hopefully have a certain thematic cohesion. However, as already mentioned, you can follow all people on all instances and you will also see them in your own timeline.&lt;/p&gt;
&lt;p&gt;Speaking of timelines: they are chronological and you only see the posts (toots) of those you follow. &lt;strong&gt;No algorithm, no “others like this too”, no good morning tweets in the late evening. Just the way Twitter used to be 10 years ago.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Follow: here is one of the points that bothers me the most, even if it is a small thing. Currently there are two software versions of Mastodon in use: 3.5.3 and four, which seem to handle following a bit differently.&lt;/p&gt;
&lt;p&gt;In one (I assume the older version), if you want to follow an account on another instance, you have to specify your own handle again (in my case “@&lt;a href=&#34;mailto:&amp;#x70;&amp;#106;&amp;#x61;&amp;#x6b;&amp;#111;&amp;#98;&amp;#x73;&amp;#x40;&amp;#x6d;&amp;#97;&amp;#115;&amp;#116;&amp;#111;&amp;#x64;&amp;#x6f;&amp;#x6e;&amp;#46;&amp;#x67;&amp;#x72;&amp;#101;&amp;#101;&amp;#110;&#34;&gt;&amp;#x70;&amp;#106;&amp;#x61;&amp;#x6b;&amp;#111;&amp;#98;&amp;#x73;&amp;#x40;&amp;#x6d;&amp;#97;&amp;#115;&amp;#116;&amp;#111;&amp;#x64;&amp;#x6f;&amp;#x6e;&amp;#46;&amp;#x67;&amp;#x72;&amp;#101;&amp;#101;&amp;#110;&lt;/a&gt;“ - but that’s no longer the case in the new version, there you &lt;strong&gt;click a follow button and you follow the account&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Another thing that is very very different is DMs. Here on Twitter, we’re used to DMs essentially working like little emails or a messenger: we have our own inbox and that’s where the dialogue with the other person shows up. Feels good, not visible to others, because yes, in a completely different realm.&lt;br&gt;&lt;strong&gt;In Mastodon, direct messages are simply toots that are displayed only to the recipient(s)&lt;/strong&gt; - and normally among all the other interactions.&lt;/p&gt;
&lt;p&gt;It’s confusing and doesn’t feel as nicely protected as it does here, and as I walked around town a bit yesterday I realized: this is intentional. Twitter creates an apparent privacy through display that DMs don’t offer.&lt;br&gt;&lt;strong&gt;DMs are deliberately not PM, not private messages.&lt;/strong&gt; Mastodon also makes that clear through its presentation. I have therefore added my Threema and Telegram link to my profile, these tools actually offer private conversations. Is not comfortable but honest.&lt;/p&gt;
&lt;p&gt;You have created an account, but do not want to move 100% yet or, as in my case, still have many friends on this site? There is also a kind of “bridge” from Mastodon archipelago to Twitter. You can mirror your tweets to Mastodon or vice versa. This is only valid for tweets, not for replies. That means you have to be a bit careful that you don’t just spam your followers in the other network, but also interact with them. After a few days of mirroring from Twitter to Mastodon I turned the bridge around, today probably 80% of the tweets you see from me and the non-replies are on Mastodon. I use &lt;a href=&#34;https://crossposter.masto.donte.com.br/&#34;&gt;crossposter.masto.donte.com.br&lt;/a&gt; for this.&lt;/p&gt;
&lt;p&gt;The lovely people from &lt;a href=&#34;https://twitter.com/digitalcourage&#34;&gt;@digitalcourage&lt;/a&gt; not only run a Mastodon instance themselves, but also put together a &lt;a href=&#34;https://digitalcourage.de/digitale-selbstverteidigung/fediverse&#34;&gt;great overview&lt;/a&gt; of the Fediverse (the federated social media universe, which is much more than just Mastodon).&lt;/p&gt;
&lt;p&gt;In summary, if Musk is really fucking this up, you don’t have to be a helpless victim of his actions. Even if Mastodon might not be an alternative for you at the moment, create an account, try to find your followers over there. &lt;/p&gt;
&lt;p&gt;A life raft is not as comfortable as a floating boat, but it’s better than a sinking boat!&lt;/p&gt;
&lt;p&gt;Ah, here’s another more complete overview of Mastodon:&lt;br&gt;&lt;a href=&#34;https://the-federation.info/mastodon&#34;&gt;the-federation.info&amp;#x2F;mastodon&lt;/a&gt; (takes a little while to load)&lt;/p&gt;
&lt;/blockquote&gt;
        &lt;cite&gt;&lt;a href=&#34;https://twitter.com/pjakobs/status/1590276045521195008&#34;&gt;--- Peter Jakobs&lt;/a&gt;&lt;/cite&gt;
    &lt;/div&gt;
  

&lt;p&gt;You will find Peter Jakobs on this island: &lt;a href=&#34;https://mastodon.green/@pjakobs&#34;&gt;@pjakobs@mastodon.green&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;My new social media residencies are: &lt;a href=&#34;https://indieweb.social/@kiko&#34;&gt;@kiko@indieweb.social&lt;/a&gt; for Tech Stuff in English and &lt;a href=&#34;https://hessen.social/@kiko&#34;&gt;@kiko@hessen.social&lt;/a&gt; for politics and society in German.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Happy Tooting !&lt;/strong&gt;&lt;/p&gt;

        </content>
        <category term="Tools" scheme="https://kiko.io/categories/Tools/" />
        <category term="Publishing" scheme="https://kiko.io/tags/Publishing/" />
        <category term="Social Media" scheme="https://kiko.io/tags/Social-Media/" />
    </entry>
    <entry>
        <id>https://kiko.io/post/Syndicate-Mastodon-Hashtags-in-your-favorite-Feed-Reader/</id>
        <title>Syndicate Mastodon Hashtags in your favorite Feed Reader</title>
        <published>2022-11-13T16:48:40.000Z</published>
        <updated>2022-11-13T16:48:40.000Z</updated>
        <link href="https://kiko.io/post/Syndicate-Mastodon-Hashtags-in-your-favorite-Feed-Reader/"/>
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Syndicate-Mastodon-Hashtags-in-your-favorite-Feed-Reader.thumb.png" height="1200" width="630" />
        <content type="html">
            
            
            &lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Syndicate-Mastodon-Hashtags-in-your-favorite-Feed-Reader.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;Ok, I admit it: I read RSS feeds. Quite old school you might think, but I’m mostly off Social Media and the most news sites quite a while ago, with a few exceptions. I just want to read selective stuff, especially in the direction of technology, and not interrupted by items, the news provider think I have to read. My favorite tool for my feed collection is &lt;a href=&#34;https://feedly.com/&#34;&gt;Feedly&lt;/a&gt;, which I open up almost every morning.&lt;/p&gt;
&lt;p&gt;Today, Max Böck gave me the momentum with his article &lt;a href=&#34;https://mxb.dev/blog/the-indieweb-for-everyone/&#34;&gt;The IndieWeb for Everyone&lt;/a&gt; to try another type of social media I know for quite a long time, but never give it a chance: &lt;a href=&#34;https://de.wikipedia.org/wiki/Mastodon_(Software)&#34;&gt;Mastodon&lt;/a&gt;. I’m now part of it on &lt;a href=&#34;https://indieweb.social/web/@kiko&#34;&gt;indieweb.social&lt;/a&gt;.&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;p&gt;And as you just do … you surf around a bit on it and read a few things until a post by &lt;a href=&#34;https://indieweb.social/web/@matthiasott@mastodon.social&#34;&gt;Matthias Ott&lt;/a&gt; caught my attention:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://indieweb.social/web/@matthiasott@mastodon.social/109258009575261184&#34;&gt;&lt;img src=&#34;/post/Syndicate-Mastodon-Hashtags-in-your-favorite-Feed-Reader/max-ott-post-on-mastondon-rss.png&#34; alt=&#34;Matthias Ott&amp;#39;s Post on Mastodon, 30. October 2022&#34;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Ok, nice … but does this work for other Mastadon things also, like hashtags? I have to say that I am currently very interested in creating PWAs and the techniques behind them, and I’m always looking for new resources to read. So it didn’t take me 5 minutes to start reading posts in Mastodon with the hashtag &lt;a href=&#34;https://indieweb.social/web/tags/pwa&#34;&gt;#pwa&lt;/a&gt; almost automatically.&lt;/p&gt;
&lt;p&gt;What can I say? It works…&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 1&lt;/strong&gt;&lt;br&gt;Search for an hash tag, f.e. &lt;code&gt;#pwa&lt;/code&gt;. It will lead to an Url like this, depending on your Mastodon server:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://indieweb.social/web/tags/pwa&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 2&lt;/strong&gt;&lt;br&gt;Cut out &lt;code&gt;/web&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Step 3&lt;/strong&gt;&lt;br&gt;Add &lt;code&gt;.rss&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;… and you got your feed on a special topic …&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/Syndicate-Mastodon-Hashtags-in-your-favorite-Feed-Reader/pwa-mastodon-feed.png&#34; alt=&#34;PWA Feed from Mastodon&#34;&gt;&lt;/p&gt;
&lt;p&gt;… you can add to your favorite feed reader.&lt;br&gt;&lt;img src=&#34;/post/Syndicate-Mastodon-Hashtags-in-your-favorite-Feed-Reader/feedly-pwa-feed.png&#34; alt=&#34;PWA Feed in Feedly&#34;&gt;&lt;/p&gt;
&lt;p&gt;Happy Reading…&lt;/p&gt;

        </content>
        <category term="Tools" scheme="https://kiko.io/categories/Tools/" />
        <category term="Collection" scheme="https://kiko.io/tags/Collection/" />
        <category term="Publishing" scheme="https://kiko.io/tags/Publishing/" />
        <category term="Mastodon" scheme="https://kiko.io/tags/Mastodon/" />
    </entry>
    <entry>
        <id>https://kiko.io/post/Anatomy-of-Service-Worker-Communication/</id>
        <title>Anatomy of Service Worker Communication</title>
        <published>2022-11-12T11:26:34.000Z</published>
        <updated>2022-11-12T11:26:34.000Z</updated>
        <link href="https://kiko.io/post/Anatomy-of-Service-Worker-Communication/"/>
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Anatomy-of-Service-Worker-Communication.thumb.png" height="1200" width="630" />
        <content type="html">
            
            
            &lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Anatomy-of-Service-Worker-Communication.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;I have a SPA that works as a PWA, which means that in the background a service worker makes sure that the required files for the offline mode end up in the cache.&lt;/p&gt;
&lt;p&gt;From time to time I also update the Service Worker, which defines which files it should keep offline and which not. Unfortunately, the app itself didn’t get any of this because there was no communication channel for them to talk.&lt;/p&gt;
&lt;p&gt;If you research this topic on the web, you have to dig through many architecture pages and documentations that have one thing in common: sometimes they just don’t get to the point. So here are my 50 cents on the subject and my sample implementation.&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h2 id=&#34;Preliminary-Thoughts&#34;&gt;&lt;a href=&#34;#Preliminary-Thoughts&#34; class=&#34;headerlink&#34; title=&#34;Preliminary Thoughts&#34;&gt;&lt;/a&gt;Preliminary Thoughts&lt;/h2&gt;&lt;p&gt;In most examples I’ve read, the authors talk about code for the app itself and code for the Service Worker, but that falls short to me, because in my opinion there are THREE parts:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The &lt;strong&gt;App&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;Service Worker&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;The &lt;strong&gt;Service Worker Management&lt;/strong&gt;, which takes care of the proper registration and installation of the service worker&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The last part of the code shouldn’t be part of the app itself, in the meaning of SoC (Seperation of Concerns). It does not contribute to the functioning of the app.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;The-App&#34;&gt;&lt;a href=&#34;#The-App&#34; class=&#34;headerlink&#34; title=&#34;The App&#34;&gt;&lt;/a&gt;The App&lt;/h2&gt;&lt;p&gt;Here’s the general anatomy of my App:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;app.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; app = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;#x27;settings&amp;#x27;&lt;/span&gt;: &amp;#123; &lt;span class=&#34;comment&#34;&gt;// some stuff on app settings&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;#x27;pages&amp;#x27;&lt;/span&gt;: &amp;#123; &lt;span class=&#34;comment&#34;&gt;// views of the SPA&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;#x27;ui&amp;#x27;&lt;/span&gt;: &amp;#123; &lt;span class=&#34;comment&#34;&gt;// some UI helper&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;dialog&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;msg, title&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// show the message in a toast, popup or elsewhere&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;#x27;starter&amp;#x27;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;init&amp;#x27;&lt;/span&gt;: &amp;#123; &lt;span class=&#34;comment&#34;&gt;// initializing of the app&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;app&lt;/span&gt; = app;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;app.&lt;span class=&#34;property&#34;&gt;starter&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;init&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Nothing unlikely, as I guess. It is built according to the composite pattern and has one entry point, that is called at the end of the file after it is instantiated.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;The-Service-Worker&#34;&gt;&lt;a href=&#34;#The-Service-Worker&#34; class=&#34;headerlink&#34; title=&#34;The Service Worker&#34;&gt;&lt;/a&gt;The Service Worker&lt;/h2&gt;&lt;p&gt;The Service Worker lives in its own JS file and its implementation is really straight forward:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;service-worker.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; cacheName = &lt;span class=&#34;string&#34;&gt;&amp;#x27;my-apps-cache-v1.2.3&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; appFiles = [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// list of app relating files, that has to be handled&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; excludeUrls = [ &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// list if URL&amp;#x27;s that shouldn&amp;#x27;t be handled&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;self.&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;install&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;e&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// on install, open the cache and add all appFiles&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;//activate immediatly and dont wait for connected clients to disconnect&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  self.&lt;span class=&#34;title function_&#34;&gt;skipWaiting&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;self.&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;activate&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;e&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// remove old caches&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;//say to all clients: Now I&amp;#x27;m responsible&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  self.&lt;span class=&#34;property&#34;&gt;clients&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;claim&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;self.&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;fetch&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;e&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// intercept requests and serve the app files out of the cache&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;I won’t go into the depth of my implementation here now, since it doesn’t matter for the message exchange. It is only good for you to know that I have versioned the cache name to exchange it with new versions.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;The-Service-Worker-Management&#34;&gt;&lt;a href=&#34;#The-Service-Worker-Management&#34; class=&#34;headerlink&#34; title=&#34;The Service Worker Management&#34;&gt;&lt;/a&gt;The Service Worker Management&lt;/h2&gt;&lt;p&gt;Now the management code for the Service Worker. It has to be loaded with the app code, because it is client code and later on it needs knowledge of the app.&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;sw-management.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;serviceWorker&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; navigator) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  navigator.&lt;span class=&#34;property&#34;&gt;serviceWorker&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;register&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;service-worker.js&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .&lt;span class=&#34;title function_&#34;&gt;then&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;registration&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// detect Service Worker update available&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      registration.&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;updatefound&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (registration.&lt;span class=&#34;property&#34;&gt;installing&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;comment&#34;&gt;// detect install of new Service Worker&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          registration.&lt;span class=&#34;property&#34;&gt;installing&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;statechange&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (registration.&lt;span class=&#34;property&#34;&gt;waiting&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (navigator.&lt;span class=&#34;property&#34;&gt;serviceWorker&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;controller&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// there is an existing controller that has been updated&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;//&lt;span class=&#34;doctag&#34;&gt;TODO:&lt;/span&gt; Send a message to the app&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// first install&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h2 id=&#34;Lets-Communicate…&#34;&gt;&lt;a href=&#34;#Lets-Communicate…&#34; class=&#34;headerlink&#34; title=&#34;Lets Communicate…&#34;&gt;&lt;/a&gt;Lets Communicate…&lt;/h2&gt;&lt;p&gt;In this setup, the communication code can be implemented. Let’s do it as a round trip.&lt;/p&gt;
&lt;h3 id=&#34;1-Client-sends-message-to-Service-Worker&#34;&gt;&lt;a href=&#34;#1-Client-sends-message-to-Service-Worker&#34; class=&#34;headerlink&#34; title=&#34;1. Client sends message to Service Worker&#34;&gt;&lt;/a&gt;1. Client sends message to Service Worker&lt;/h3&gt;&lt;p&gt;As &lt;code&gt;sw-management.js&lt;/code&gt; represents our Service Worker management code, we add a little function to send a message in here:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;sw-management.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;sendMessageToServiceWorker&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;type, msg&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (navigator.&lt;span class=&#34;property&#34;&gt;serviceWorker&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;controller&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      navigator.&lt;span class=&#34;property&#34;&gt;serviceWorker&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;controller&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;postMessage&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;#x27;type&amp;#x27;&lt;/span&gt;: type, &lt;span class=&#34;string&#34;&gt;&amp;#x27;msg&amp;#x27;&lt;/span&gt;: msg &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;We define a type for the purpose of our communcation and a message itself. The function can be called wherever, like this:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;sendMessageToServiceWorker&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;TEST&amp;quot;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;quot;Hey, Service Worker&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;2-Service-Worker-receives-the-message&#34;&gt;&lt;a href=&#34;#2-Service-Worker-receives-the-message&#34; class=&#34;headerlink&#34; title=&#34;2. Service Worker receives the message&#34;&gt;&lt;/a&gt;2. Service Worker receives the message&lt;/h3&gt;&lt;p&gt;In the Service Worker code we need to add a recipient:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;service-worker.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;self.&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;message&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;event&lt;/span&gt;) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!event.&lt;span class=&#34;property&#34;&gt;data&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (event.&lt;span class=&#34;property&#34;&gt;data&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;type&lt;/span&gt; === &lt;span class=&#34;string&#34;&gt;&amp;#x27;TEST&amp;#x27;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// do something regarding to the type and/or with the message&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;3-…-and-sends-a-message-back-to-the-client&#34;&gt;&lt;a href=&#34;#3-…-and-sends-a-message-back-to-the-client&#34; class=&#34;headerlink&#34; title=&#34;3. … and sends a message back to the client&#34;&gt;&lt;/a&gt;3. … and sends a message back to the client&lt;/h3&gt;&lt;p&gt;What we want to do with the message depends what we want to achive, but in this example, just let’s greet back:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;service-worker.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;sendMessageToClients&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;type, msg&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// as the SW can control multiple clients, we have to catch them all&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  self.&lt;span class=&#34;property&#34;&gt;clients&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;matchAll&lt;/span&gt;(&amp;#123; &lt;span class=&#34;attr&#34;&gt;includeUncontrolled&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt; &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      .&lt;span class=&#34;title function_&#34;&gt;then&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;clients&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; client &lt;span class=&#34;keyword&#34;&gt;of&lt;/span&gt; clients) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              client.&lt;span class=&#34;title function_&#34;&gt;postMessage&lt;/span&gt;(&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &amp;#123;&lt;span class=&#34;string&#34;&gt;&amp;#x27;type&amp;#x27;&lt;/span&gt;: type, &lt;span class=&#34;string&#34;&gt;&amp;#x27;msg&amp;#x27;&lt;/span&gt;: msg &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              );&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;self.&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;message&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;event&lt;/span&gt;) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!event.&lt;span class=&#34;property&#34;&gt;data&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (event.&lt;span class=&#34;property&#34;&gt;data&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;type&lt;/span&gt; === &lt;span class=&#34;string&#34;&gt;&amp;#x27;TEST&amp;#x27;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;title function_&#34;&gt;sendMessageToClients&lt;/span&gt;(event.&lt;span class=&#34;property&#34;&gt;data&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;type&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;Hi Clients...&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;4-Client-receives-the-answer-from-the-Service-Worker&#34;&gt;&lt;a href=&#34;#4-Client-receives-the-answer-from-the-Service-Worker&#34; class=&#34;headerlink&#34; title=&#34;4. Client receives the answer from the Service Worker&#34;&gt;&lt;/a&gt;4. Client receives the answer from the Service Worker&lt;/h3&gt;&lt;p&gt;In order to get messages from the Service Worker, we have to implement a receiver in the client also:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;sw-management.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;serviceWorker&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; navigator) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;//... &amp;#x27;navigator.serviceWorker.register&amp;#x27; stuff&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  navigator.&lt;span class=&#34;property&#34;&gt;serviceWorker&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;message&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;event&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (event.&lt;span class=&#34;property&#34;&gt;data&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// do something with the message from the Service Worker&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;5-…-and-shows-it-in-the-app&#34;&gt;&lt;a href=&#34;#5-…-and-shows-it-in-the-app&#34; class=&#34;headerlink&#34; title=&#34;5. … and shows it in the app&#34;&gt;&lt;/a&gt;5. … and shows it in the app&lt;/h3&gt;&lt;p&gt;As I pointed out earlier, that the management code has to be loaded alongside with the app code, it’s a breeze to show the message:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;app.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; app = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;#x27;ui&amp;#x27;&lt;/span&gt;: &amp;#123; &lt;span class=&#34;comment&#34;&gt;// some UI helper&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;dialog&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;msg, title&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// show the message in a toast, popup or elsewhere&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;app&lt;/span&gt; = app;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;sw-management.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;serviceWorker&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; navigator) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;//... &amp;#x27;navigator.serviceWorker.register&amp;#x27; stuff&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  navigator.&lt;span class=&#34;property&#34;&gt;serviceWorker&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;message&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;event&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (event.&lt;span class=&#34;property&#34;&gt;data&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        app.&lt;span class=&#34;property&#34;&gt;ui&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;dialog&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;info&lt;/span&gt;(event.&lt;span class=&#34;property&#34;&gt;data&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;msg&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;Service Worker says...&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h2 id=&#34;The-Update-Message&#34;&gt;&lt;a href=&#34;#The-Update-Message&#34; class=&#34;headerlink&#34; title=&#34;The Update Message&#34;&gt;&lt;/a&gt;The Update Message&lt;/h2&gt;&lt;p&gt;With this infrastructure, everything is there to show a message, when the Service Worker is updated:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;sw-management.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;serviceWorker&amp;#x27;&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; navigator) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  navigator.&lt;span class=&#34;property&#34;&gt;serviceWorker&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;register&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;service-worker.js&amp;#x27;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .&lt;span class=&#34;title function_&#34;&gt;then&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;registration&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// detect Service Worker update available&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      registration.&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;updatefound&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (registration.&lt;span class=&#34;property&#34;&gt;installing&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;comment&#34;&gt;// detect install of new Service Worker&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          registration.&lt;span class=&#34;property&#34;&gt;installing&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;statechange&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (registration.&lt;span class=&#34;property&#34;&gt;waiting&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (navigator.&lt;span class=&#34;property&#34;&gt;serviceWorker&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;controller&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// there is an existing controller that has been updated&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                app.&lt;span class=&#34;property&#34;&gt;ui&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;dialog&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;info&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;New version installed&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;Service Worker&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;                &lt;span class=&#34;comment&#34;&gt;// first install&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;            &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Important to point out, that the Service Worker side of the communication is not involved in this case, because only the client-side management code knows when a new version has to be installed.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;More-Info&#34;&gt;&lt;a href=&#34;#More-Info&#34; class=&#34;headerlink&#34; title=&#34;More Info&#34;&gt;&lt;/a&gt;More Info&lt;/h2&gt;
        &lt;ul class=&#34;moreinfo-list&#34;&gt;
            &lt;li&gt;Jake Archibald: &lt;a href=&#34;https://web.dev/service-worker-lifecycle/&#34;&gt;The service worker lifecycle&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Demian Renzulli &amp; Andrew Guan: &lt;a href=&#34;https://web.dev/two-way-communication-guide/&#34;&gt;Two-way communication with service workers&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Adam Bar: &lt;a href=&#34;https://whatwebcando.today/articles/handling-service-worker-updates&#34;&gt;Handling Service Worker updates – how to keep the app updated and stay sane&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Felix Gerschau: &lt;a href=&#34;https://www.peterkroener.de/postmessage-zwischen-service-worker-und-clients/&#34;&gt;Service Worker Lifecycle Explained&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Felix Gerschau: &lt;a href=&#34;https://felixgerschau.com/how-to-communicate-with-service-workers/&#34;&gt;How to communicate with Service Workers&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Peter Kröner: &lt;a href=&#34;https://www.peterkroener.de/postmessage-zwischen-service-worker-und-clients/&#34;&gt;PostMessage zwischen Service Worker und Client(s) (GERMAN)&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
    

        </content>
        <category term="JavaScript" scheme="https://kiko.io/categories/JavaScript/" />
        <category term="SPA" scheme="https://kiko.io/tags/SPA/" />
        <category term="PWA" scheme="https://kiko.io/tags/PWA/" />
    </entry>
    <entry>
        <id>https://kiko.io/post/Discoveries-20-CSS-UI/</id>
        <title>Discoveries #20 - CSS &amp; UI</title>
        <published>2022-10-08T11:23:33.000Z</published>
        <updated>2022-10-08T11:23:33.000Z</updated>
        <link href="https://kiko.io/post/Discoveries-20-CSS-UI/"/>
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Discoveries-20-CSS-UI.thumb.png" height="1200" width="630" />
        <content type="html">
            
            
            &lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Discoveries-20-CSS-UI.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;Web interfaces are unthinkable without CSS. It has its pitfalls, but when used correctly it’s damn powerful. It’s always incredible what developers do with it. This month’s Discoveries is about the basics and the amazing.&lt;/p&gt;

        &lt;ul class=&#34;anchorlist&#34;&gt;
            &lt;li data-anchor=&#34;#my-custom-reset&#34;&gt;My Custom CSS Reset&lt;/li&gt;&lt;li data-anchor=&#34;#defensive-css&#34;&gt;Defensive CSS&lt;/li&gt;&lt;li data-anchor=&#34;#10-useful-css-tricks&#34;&gt;10 Useful CSS Tricks for Front-end Developers&lt;/li&gt;&lt;li data-anchor=&#34;#animated-star-rating&#34;&gt;Animated Star Rating&lt;/li&gt;&lt;li data-anchor=&#34;#css-marquee-examples&#34;&gt;CSS Marquee Examples&lt;/li&gt;&lt;li data-anchor=&#34;#css-rolling-text&#34;&gt;CSS Rolling Text&lt;/li&gt;&lt;li data-anchor=&#34;#cool-hover-effects&#34;&gt;Cool Hover Effects That Use CSS Text Shadow&lt;/li&gt;&lt;li data-anchor=&#34;#solving-the-dangler&#34;&gt;Solving &#39;The Dangler&#39; Conundrum with Container Queries and :has()&lt;/li&gt;&lt;li data-anchor=&#34;#conditionally-styling-selected-elements&#34;&gt;Conditionally Styling Selected Elements in a Grid Container&lt;/li&gt;&lt;li data-anchor=&#34;#intersection-observer-scrolling-effects&#34;&gt;Intersection Observer Scrolling Effects&lt;/li&gt;
        &lt;/ul&gt;
    

&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;


    &lt;hr id=&#34;my-custom-reset&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      My Custom CSS Reset
    &lt;/h2&gt;
    &lt;small&gt;by Josh Comeau&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://www.joshwcomeau.com/css/custom-css-reset/&#34;&gt;https://www.joshwcomeau.com/css/custom-css-reset/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Browsers behave differenly out of the box regarding CSS. Therefore it is always advisable to have a CSS reset. Josh shows us his approach. He also inspired Elly to her &lt;a href=&#34;https://gist.github.com/EllyLoel/4ff8a6472247e6dd2315fd4038926522&#34;&gt;Gist&lt;/a&gt;.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://www.joshwcomeau.com/css/custom-css-reset/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;my-custom-reset.png&#34; alt=&#34;My Custom CSS Reset&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;defensive-css&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Defensive CSS
    &lt;/h2&gt;
    &lt;small&gt;by Ahmad Shadeed&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://defensivecss.dev/&#34;&gt;https://defensivecss.dev/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Ahmad is a master of CSS and one of his concerns, which he also points out repeatedly in his blog, is to use styles defensively. He has now made his own website out of this.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://defensivecss.dev/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;defensive-css.png&#34; alt=&#34;Defensive CSS&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;10-useful-css-tricks&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      10 Useful CSS Tricks for Front-end Developers
    &lt;/h2&gt;
    &lt;small&gt;by Alex Ivanovs&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://stackdiary.com/useful-css-tricks/&#34;&gt;https://stackdiary.com/useful-css-tricks/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Alex has some useful tips on writing better and smart CSS code. I have to try Shadow for transparent images as soon as possible …&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://stackdiary.com/useful-css-tricks/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;10-useful-css-tricks.png&#34; alt=&#34;10 Useful CSS Tricks for Front-end Developers&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;animated-star-rating&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Animated Star Rating|IMGFILE
    &lt;/h2&gt;
    &lt;small&gt;by Jon Kantner&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://codepen.io/jkantner/pen/BarvVNa&#34;&gt;https://codepen.io/jkantner/pen/BarvVNa&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Star ratings are everywhere because they encourage the user to interact with the website and may give the following important clues about how good the product is. Jon has taken them to the next level visually with his animations.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://codepen.io/jkantner/pen/BarvVNa&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;animated-star-rating.png&#34; alt=&#34;Animated Star Rating|IMGFILE&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;css-marquee-examples&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      CSS Marquee Examples
    &lt;/h2&gt;
    &lt;small&gt;by Ryan Mulligan&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://codepen.io/hexagoncircle/full/eYMrGwW&#34;&gt;https://codepen.io/hexagoncircle/full/eYMrGwW&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Marquee visualizations were all the rage in the 90s, but they still have their place today and are easier to implement than ever before.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://codepen.io/hexagoncircle/full/eYMrGwW&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;css-marquee-examples.png&#34; alt=&#34;CSS Marquee Examples&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;css-rolling-text&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      CSS Rolling Text
    &lt;/h2&gt;
    &lt;small&gt;by Marcello Lopes&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://codepen.io/marcell0lopes/pen/oNemQmB&#34;&gt;https://codepen.io/marcell0lopes/pen/oNemQmB&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;You have to tease something with more than one verb? Try this simple solution from Marcello on scrolling text with pure CSS.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://codepen.io/marcell0lopes/pen/oNemQmB&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;css-rolling-text.png&#34; alt=&#34;CSS Rolling Text&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;cool-hover-effects&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Cool Hover Effects That Use CSS Text Shadow
    &lt;/h2&gt;
    &lt;small&gt;by Temani Afif&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://css-tricks.com/cool-hover-effects-that-use-css-text-shadow/&#34;&gt;https://css-tricks.com/cool-hover-effects-that-use-css-text-shadow/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Hover effects are only useful on computers with mouse support, but how cool you can design them Temani shows us on CSS Tricks.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://css-tricks.com/cool-hover-effects-that-use-css-text-shadow/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;cool-hover-effects.png&#34; alt=&#34;Cool Hover Effects That Use CSS Text Shadow&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;solving-the-dangler&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Solving &#39;The Dangler&#39; Conundrum with Container Queries and :has()
    &lt;/h2&gt;
    &lt;small&gt;by Dave Rupert&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://daverupert.com/2022/07/solving-the-dangler-conundrum-with-has-and-container-queries&#34;&gt;https://daverupert.com/2022/07/solving-the-dangler-conundrum-with-has-and-container-queries&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Grids are super cool, but there is the problem how to style leftovers that doesn’t fit in the matrix. Having a 3 column grid and 12 elements? Fine. But what is with the 13th element? Dave shows us how to deal it it in CSS.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://daverupert.com/2022/07/solving-the-dangler-conundrum-with-has-and-container-queries&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;solving-the-dangler.png&#34; alt=&#34;Solving &#39;The Dangler&#39; Conundrum with Container Queries and :has()&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;conditionally-styling-selected-elements&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Conditionally Styling Selected Elements in a Grid Container
    &lt;/h2&gt;
    &lt;small&gt;by Preethi&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://css-tricks.com/conditionally-styling-selected-elements-in-a-grid-container/&#34;&gt;https://css-tricks.com/conditionally-styling-selected-elements-in-a-grid-container/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Elements in a grid have their style. Period. … Wait, no! It is possible to style an element regarding to its neighbour, as shown in this article, by a clever using of &lt;code&gt;:nth-of-type&lt;/code&gt;.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://css-tricks.com/conditionally-styling-selected-elements-in-a-grid-container/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;conditionally-styling-selected-elements.png&#34; alt=&#34;Conditionally Styling Selected Elements in a Grid Container&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;intersection-observer-scrolling-effects&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Intersection Observer Scrolling Effects
    &lt;/h2&gt;
    &lt;small&gt;by Jhey&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://codepen.io/jh3y/pen/xxWyEBQ&#34;&gt;https://codepen.io/jh3y/pen/xxWyEBQ&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Codepen’s user JHey shows us how to animate elements in 5 different ways on scrolling. Pretty neat…&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://codepen.io/jh3y/pen/xxWyEBQ&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;intersection-observer-scrolling-effects.png&#34; alt=&#34;Intersection Observer Scrolling Effects&#34; /&gt;
    &lt;/a&gt;
  

        </content>
        <category term="Misc" scheme="https://kiko.io/categories/Misc/" />
        <category term="CSS" scheme="https://kiko.io/tags/CSS/" />
        <category term="Collection" scheme="https://kiko.io/tags/Collection/" />
        <category term="UI" scheme="https://kiko.io/tags/UI/" />
    </entry>
    <entry>
        <id>https://kiko.io/post/One-mouse-to-rule-them-all/</id>
        <title>One mouse to rule them all</title>
        <published>2022-10-08T09:46:57.000Z</published>
        <updated>2022-10-08T09:46:57.000Z</updated>
        <link href="https://kiko.io/post/One-mouse-to-rule-them-all/"/>
        <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/One-mouse-to-rule-them-all.thumb.png" height="1200" width="630" />
        <content type="html">
            
            
            &lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/One-mouse-to-rule-them-all.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Multiple monitors on one computer are elementary for effective IT work. However, operating multiple computers with one input set requires tools, for example one from the Microsoft Garage.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;The trend is toward second or third devices, especially among IT workers. In addition to the stationary computer, which may still be under the desk, there is a laptop and possibly a tablet. All of them are connected to cloud services. If the desk is large enough, there may be two monitors and a full-size keyboard connected to the desktop, the laptop on the left, on which two or three special programs are installed, and the Surface tablet on the right for communication with its narrow-track keyboard. And spread out on the table are three mice in different colors so as not to constantly get the wrong one. A scenario that the author of these lines was also confronted with … yes, until a few years ago a small tool for Microsoft Windows fell in front of his feet, which abruptly ended the input chaos: Mouse Without Borders.&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;p&gt;Microsoft, like many IT corporations, encourages its employees to create side projects, which then either eventually find their way into one of the main products or are released under the &lt;a href=&#34;https://www.microsoft.com/en-us/garage/&#34;&gt;Microsoft Garage&lt;/a&gt; banner. This is also the case with the work of &lt;strong&gt;Truong Do&lt;/strong&gt;, a Microsoft employee from Washington, who deals with Microsoft Dynamics in his daily business. He was probably also fed up with the numerous input devices and developed a tool more than 10 years ago with which the mouse pointer of a Windows device can be moved across its own monitor border to another device, whereby one of the keyboards is then activated on the device on which the mouse pointer is currently located.&lt;/p&gt;
&lt;p&gt;The startup is simple:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download tool via &lt;a href=&#34;http://aka.ms/mm&#34;&gt;http://aka.ms/mm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Make sure that all devices are available on the same network&lt;/li&gt;
&lt;li&gt;Run the installation program on all devices&lt;/li&gt;
&lt;li&gt;From one device, link the other devices using the security code generated by the program&lt;/li&gt;
&lt;li&gt;Arrange the devices on the desktop in the program by dragging and dropping them from their locations&lt;/li&gt;
&lt;li&gt;Done&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;/post/One-mouse-to-rule-them-all/mouse-without-borders-setup.png&#34; alt=&#34;Mouse Without Borders - Setup&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/One-mouse-to-rule-them-all/mouse-without-borders-options.png&#34; alt=&#34;Mouse Without Border - Options&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;Other-features&#34;&gt;&lt;a href=&#34;#Other-features&#34; class=&#34;headerlink&#34; title=&#34;Other features&#34;&gt;&lt;/a&gt;Other features&lt;/h2&gt;&lt;p&gt;Besides the main purpose of sharing mouse and keyboard across multiple devices, you can also set up a shared clipboard (Share Clipboard) and make it possible to copy files from one computer to another via drag &amp;amp; drop (Transfer File). This creates a special folder on the desktop of the target computer, where these files end up via the clipboard. It is also useful that the user does not become a long-distance pusher when the pointer is on the far right device and he has to go to the far left, because where it stops on the right, it continues on the far left.&lt;/p&gt;
&lt;p&gt;For keyboard lovers, Truong Do has made keyboard shortcuts available for each linked device, with a choice of F-keys or numbers. All machines can also be locked at once via Ctrl-Alt-L. If the connection hangs once, a spirited Ctrl-Alt-R helps to get them all back on track.&lt;/p&gt;
&lt;p&gt;As an extra goodie, Truong Do has included a narrow-gauge screenshot capture, but you can safely turn it off, because it can’t compete with tools like &lt;a href=&#34;https://github.com/brhinescot/Cropper&#34;&gt;Brian Scott’s Cropper&lt;/a&gt; or &lt;a href=&#34;https://github.com/greenshot/greenshot&#34;&gt;Greenshot&lt;/a&gt;, but rather hinders because it uses common keyboard shortcuts.&lt;/p&gt;
&lt;h2 id=&#34;Conclusion&#34;&gt;&lt;a href=&#34;#Conclusion&#34; class=&#34;headerlink&#34; title=&#34;Conclusion&#34;&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;&lt;p&gt;Yes, multiple large monitors and classic remote solutions like RDP or TeamViewer help to operate multiple machines at the same time, but when you have the zoo of devices physically together, working with Mouse Without Borders feels like having four or more monitors, with the advantage that the individual machines don’t have to give up any of their performance. The nice thing, too, is that it doesn’t matter at all what version of Windows is running on the devices. Everything from Windows 7 upwards is supported.&lt;/p&gt;

        </content>
        <category term="Tools" scheme="https://kiko.io/categories/Tools/" />
        <category term="Windows" scheme="https://kiko.io/tags/Windows/" />
        <category term="Workflow" scheme="https://kiko.io/tags/Workflow/" />
        <category term="Remote" scheme="https://kiko.io/tags/Remote/" />
    </entry>
</feed>
