<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://kiko.io/</id>
  <title>kiko.io Posts</title>
  <subtitle>Memorable Tech Stuff</subtitle>
  <icon>https://kiko.io/images/favicon-32x32.png</icon>
  <logo>https://kiko.io/images/icon-72x72.png</logo>
  <link href="https://kiko.io" />
  <link href="https://kiko.io/atom.xml" rel="self" type="application/rss+xml" />
  <updated>2023-08-20T22:00:00.000Z</updated>
  <author>
    <name>Kristof Zerbe</name>
    <email>kristof.zerbe@gmail.com</email>
  </author>
  <generator uri="https://hexo.io/">Hexo</generator>
  <category term="UI/UX" scheme="https://kiko.io/categories/UI-UX/" />
  <category term="Misc" scheme="https://kiko.io/categories/Misc/" />
  <category term="Tools" scheme="https://kiko.io/categories/Tools/" />
  <category term="JavaScript" scheme="https://kiko.io/categories/JavaScript/" />
  <category term="SQL" scheme="https://kiko.io/categories/SQL/" />
  <category term="Photo-Editing" scheme="https://kiko.io/categories/Photo-Editing/" />
  <category term=".NET" scheme="https://kiko.io/categories/NET/" />
  <category term="Football" scheme="https://kiko.io/categories/Football/" />
  <category term="UI" scheme="https://kiko.io/tags/UI/" />
  <category term="Hexo" scheme="https://kiko.io/tags/Hexo/" />
  <category term="CSS" scheme="https://kiko.io/tags/CSS/" />
  <category term="Browser" scheme="https://kiko.io/tags/Browser/" />
  <category term="VS Code" scheme="https://kiko.io/tags/VS-Code/" />
  <category term="GitHub" scheme="https://kiko.io/tags/GitHub/" />
  <category term="Blogging" scheme="https://kiko.io/tags/Blogging/" />
  <category term="jQuery" scheme="https://kiko.io/tags/jQuery/" />
  <category term="Stylus" scheme="https://kiko.io/tags/Stylus/" />
  <category term="Dark Mode" scheme="https://kiko.io/tags/Dark-Mode/" />
  <category term="ADSI" scheme="https://kiko.io/tags/ADSI/" />
  <category term="Visual Studio" scheme="https://kiko.io/tags/Visual-Studio/" />
  <category term="Database Project" scheme="https://kiko.io/tags/Database-Project/" />
  <category term="Error" scheme="https://kiko.io/tags/Error/" />
  <category term="Trello" scheme="https://kiko.io/tags/Trello/" />
  <category term="MediaQuery" scheme="https://kiko.io/tags/MediaQuery/" />
  <category term="Collection" scheme="https://kiko.io/tags/Collection/" />
  <category term="Tutorial" scheme="https://kiko.io/tags/Tutorial/" />
  <category term="Windows" scheme="https://kiko.io/tags/Windows/" />
  <category term="Audio" scheme="https://kiko.io/tags/Audio/" />
  <category term="Lightroom" scheme="https://kiko.io/tags/Lightroom/" />
  <category term="Publishing" scheme="https://kiko.io/tags/Publishing/" />
  <category term="Plugin" scheme="https://kiko.io/tags/Plugin/" />
  <category term="SPA" scheme="https://kiko.io/tags/SPA/" />
  <category term="Bundling" scheme="https://kiko.io/tags/Bundling/" />
  <category term="Presets" scheme="https://kiko.io/tags/Presets/" />
  <category term="Resource" scheme="https://kiko.io/tags/Resource/" />
  <category term="Localization" scheme="https://kiko.io/tags/Localization/" />
  <category term="Versioning" scheme="https://kiko.io/tags/Versioning/" />
  <category term="T4" scheme="https://kiko.io/tags/T4/" />
  <category term="Share" scheme="https://kiko.io/tags/Share/" />
  <category term="TFS/DevOps" scheme="https://kiko.io/tags/TFS-DevOps/" />
  <category term="Android" scheme="https://kiko.io/tags/Android/" />
  <category term="Imaging" scheme="https://kiko.io/tags/Imaging/" />
  <category term="PWA" scheme="https://kiko.io/tags/PWA/" />
  <category term="DOM" scheme="https://kiko.io/tags/DOM/" />
  <category term="WebAPI" scheme="https://kiko.io/tags/WebAPI/" />
  <category term="Authentication" scheme="https://kiko.io/tags/Authentication/" />
  <category term="ES6" scheme="https://kiko.io/tags/ES6/" />
  <category term="Events" scheme="https://kiko.io/tags/Events/" />
  <category term="Templating" scheme="https://kiko.io/tags/Templating/" />
  <category term="Node.js" scheme="https://kiko.io/tags/Node-js/" />
  <category term="Workflow" scheme="https://kiko.io/tags/Workflow/" />
  <category term="Debugging" scheme="https://kiko.io/tags/Debugging/" />
  <category term="SVG" scheme="https://kiko.io/tags/SVG/" />
  <category term="Theming" scheme="https://kiko.io/tags/Theming/" />
  <category term="PowerShell" scheme="https://kiko.io/tags/PowerShell/" />
  <category term="Mail" scheme="https://kiko.io/tags/Mail/" />
  <category term="Font" scheme="https://kiko.io/tags/Font/" />
  <category term="Hosting" scheme="https://kiko.io/tags/Hosting/" />
  <category term="Remote" scheme="https://kiko.io/tags/Remote/" />
  <category term="Social Media" scheme="https://kiko.io/tags/Social-Media/" />
  <category term="Office" scheme="https://kiko.io/tags/Office/" />
  <category term="Logging" scheme="https://kiko.io/tags/Logging/" />
  <category term="C#" scheme="https://kiko.io/tags/C/" />
  <category term="Mastodon" scheme="https://kiko.io/tags/Mastodon/" />
  <category term="Rant" scheme="https://kiko.io/tags/Rant/" />
  <category term="Usability" scheme="https://kiko.io/tags/Usability/" />
  <category term="Contributing" scheme="https://kiko.io/tags/Contributing/" />
  <category term="Search" scheme="https://kiko.io/tags/Search/" />
  <category term="SVWW" scheme="https://kiko.io/tags/SVWW/" />
  <category term="JSON-LD" scheme="https://kiko.io/tags/JSON-LD/" />
  <category term="Karlsruher FC" scheme="https://kiko.io/tags/Karlsruher-FC/" />
  <category term="2. Bundesliga" scheme="https://kiko.io/tags/2-Bundesliga/" />
  <category term="Meta" scheme="https://kiko.io/tags/Meta/" />
  <entry>
    <id>https://kiko.io/post/Pool-Photo-Generator/</id>
    <title>Pool Photo Generator</title>
    <published>2023-08-20T22:00:00.000Z</published>
    <updated></updated>
    <link href="https://kiko.io/post/Pool-Photo-Generator/"/>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Pool-Photo-Generator.thumb.png" height="1200" width="630" />
    <content type="html">&lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Pool-Photo-Generator.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;Since the existence of this blog, the posts all have a custom header image that I generate from my own photos. Already three years ago (omg … really?) I described in an article how to do this with Hexo: &lt;a href=&#34;/post/Automatic-Header-Images-in-Hexo/&#34; title=&#34;Automatic Header Images in Hexo&#34;&gt;Automatic Header Images in Hexo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To keep it short, I use a pool folder for this, in which I keep in subfolders next to a &lt;code&gt;meta.txt&lt;/code&gt;, for the title of the image and an external url on 500px for interactions to the image, three variants that I need for a new post:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;mobile.jpg (width 480px)&lt;/li&gt;
&lt;li&gt;tablet.jpg (width 768px)&lt;/li&gt;
&lt;li&gt;normal.jpg (width 1280px)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The only piece of the puzzle that was still missing was the automatic generation of these three image variants and the meta file based on a selected photo that I want to add to the pool of available header images. So far it was fun to generate the header images manually either on the desktop or on the smartphone, but it really doesn’t have to be. My goal now was to write a script where I just throw a selected photo into a folder and the NodeJS script does the rest.&lt;/p&gt;
&lt;p&gt;My photo workflow is based on Adobe Lightroom Classic and one of the steps is to give a title to the good ones I use here as well. So the script had to include four steps when iterating over the inbound folder’s JPG files:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;create new pool folder&lt;/li&gt;
&lt;li&gt;read meta data (IPTC -&amp;gt; title) and write it to meta.txt&lt;/li&gt;
&lt;li&gt;create the three image variants&lt;/li&gt;
&lt;li&gt;delete the processed image from the inbound folder&lt;/li&gt;
&lt;/ol&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;hr&gt;
&lt;h2 id=&#34;The-Script&#34;&gt;&lt;a href=&#34;#The-Script&#34; class=&#34;headerlink&#34; title=&#34;The Script&#34;&gt;&lt;/a&gt;The Script&lt;/h2&gt;&lt;p&gt;I implemented the script as a class with the following skeleton:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;pool-photo-generator.cjs&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;&amp;#x27;use strict&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[requirements ...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;[vars ...]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;PoolPhotoGenerator&lt;/span&gt; &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;   * Contructor of PoolPhotoGenerator&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;   * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; &amp;#123;&lt;span class=&#34;type&#34;&gt;String&lt;/span&gt;&amp;#125; inboundFolder &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;   * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; &amp;#123;&lt;span class=&#34;type&#34;&gt;String&lt;/span&gt;&amp;#125; poolFolder &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;   */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title function_&#34;&gt;constructor&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;inboundFolder, poolFolder&lt;/span&gt;) &amp;#123; ... &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;   * Runs the generation of inbound photos to pool photos&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;   */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title function_&#34;&gt;generate&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123; ... &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;   * Helper function to create image variant&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;   * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; &amp;#123;&lt;span class=&#34;type&#34;&gt;String&lt;/span&gt;&amp;#125; imgSource &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;   * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; &amp;#123;&lt;span class=&#34;type&#34;&gt;String&lt;/span&gt;&amp;#125; imgTarget &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;   * &lt;span class=&#34;doctag&#34;&gt;@param&lt;/span&gt; &amp;#123;&lt;span class=&#34;type&#34;&gt;Number&lt;/span&gt;&amp;#125; sizeWidth &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;   */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;createImageVariant&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;imgSource, imgTarget, sizeWidth&lt;/span&gt;) &amp;#123; ... &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;module&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;exports&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;PoolPhotoGenerator&lt;/span&gt; = &lt;span class=&#34;title class_&#34;&gt;PoolPhotoGenerator&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;Requirements&#34;&gt;&lt;a href=&#34;#Requirements&#34; class=&#34;headerlink&#34; title=&#34;Requirements&#34;&gt;&lt;/a&gt;Requirements&lt;/h3&gt;&lt;p&gt;To handle files and folders in NodeJS you need at least &lt;code&gt;fs&lt;/code&gt; and &lt;code&gt;path&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; fs = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;fs&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; path = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;path&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;For image processing there’s no better solution as &lt;a href=&#34;https://sharp.pixelplumbing.com/&#34;&gt;Sharp&lt;/a&gt;:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; sharp = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;sharp&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;sharp.&lt;span class=&#34;title function_&#34;&gt;cache&lt;/span&gt;(&lt;span class=&#34;literal&#34;&gt;false&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;//prevents keeping source file open&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Similarly powerful, but intended for reading image metadata is &lt;a href=&#34;https://mutiny.cz/exifr/&#34;&gt;EXIFR&lt;/a&gt;:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; exifr = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;exifr&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;Vars&#34;&gt;&lt;a href=&#34;#Vars&#34; class=&#34;headerlink&#34; title=&#34;Vars&#34;&gt;&lt;/a&gt;Vars&lt;/h3&gt;&lt;p&gt;I just needed three vars for holding the full qualified path of the current execution folder and the names of the two incoming parameters:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; _currentPath = __dirname;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; _inboundFolder;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; _poolFolder;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;Constructor&#34;&gt;&lt;a href=&#34;#Constructor&#34; class=&#34;headerlink&#34; title=&#34;Constructor&#34;&gt;&lt;/a&gt;Constructor&lt;/h3&gt;&lt;p&gt;In this case, the constructor only serves to provide and check the necessary parameters of the class:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;constructor&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;inboundFolder, poolFolder&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _inboundFolder = path.&lt;span class=&#34;title function_&#34;&gt;join&lt;/span&gt;(_currentPath, inboundFolder);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  _poolFolder = path.&lt;span class=&#34;title function_&#34;&gt;join&lt;/span&gt;(_currentPath, poolFolder);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!fs.&lt;span class=&#34;title function_&#34;&gt;existsSync&lt;/span&gt;(_inboundFolder)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Inbound folder not found&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!fs.&lt;span class=&#34;title function_&#34;&gt;existsSync&lt;/span&gt;(_poolFolder)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;throw&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Pool folder not found&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;Function-‘generate’&#34;&gt;&lt;a href=&#34;#Function-‘generate’&#34; class=&#34;headerlink&#34; title=&#34;Function ‘generate’&#34;&gt;&lt;/a&gt;Function ‘generate’&lt;/h3&gt;&lt;p&gt;This is the main function to call, and it first reads the input folder for JPG and cycles through all the hits. Then for each file the above four steps are executed:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;title function_&#34;&gt;generate&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; self = &lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; inboundFiles = fs.&lt;span class=&#34;title function_&#34;&gt;readdirSync&lt;/span&gt;(_inboundFolder);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; jpgFiles = inboundFiles.&lt;span class=&#34;title function_&#34;&gt;filter&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;file&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; path.&lt;span class=&#34;title function_&#34;&gt;extname&lt;/span&gt;(file).&lt;span class=&#34;title function_&#34;&gt;toLowerCase&lt;/span&gt;() === &lt;span class=&#34;string&#34;&gt;&amp;quot;.jpg&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    jpgFiles.&lt;span class=&#34;title function_&#34;&gt;forEach&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;file&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; imgFile = path.&lt;span class=&#34;title function_&#34;&gt;join&lt;/span&gt;(_inboundFolder, file);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// Step 1: Create new pool folder&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; newPhotoFolder = path.&lt;span class=&#34;title function_&#34;&gt;join&lt;/span&gt;(_poolFolder, file.&lt;span class=&#34;title function_&#34;&gt;replace&lt;/span&gt;(path.&lt;span class=&#34;title function_&#34;&gt;extname&lt;/span&gt;(file), &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        fs.&lt;span class=&#34;title function_&#34;&gt;mkdirSync&lt;/span&gt;(newPhotoFolder);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// Step 2: Read TITLE from IPTC and write to meta.txt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; iptcMeta = exifr.&lt;span class=&#34;title function_&#34;&gt;parse&lt;/span&gt;(imgFile, &amp;#123; &lt;span class=&#34;attr&#34;&gt;iptc&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt; &amp;#125;).&lt;span class=&#34;title function_&#34;&gt;then&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;output&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; title = output.&lt;span class=&#34;property&#34;&gt;ObjectName&lt;/span&gt; || &lt;span class=&#34;string&#34;&gt;&amp;quot;No Title&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        fs.&lt;span class=&#34;title function_&#34;&gt;writeFile&lt;/span&gt;(path.&lt;span class=&#34;title function_&#34;&gt;join&lt;/span&gt;(newPhotoFolder, &lt;span class=&#34;string&#34;&gt;&amp;quot;meta.txt&amp;quot;&lt;/span&gt;), title);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// Step 3: Create image variants&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; createMobile = self.&lt;span class=&#34;title function_&#34;&gt;createImageVariant&lt;/span&gt;(imgFile, path.&lt;span class=&#34;title function_&#34;&gt;join&lt;/span&gt;(newPhotoFolder, &lt;span class=&#34;string&#34;&gt;&amp;quot;mobile.jpg&amp;quot;&lt;/span&gt;), &lt;span class=&#34;number&#34;&gt;480&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; createTablet = self.&lt;span class=&#34;title function_&#34;&gt;createImageVariant&lt;/span&gt;(imgFile, path.&lt;span class=&#34;title function_&#34;&gt;join&lt;/span&gt;(newPhotoFolder, &lt;span class=&#34;string&#34;&gt;&amp;quot;tablet.jpg&amp;quot;&lt;/span&gt;), &lt;span class=&#34;number&#34;&gt;768&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; createNormal = self.&lt;span class=&#34;title function_&#34;&gt;createImageVariant&lt;/span&gt;(imgFile, path.&lt;span class=&#34;title function_&#34;&gt;join&lt;/span&gt;(newPhotoFolder, &lt;span class=&#34;string&#34;&gt;&amp;quot;normal.jpg&amp;quot;&lt;/span&gt;), &lt;span class=&#34;number&#34;&gt;1280&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// Step 4: Delete processed JPG in inbound folder, when everything is done&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;title class_&#34;&gt;Promise&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;all&lt;/span&gt;([&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          iptcMeta, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          createMobile, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          createTablet, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          createNormal&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ]).&lt;span class=&#34;title function_&#34;&gt;then&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          fs.&lt;span class=&#34;title function_&#34;&gt;unlinkSync&lt;/span&gt;(imgFile);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;Function-‘createImageVariant’&#34;&gt;&lt;a href=&#34;#Function-‘createImageVariant’&#34; class=&#34;headerlink&#34; title=&#34;Function ‘createImageVariant’&#34;&gt;&lt;/a&gt;Function ‘createImageVariant’&lt;/h3&gt;&lt;p&gt;This helper function reduces the original image to the desired size and saves it in the destination (pool) folder as a JPG:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;createImageVariant&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;imgSource, imgTarget, sizeWidth&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;sharp&lt;/span&gt;(imgSource)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .&lt;span class=&#34;title function_&#34;&gt;resize&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;fit&lt;/span&gt;: sharp.&lt;span class=&#34;property&#34;&gt;fit&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;contain&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;width&lt;/span&gt;: sizeWidth&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .&lt;span class=&#34;title function_&#34;&gt;jpeg&lt;/span&gt;(&amp;#123; &lt;span class=&#34;attr&#34;&gt;quality&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;90&lt;/span&gt;, &lt;span class=&#34;attr&#34;&gt;mozjpeg&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt; &amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    .&lt;span class=&#34;title function_&#34;&gt;toFile&lt;/span&gt;(imgTarget);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;In the above code I have omitted some syntactical sugar. You can find the complete script here: &lt;a href=&#34;https://github.com/kristofzerbe/kiko.io/blob/master/lib/pool-photo-generator.cjs&#34;&gt;https://github.com/kristofzerbe/kiko.io/blob/master/lib/pool-photo-generator.cjs&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;The-Runner&#34;&gt;&lt;a href=&#34;#The-Runner&#34; class=&#34;headerlink&#34; title=&#34;The Runner&#34;&gt;&lt;/a&gt;The Runner&lt;/h2&gt;&lt;p&gt;I integrated the call to the generator into my Hexo workflow, but also wrote a small runner to run it independently:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/**&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * This is only for executing the selector manually. &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * Execution:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * node &amp;quot;./lib/_run_pool-photo-generator.cjs&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;PoolPhotoGenerator&lt;/span&gt; = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;../lib/pool-photo-generator.cjs&amp;quot;&lt;/span&gt;).&lt;span class=&#34;property&#34;&gt;PoolPhotoGenerator&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; inboundFolder = &lt;span class=&#34;string&#34;&gt;&amp;quot;../new_photos&amp;quot;&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;//my inbound folder&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; poolFolder = &lt;span class=&#34;string&#34;&gt;&amp;quot;../static/pool&amp;quot;&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;//my pool folder&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; generator = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;PoolPhotoGenerator&lt;/span&gt;(inboundFolder, poolFolder);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;generator.&lt;span class=&#34;title function_&#34;&gt;generate&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h2 id=&#34;Conclusion&#34;&gt;&lt;a href=&#34;#Conclusion&#34; class=&#34;headerlink&#34; title=&#34;Conclusion&#34;&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;&lt;p&gt;Last but not least, in my existing Lightroom workflow, I configured the wonderful &lt;a href=&#34;http://regex.info/blog/lightroom-goodies/collection-publisher&#34;&gt;plugin Jeffrey’s “Collection Publisher”&lt;/a&gt; to create the new pool photos directly through it into the Inbound folder. Once the changes are committed to Github, where the blog is hosted and the deployment action happens, the new header images are created and displayed at &lt;a href=&#34;https://kiko.io/photos&#34;&gt;https:\kiko.io\photos&lt;/a&gt; and are available for a new post.&lt;/p&gt;
</content>
    <category term="JavaScript" scheme="https://kiko.io/categories/JavaScript/" />
    <category term="Imaging" scheme="https://kiko.io/tags/Imaging/" />
    <category term="Node.js" scheme="https://kiko.io/tags/Node-js/" />
  </entry>
  <entry>
    <id>https://kiko.io/post/SVWW-vs-Karlsruhe-2023-08-18/</id>
    <title>SVWW vs. Karlsruhe @ 2023-08-18</title>
    <published>2023-08-19T16:33:00.000Z</published>
    <updated></updated>
    <link href="https://kiko.io/post/SVWW-vs-Karlsruhe-2023-08-18/"/>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/SVWW-vs-Karlsruhe-2023-08-18.thumb.png" height="1200" width="630" />
    <content type="html">&lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/SVWW-vs-Karlsruhe-2023-08-18.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;I already had my season ticket on the first matchday of the 2023&amp;#x2F;2024 season, but was unable to get into the stadium for the team’s first home game and thus missed the 1:1 draw against &lt;strong&gt;Magdeburg&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&#34;First-Impressions&#34;&gt;&lt;a href=&#34;#First-Impressions&#34; class=&#34;headerlink&#34; title=&#34;First Impressions&#34;&gt;&lt;/a&gt;First Impressions&lt;/h2&gt;&lt;p&gt;So, Friday was my premiere on my season seat West 3, Row 1, Seat 1. That this seat was free when I booked it was a coincidence, but being so close to the pitch appealed to me. In front of me, the concrete railing of the spectator block, where I can put my beer, and directly below it, the SVWW coach’s bench under a plexiglass roof. You can hardly get any closer to the team.&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;p&gt;However, the division of the row of seats is quite stupid, with the separation of Block West 2 and West 3 being quite arbitrary. With the result that I have to push my way to seat 1 across almost 20 seats if I am late. From the entrance of block West 2, on the other hand, it would only be just under 10 seats, but the stewards won’t let me get to my seat via West 2 because of my card and for the sake of German order :|&lt;/p&gt;
&lt;p&gt;My seat neighbour on the right side is a man of the “Do I have to talk?” type who can hardly get his teeth apart even during the game. On my left, however, sits a nice older lady with short grey hair who must already be part of the inventory. A permanent season ticket holder, I guess, who doesn’t yell all the time either, but seems to be a true fan. The first question directed at me was “But you weren’t there for the first game!?”, which immediately triggered a kind of guilt in me, “Yes, I didn’t cheer for them in the first game. I’m sooo sorry”. We’ll get on well, especially as I took her deposit cup at half-time and cashed it in. We’re already friends, even if I don’t know her name yet.&lt;/p&gt;
&lt;p&gt;Speaking of beverage supply: The club has a lot of stands around the stadium, but they are so badly organised that it’s hard to make it back to your seat in time. There were four staff in the snack van right next to Block West 3, one for ordering and collecting money and the other three for serving. The cashier was so slow that the other three had nothing to do the whole time and the queue in front of the stand got longer and longer and some people just gave up.  Dear operator: This would happen much faster with two cashiers. It may be that they are all volunteers, but that can be organised much better for the benefit of the fans!&lt;/p&gt;
&lt;p&gt;In the row directly behind me sits a group of older men who spout rather platitudinous football wisdom all the time. These guys would be a perfect model for the German (but unfortunately already deceased) comedian Loriot :D&lt;br&gt;Sitting next to them, however, are two or three guys in their 50s who don’t really have their emotions under control. One of them, in particular, yells “Referee, hang yourself” or something similarly stupid and insults opposing players when they go down in a tackle. I, on the other hand, only ever shouted positively at my own boys. “Let’s go”, “Go on, go on, go on”. And of course I sing along, because no one here notices how “well” I can do that ;)&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;The-Game&#34;&gt;&lt;a href=&#34;#The-Game&#34; class=&#34;headerlink&#34; title=&#34;The Game&#34;&gt;&lt;/a&gt;The Game&lt;/h2&gt;&lt;p&gt;The club has of course strengthened itself for the new season with new players in all sections of the team, whom I have now seen play for the first time. And unfortunately, some of them, such as Brooklyn Ezeh and Benedikt Hollerbach, who grew on me during the few games last year, have moved to other clubs.&lt;/p&gt;

      &lt;div class=&#34;image-slider&#34; id=&#34;image-slide-ny9gwj&#34;&gt;
        &lt;div&gt;&lt;img src=&#34;/post/SVWW-vs-Karlsruhe-2023-08-18/PXL_20230818_162508253.jpg&#34; alt=&#34;SVWW vs Karlsruhe - Before the start of the game&#34; /&gt;&lt;/div&gt;&lt;div&gt;&lt;img src=&#34;/post/SVWW-vs-Karlsruhe-2023-08-18/PXL_20230818_162748966.jpg&#34; alt=&#34;SVWW vs Karlsruhe - Team line-up&#34; /&gt;&lt;/div&gt;&lt;div&gt;&lt;img src=&#34;/post/SVWW-vs-Karlsruhe-2023-08-18/PXL_20230818_165147461.jpg&#34; alt=&#34;SVWW vs Karlsruhe - Goal to 1:1&#34; /&gt;&lt;/div&gt;&lt;div&gt;&lt;img src=&#34;/post/SVWW-vs-Karlsruhe-2023-08-18/PXL_20230818_165151113.jpg&#34; alt=&#34;SVWW vs Karlsruhe - Goal to 1:1&#34; /&gt;&lt;/div&gt;&lt;div&gt;&lt;img src=&#34;/post/SVWW-vs-Karlsruhe-2023-08-18/PXL_20230818_165331533.jpg&#34; alt=&#34;SVWW vs Karlsruhe - Drinking break&#34; /&gt;&lt;/div&gt;&lt;div&gt;&lt;img src=&#34;/post/SVWW-vs-Karlsruhe-2023-08-18/PXL_20230818_171135513.jpg&#34; alt=&#34;SVWW vs Karlsruhe - Treatment&#34; /&gt;&lt;/div&gt;&lt;div&gt;&lt;img src=&#34;/post/SVWW-vs-Karlsruhe-2023-08-18/PXL_20230818_175443989.jpg&#34; alt=&#34;SVWW vs Karlsruhe - 2. Half&#34; /&gt;&lt;/div&gt;&lt;div&gt;&lt;img src=&#34;/post/SVWW-vs-Karlsruhe-2023-08-18/PXL_20230818_180413434.jpg&#34; alt=&#34;SVWW vs Karlsruhe - Lees substitution&#34; /&gt;&lt;/div&gt;&lt;div&gt;&lt;img src=&#34;/post/SVWW-vs-Karlsruhe-2023-08-18/PXL_20230818_182650426.jpg&#34; alt=&#34;SVWW vs Karlsruhe - Cheers of victory&#34; /&gt;&lt;/div&gt;
      &lt;/div&gt;
      
    

&lt;p&gt;But we quickly saw that our coach, &lt;strong&gt;Markus Kauczinski&lt;/strong&gt;, knows his ex-club Karlsruher FC well. At the beginning of the first half, the players of this traditional club directly tried to overrun our team. There was a lot of pressure on the defence, but it held up magnificently. There was always a Wiesbaden leg between the ball and the goal and we limited ourselves to counterattacks, which led to success in the 22nd minute when the newcomer from Bayern Munich &lt;strong&gt;Lee Hyun-Ju&lt;/strong&gt; marked the &lt;strong&gt;1:0&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The rest of the first half was quite even, because Karlsruhe had lost the momentum a little bit, but they found it again at the beginning of the second half. Again, the game ran in only one direction, our goal, but the last 16 metres, in the box, were impregnable for them and when they did manage it, they failed because of our goalkeeper &lt;strong&gt;Florian Stritzel&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&amp;#x21FE;&amp;nbsp;&lt;a href=&#34;https://www.kicker.de/wiesbaden-gegen-karlsruhe-2023-bundesliga-4861686/spielbericht&#34;&gt;Match report on kicker.de&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;Conclusion&#34;&gt;&lt;a href=&#34;#Conclusion&#34; class=&#34;headerlink&#34; title=&#34;Conclusion&#34;&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;&lt;p&gt;SV Wehen Wiesbaden is certainly the underdog in the 2. Bundesliga and no fan expects that at the end of the season it will be about more than keeping the league. I like underdogs and am therefore completely thrilled about this victory, especially since the table looked really good at the end of the day:&lt;/p&gt;

    &lt;a href=&#34;https://www.kicker.de/2-bundesliga/tabelle&#34;&gt;
        &lt;img src=&#34;tabelle-23-08-18.png&#34; alt=&#34;Table 2. Liga, Friday 18. August 2023&#34; /&gt;
    &lt;/a&gt;
    

&lt;p&gt;In two weeks, an even bigger German football heavyweight will come to Wiesbaden: Schalke 04. Let’s see if the boys have grown a few more legs by then. We will need them …&lt;/p&gt;
</content>
    <category term="Football" scheme="https://kiko.io/categories/Football/" />
    <category term="SVWW" scheme="https://kiko.io/tags/SVWW/" />
    <category term="Karlsruher FC" scheme="https://kiko.io/tags/Karlsruher-FC/" />
    <category term="2. Bundesliga" scheme="https://kiko.io/tags/2-Bundesliga/" />
  </entry>
  <entry>
    <id>https://kiko.io/post/My-Hometown-My-Club/</id>
    <title>My Hometown, My Club</title>
    <published>2023-08-19T13:59:18.000Z</published>
    <updated></updated>
    <link href="https://kiko.io/post/My-Hometown-My-Club/"/>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/My-Hometown-My-Club.thumb.png" height="1200" width="630" />
    <content type="html">&lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/My-Hometown-My-Club.png&#34; /&gt;&lt;/p&gt;&lt;img src=&#34;/images/SV-Wehen-Wiesbaden.svg&#34; class=&#34;float-element&#34; style=&#34;width:8rem;&#34; /&gt;

&lt;p&gt;I was born in Wiesbaden (Hesse, Germany) and I consider this city my home, even though my father built a house in a small suburb called Taunusstein-Wehen in the 70s and I practically grew up there. In this small town, where practically everybody knows everybody, there is a small football club called SV Wehen since 1926 and some of my schoolmates played there in their youth.&lt;/p&gt;
&lt;p&gt;This small club played only a regional role at all until 1979, when a local business man put money into the club and it worked its way up one league after the other over the years:&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;p&gt;&lt;strong&gt;1983&amp;nbsp;&amp;nbsp;Bezirksliga&lt;/strong&gt; (amateurs)&lt;br&gt;&lt;span style=&#34;font-size:120%; font-weight:bold;display:inline-block;padding-left:32px;&#34;&gt;&amp;#x21E3;&lt;/span&gt;&lt;br&gt;&lt;strong&gt;1987&amp;nbsp;&amp;nbsp;Landesliga&lt;/strong&gt; (amateurs)&lt;br&gt;&lt;span style=&#34;font-size:120%; font-weight:bold;display:inline-block;padding-left:32px;&#34;&gt;&amp;#x21E3;&lt;/span&gt;&lt;br&gt;&lt;strong&gt;1989&amp;nbsp;&amp;nbsp;Oberliga&lt;/strong&gt; (amateurs)&lt;br&gt;&lt;span style=&#34;font-size:120%; font-weight:bold;display:inline-block;padding-left:32px;&#34;&gt;&amp;#x21E3;&lt;/span&gt;&lt;br&gt;&lt;strong&gt;1994&amp;nbsp;&amp;nbsp;Regionalliga&lt;/strong&gt; (semi-professional)&lt;br&gt;&lt;span style=&#34;font-size:120%; font-weight:bold;display:inline-block;padding-left:32px;&#34;&gt;&amp;#x21E3;&lt;/span&gt;&lt;br&gt;&lt;strong&gt;2007&amp;nbsp;&amp;nbsp;2. Bundesliga&lt;/strong&gt; (professional)&lt;/p&gt;
&lt;p&gt;However, with the club’s promotion to the second highest and now professional league of German football, the requirements for the stadium and the necessary infrastructure also changed and the old one in Wehen did not meet the requirements of the officials. So the professional football department was spun off into a company called &lt;strong&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/SV_Wehen_Wiesbaden&#34;&gt;SV Wehen Wiesbaden&lt;/a&gt;&lt;/strong&gt; based in the nearby Hessian capital, where the new Brita Arena was built.&lt;/p&gt;
&lt;p&gt;They were relegated to the newly (in 2008) formed 3. Bundesliga after 2 years, but the new club remained in Wiesbaden and in 2020 it was again promoted to the 2. Bundesliga, but was relegated again one year later.&lt;/p&gt;
&lt;p&gt;I was always only semi-interested in football, especially since I became a fan of the Hamburger Sportverein (HSV) by chance in the early 80s, but in 2022 I got free tickets to a SV Wehen Wiesbaden game through my wife’s colleague … and it was actually really fun, with a cup of beer and a bratwurst, to cheer on the guys on the pitch who were playing professional football in my hometown. I was a little bit hooked …&lt;/p&gt;
&lt;p&gt;At the end of the 2022&amp;#x2F;2023 season, the club finished 3rd in the 3. Bundesliga, having missed out on direct promotion, but qualifying for relegation against the third last-place team in the next higher league: Arminia Bielefeld. The two incredible relegation matches were actually won by the underrated club, 4:0 and 2:1 respectively. YESSSS!&lt;/p&gt;
&lt;p&gt;Somehow it seemed clear to me to go to the stadium more often from now on and the fact that this year the 2nd league is peppered with German traditional clubs (like HSV, my childhood club) made me buy a season ticket for the first time: &lt;strong&gt;Block West 3, Row 1, Seat 1&lt;/strong&gt; … \o&amp;#x2F;.&lt;/p&gt;
</content>
    <category term="Football" scheme="https://kiko.io/categories/Football/" />
    <category term="SVWW" scheme="https://kiko.io/tags/SVWW/" />
  </entry>
  <entry>
    <id>https://kiko.io/post/CONTINUE-READING-Link-Auto-Scrolling-on-the-called-page/</id>
    <title>CONTINUE READING Link &amp; Auto Scrolling on the called page</title>
    <published>2023-07-29T14:14:35.000Z</published>
    <updated></updated>
    <link href="https://kiko.io/post/CONTINUE-READING-Link-Auto-Scrolling-on-the-called-page/"/>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/CONTINUE-READING-Link-Auto-Scrolling-on-the-called-page.thumb.png" height="1200" width="630" />
    <content type="html">&lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/CONTINUE-READING-Link-Auto-Scrolling-on-the-called-page.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;On the home page of a blog or other text-heavy site with regular new articles, it is often advisable not to display the entire text of the article, but a more or less large excerpt and a READ MORE or CONTINUE READING link that leads to the rest of the article, usually a stand-alone article page. This allows the user to quickly get a picture of, say, the last dozen posts when he comes here to browse your texts.&lt;/p&gt;
&lt;p&gt;However, it is somewhat unpleasant if you as the author decide to display a larger excerpt after all, and the user lands at the top of the called page after clicking on the MORE link and first has to scroll&amp;#x2F;navigate to the right place until he can resume reading. This destroys his reading flow. It is better to take the user directly to the page where the MORE link interrupted the text on the home page.&lt;/p&gt;
&lt;p&gt;With a hash and some JavaScript this is done so quickly, that I wonder why I haven’t implemented this on my own blog already :)&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;p&gt;The principle is quite simple:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;append a hash to the MORE link URL the user will click&lt;/li&gt;
&lt;li&gt;detect the hash on the called article page and scroll via JavaScript to an anchor element that was rendered here instead of the MORE link&lt;/li&gt;
&lt;li&gt;remove the hash from the URL again&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;Some-pre-explanation-of-my-example&#34;&gt;&lt;a href=&#34;#Some-pre-explanation-of-my-example&#34; class=&#34;headerlink&#34; title=&#34;Some pre-explanation of my example&#34;&gt;&lt;/a&gt;Some pre-explanation of my example&lt;/h2&gt;&lt;p&gt;My blog is based on the static website generator &lt;a href=&#34;https://hexo.io/&#34;&gt;Hexo&lt;/a&gt;. So I write my articles in &lt;a href=&#34;https://en.wikipedia.org/wiki/Markdown&#34;&gt;Markdown&lt;/a&gt; and use for the interruption of an article a built-in helper, which uses the comment &lt;code&gt;&amp;lt;!-- more --&amp;gt;&lt;/code&gt; to hack the &lt;strong&gt;Content&lt;/strong&gt; into two parts (&lt;strong&gt;Excerpt&lt;/strong&gt; and &lt;strong&gt;More&lt;/strong&gt;) and replaces it with simple &lt;strong&gt;&lt;code&gt;&amp;lt;span id=&amp;quot;more&amp;quot;&amp;gt;&amp;lt;/span&amp;gt;&lt;/code&gt;&lt;/strong&gt;. I use the &lt;strong&gt;Excerpt&lt;/strong&gt; for the start and other overview pages and the &lt;strong&gt;Content&lt;/strong&gt; for the article pages themselves.&lt;/p&gt;
&lt;h2 id=&#34;Expand-the-MORE-link&#34;&gt;&lt;a href=&#34;#Expand-the-MORE-link&#34; class=&#34;headerlink&#34; title=&#34;Expand the MORE link&#34;&gt;&lt;/a&gt;Expand the MORE link&lt;/h2&gt;&lt;p&gt;In my template for the start page, 8 articles are currently rendered into the page via a separate &lt;em&gt;EXCERPT&lt;/em&gt; template. This contains the code for the MORE link (&lt;code&gt;excerpt_link&lt;/code&gt; in my example):&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;../layout/partial/excerpt.ejs&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;div &lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;article-entry&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;%- post.&lt;span class=&#34;property&#34;&gt;excerpt&lt;/span&gt; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;% &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (theme.&lt;span class=&#34;property&#34;&gt;excerpt_link&lt;/span&gt;)&amp;#123; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;language-xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;article-more-link&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;href&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;%- url_for(post.path) + &amp;#x27;#continue&amp;#x27; %&amp;gt;&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;        &amp;lt;%= theme.excerpt_link %&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;      &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;    &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;% &amp;#125; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;I simply appended the hash “&lt;strong&gt;#continue&lt;/strong&gt;“ to the &lt;code&gt;url_for(post.path)&lt;/code&gt; statement and this is it for the start page.&lt;/p&gt;
&lt;h2 id=&#34;The-JS-on-the-article-page&#34;&gt;&lt;a href=&#34;#The-JS-on-the-article-page&#34; class=&#34;headerlink&#34; title=&#34;The JS on the article page&#34;&gt;&lt;/a&gt;The JS on the article page&lt;/h2&gt;&lt;p&gt;Since some of my pages deal with hashes, I have a general script that loads in the footer of each page and checks the hashes passed to the page. In the switch statement I only needed a new case for &lt;strong&gt;continue&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The first thing I did was to remove the hash again from the because I don’t want to show that to the user. It is only a tool for a better reading flow and should not have any further effects.&lt;/p&gt;
&lt;p&gt;To scroll around on a page via JavaScript, there is the &lt;code&gt;scrollIntoView&lt;/code&gt; method, which provides a wonderfully smooth scrolling effect with the &lt;code&gt;behavior: &amp;quot;smooth&amp;quot;&lt;/code&gt; and &lt;code&gt;inline: &amp;quot;nearest&amp;quot;&lt;/code&gt; options. In my case, however, this was out of the question, since it does not support an offset, which I need for my fixed header.&lt;/p&gt;
&lt;p&gt;The solution was the classic &lt;code&gt;window.scrollTo()&lt;/code&gt; function, which is a bit more work, but you can specify exactly where you want the page to go.&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;../layout/partial/after-footer.ejs&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; hash = &lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;location&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;hash&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;substr&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;switch&lt;/span&gt; (hash.&lt;span class=&#34;title function_&#34;&gt;toLowerCase&lt;/span&gt;()) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;case&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;continue&amp;quot;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    history.&lt;span class=&#34;title function_&#34;&gt;replaceState&lt;/span&gt;(&lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27; &amp;#x27;&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// remove hash&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;scrollTo&lt;/span&gt;(&amp;#123; &lt;span class=&#34;comment&#34;&gt;// scroll to the MORE element in the Article&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;behavior&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;smooth&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;top&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;querySelector&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;#more&amp;quot;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;getBoundingClientRect&lt;/span&gt;().&lt;span class=&#34;property&#34;&gt;top&lt;/span&gt; -&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;getBoundingClientRect&lt;/span&gt;().&lt;span class=&#34;property&#34;&gt;top&lt;/span&gt; -&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;, &lt;span class=&#34;comment&#34;&gt;// with a little buffer around it&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;default&lt;/span&gt;: &lt;span class=&#34;keyword&#34;&gt;break&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;This is it …&lt;/p&gt;
</content>
    <category term="JavaScript" scheme="https://kiko.io/categories/JavaScript/" />
    <category term="UI" scheme="https://kiko.io/tags/UI/" />
    <category term="Usability" scheme="https://kiko.io/tags/Usability/" />
  </entry>
  <entry>
    <id>https://kiko.io/post/Extension-of-downupPopup-Back-Button-Escape-Key-More/</id>
    <title>Extension of downupPopup: Back Button, Escape Key &amp; More</title>
    <published>2023-07-04T11:07:38.000Z</published>
    <updated></updated>
    <link href="https://kiko.io/post/Extension-of-downupPopup-Back-Button-Escape-Key-More/"/>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Extension-of-downupPopup-Back-Button-Escape-Key-More.thumb.png" height="1200" width="630" />
    <content type="html">&lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Extension-of-downupPopup-Back-Button-Escape-Key-More.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;I recently introduced a Bottom Sheet dialog on this blog to display a page’s metadata (&lt;a href=&#34;javascript:dialog.pageMeta()&#34;&gt;like this&lt;/a&gt;), using Ali Dincer’s work: &lt;a href=&#34;https://downuppopupjs.dincerali.com/&#34;&gt;&lt;strong&gt;downupPopup&lt;/strong&gt;&lt;/a&gt;. I described the way to do this in &lt;a href=&#34;/post/Show-pages-meta-data-JSON-LD-in-Bottom-Sheet/&#34;&gt;a post&lt;/a&gt; a couple three weeks ago.&lt;/p&gt;
&lt;p&gt;Shortly after that &lt;a href=&#34;https://octodon.social/@koos&#34;&gt;Koos Looijensteijn&lt;/a&gt; triggered me with his post &lt;a href=&#34;https://www.kooslooijesteijn.net/blog/digital-business-cards-vcard-qr-code-website&#34;&gt;How to make digital business cards and share them via QR codes&lt;/a&gt; and I felt like using my newly introduced dialog manager based on downupPopup for my own contact card.&lt;br&gt;&lt;strong&gt;But more about that at a later time, respectively blog post…&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Important for this post is that Ali’s bottom sheet solution did not offer everything I wanted for my implementation:&lt;/p&gt;
&lt;h2 id=&#34;1-Make-Dialog-Reusable&#34;&gt;&lt;a href=&#34;#1-Make-Dialog-Reusable&#34; class=&#34;headerlink&#34; title=&#34;1. Make Dialog Reusable&#34;&gt;&lt;/a&gt;1. Make Dialog Reusable&lt;/h2&gt;&lt;p&gt;As I have already described in the above mentioned article: Ali’s approach to calling the dialog was to create and initialize the necessary HTML elements if it didn’t already exist in the DOM. I pulled out the initialization to make the component reusable. There is now a preparation part and an initialization part and the latter is always called, no matter if another bottom sheet dialog was already created before.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ali-dincer/downupPopup.js/pull/2/commits/f3751ca56c4809decc1ec3845e5c301a13292773&#34;&gt;My GitHub commit on this part&lt;/a&gt;…&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;hr&gt;
&lt;h2 id=&#34;2-Dynamic-Distance&#34;&gt;&lt;a href=&#34;#2-Dynamic-Distance&#34; class=&#34;headerlink&#34; title=&#34;2. Dynamic Distance&#34;&gt;&lt;/a&gt;2. Dynamic Distance&lt;/h2&gt;&lt;p&gt;Since it makes no sense to have to scroll around on a contact card if the space provided by the web designer is not sufficient at small resolutions, I need a more dynamic approach to Ali’s &lt;em&gt;&lt;code&gt;distance&lt;/code&gt;&lt;/em&gt;, which sets the distance of the bottom sheet to the top of the viewport. &lt;/p&gt;
&lt;p&gt;To do this, I introduced a new setting called &lt;strong&gt;&lt;code&gt;minContentHeight&lt;/code&gt;&lt;/strong&gt; that can specify in pixels how high the content must be at least for everything to be visible. Because this makes the possibly specified &lt;code&gt;distance&lt;/code&gt; absurd,  I overwrite this specification with a value calculated with it and only then enter the distance value into the element attribute for further use. &lt;/p&gt;
&lt;p&gt;For the calculation to be correct, however, I need a fixed value for the HEADER of the dialog at this point, which was previously only defined in the CSS. In retrospect, this was a good decision, because once slight pixel shifts between HEADER and CONTENT disappeared in Google’s Chrome, my preferred browser.&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;downupPopup.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// Option Handling&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; settings = $.&lt;span class=&#34;title function_&#34;&gt;extend&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;minContentHeight&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// Initialization&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// setting header height&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; $head = $this.&lt;span class=&#34;title function_&#34;&gt;find&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;.downupPopup-header&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$head.&lt;span class=&#34;title function_&#34;&gt;find&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;span&amp;quot;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;text&lt;/span&gt;(settings.&lt;span class=&#34;property&#34;&gt;headerText&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; headH = &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$head.&lt;span class=&#34;title function_&#34;&gt;css&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;height&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt; + headH + &lt;span class=&#34;string&#34;&gt;&amp;#x27;vh&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// calculating dynamic distance by given minContentHeight&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (settings.&lt;span class=&#34;property&#34;&gt;minContentHeight&lt;/span&gt;) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; calcDistance = &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;round&lt;/span&gt;((&lt;span class=&#34;number&#34;&gt;100&lt;/span&gt; * (&lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;innerHeight&lt;/span&gt; - settings.&lt;span class=&#34;property&#34;&gt;minContentHeight&lt;/span&gt;) / &lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;innerHeight&lt;/span&gt;)) - headH;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  settings.&lt;span class=&#34;property&#34;&gt;distance&lt;/span&gt; = &lt;span class=&#34;title class_&#34;&gt;Math&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;max&lt;/span&gt;(&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;, calcDistance);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$this.&lt;span class=&#34;title function_&#34;&gt;attr&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;distance&amp;#x27;&lt;/span&gt;, settings.&lt;span class=&#34;property&#34;&gt;distance&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// setting distance to top&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; $cont = $this.&lt;span class=&#34;title function_&#34;&gt;find&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;.downupPopup-content&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; contH = &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt; - settings.&lt;span class=&#34;property&#34;&gt;distance&lt;/span&gt; - headH;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$cont.&lt;span class=&#34;title function_&#34;&gt;css&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;height&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt; + contH + &lt;span class=&#34;string&#34;&gt;&amp;#x27;vh&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/ali-dincer/downupPopup.js/pull/2/commits/0b1b72a4dd5ceb4b1436540a44c24f256f92a1ad&#34;&gt;My GitHub commit on this part&lt;/a&gt;…&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;3-Closing-Dialog-by-ESC-Key-or-BACK-Button&#34;&gt;&lt;a href=&#34;#3-Closing-Dialog-by-ESC-Key-or-BACK-Button&#34; class=&#34;headerlink&#34; title=&#34;3. Closing Dialog by ESC Key or BACK Button&#34;&gt;&lt;/a&gt;3. Closing Dialog by ESC Key or BACK Button&lt;/h2&gt;&lt;p&gt;With Koos’ really nice &lt;a href=&#34;https://www.fortomorrow.eu/en/contact/koos&#34;&gt;contact card&lt;/a&gt;, I noticed that I automatically tried to close his SHARE DATA popup dialog with the QRCode, which is created on-the-fly with JavaScript, with the BACK button, but ended up on a completely different, previously called page. I guess this is a psychological thing: if an element not bound to the url overlaps the current page, people (or just me?) perceives it as an independent page and try to navigate with long learned methods.&lt;/p&gt;
&lt;p&gt;So what was missing was, on the one hand, the ability to close the dialog using the &lt;strong&gt;ESCAPE key&lt;/strong&gt; (for desktop users) and, on the other hand, to manipulate the URL history so that the &lt;strong&gt;BACK button&lt;/strong&gt; or the corresponding mobile gesture works as expected.&lt;/p&gt;
&lt;p&gt;For the latter I needed again a new setting: the hash which will be added to the current URL to make the BACK button work: &lt;code&gt;urlHash&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;In addition, there were several redundant places in the original code, with which the dialog was closed, which I have summarized in a function, in order to avoid the new necessary to write several times. (&lt;a href=&#34;https://github.com/ali-dincer/downupPopup.js/pull/2/commits/fa0e119b42a444f1cb671d02381029f662d94591&#34;&gt;my GitHub commit on this part&lt;/a&gt;).&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;downupPopup.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// Option Handling&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; settings = $.&lt;span class=&#34;title function_&#34;&gt;extend&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;urlHash&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// General CLOSE function&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;close&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// unbind ESC&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  $(&lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;off&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;keyup&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// remove url hash &amp;amp; unbind BACK button&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (settings?.&lt;span class=&#34;property&#34;&gt;urlHash&lt;/span&gt; || $this.&lt;span class=&#34;title function_&#34;&gt;attr&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;hash&amp;#x27;&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    history.&lt;span class=&#34;title function_&#34;&gt;replaceState&lt;/span&gt;(&lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;, &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27; &amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    $(&lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;off&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;popstate&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// Initialization&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;// bind ESC to close&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$(&lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;on&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;keyup&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;event&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt;(event.&lt;span class=&#34;property&#34;&gt;key&lt;/span&gt; == &lt;span class=&#34;string&#34;&gt;&amp;quot;Escape&amp;quot;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;title function_&#34;&gt;close&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (settings.&lt;span class=&#34;property&#34;&gt;urlHash&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// set url hash &amp;amp; bind BACK button to close&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;location&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;hash&lt;/span&gt; = settings.&lt;span class=&#34;property&#34;&gt;urlHash&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  $(&lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;on&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;popstate&amp;quot;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;title function_&#34;&gt;close&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$this.&lt;span class=&#34;title function_&#34;&gt;attr&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;hash&amp;#x27;&lt;/span&gt;, settings.&lt;span class=&#34;property&#34;&gt;urlHash&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;The key of this code regarding the BACK button is to put the passed hash into the URL when initializing the dialog via &lt;code&gt;window.location.hash&lt;/code&gt; and to make sure that it is closed when the hash is removed again by the BACK button. I achieved this by using the &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/Window/popstate_event&#34;&gt;&lt;code&gt;popstate&lt;/code&gt;&lt;/a&gt; event, which fires when the active history entry changes.&lt;/p&gt;
&lt;p&gt;When the dialog is about to close, I had to make sure that the &lt;code&gt;history&lt;/code&gt; entry is overwritten via &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/API/History/replaceState&#34;&gt;&lt;code&gt;replaceState&lt;/code&gt;&lt;/a&gt; with &lt;code&gt;null&lt;/code&gt; (delete) and remove the previously bound &lt;code&gt;popstate&lt;/code&gt; event again, to avoid side effects.&lt;/p&gt;
&lt;p&gt;The code for the ESC key is similar: Bind the &lt;code&gt;keyup&lt;/code&gt; event on startup to close the dialog and remove it again on close.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/ali-dincer/downupPopup.js/pull/2/commits/1577a0e6306f75101afb09dc05f7abf80dc29e40&#34;&gt;My GitHub commit on this part&lt;/a&gt;…&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;Conclusion&#34;&gt;&lt;a href=&#34;#Conclusion&#34; class=&#34;headerlink&#34; title=&#34;Conclusion&#34;&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;&lt;p&gt;Everything works as expected and I hope that Ali will process my pull request soon. Until then you can find the code &lt;a href=&#34;https://github.com/kristofzerbe/downupPopup.js&#34;&gt;in my fork&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;All in all, the script has not become more readable or easier to maintain, even by using jQuery. In my head I already have the idea to do a complete rewrite as ESM class. Reason for this is surely Ali’s approach to realize commands like ‘open’ and ‘close’ as string parameters. This works better than real functions of an instantiated object. Furthermore, it is necessary to cache settings like &lt;code&gt;distance&lt;/code&gt; and &lt;code&gt;urlHash&lt;/code&gt; in HTML attributes, which does not have to be this way.&lt;/p&gt;
</content>
    <category term="UI/UX" scheme="https://kiko.io/categories/UI-UX/" />
    <category term="UI" scheme="https://kiko.io/tags/UI/" />
    <category term="GitHub" scheme="https://kiko.io/tags/GitHub/" />
    <category term="jQuery" scheme="https://kiko.io/tags/jQuery/" />
    <category term="Contributing" scheme="https://kiko.io/tags/Contributing/" />
  </entry>
  <entry>
    <id>https://kiko.io/post/Discoveries-25-Tutorials-HowTo-s/</id>
    <title>Discoveries #25 - Tutorials &amp; HowTo&#39;s</title>
    <published>2023-07-01T11:19:22.000Z</published>
    <updated></updated>
    <link href="https://kiko.io/post/Discoveries-25-Tutorials-HowTo-s/"/>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Discoveries-25-Tutorials-HowTo-s.thumb.png" height="1200" width="630" />
    <content type="html">&lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Discoveries-25-Tutorials-HowTo-s.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;This Discoveries issue is generally about tutorials from different areas: CORS, Azure, Elektron, GitHub Action, SVG. Outstanding articles by outstanding authors, who explain things in an easy and understandable way.&lt;/p&gt;
&lt;p&gt;Happy Reading…&lt;/p&gt;

        &lt;ul class=&#34;anchorlist&#34;&gt;
            &lt;li data-anchor=&#34;#cs-visualized-cors-dev&#34;&gt;CS Visualized: CORS&lt;/li&gt;&lt;li data-anchor=&#34;#use-azure-functions-azure-storage-blobs-and-cosmos-db-to-copy-images-from-public-urls&#34;&gt;Use Azure Functions, Azure Storage blobs, and Cosmos DB to copy images from public URLs&lt;/li&gt;&lt;li data-anchor=&#34;#build-a-secure-desktop-app-with-electron-forge-and-react&#34;&gt;Build a Secure Desktop App with Electron Forge and React&lt;/li&gt;&lt;li data-anchor=&#34;#node-js-api-authentication-with-json-web-tokens&#34;&gt;Node.js API Authentication with JSON Web Tokens&lt;/li&gt;&lt;li data-anchor=&#34;#how-to-build-an-smtp-mail-server-with-express-node-and-gmail&#34;&gt;How To Build an SMTP Mail Server with Express, Node, and Gmail&lt;/li&gt;&lt;li data-anchor=&#34;#advanced-git-series-1-8-creating-the-perfect-commit-in-git&#34;&gt;Advanced Git Series 1/8: Creating the Perfect Commit in Git&lt;/li&gt;&lt;li data-anchor=&#34;#learn-how-to-use-git-and-github-in-a-team-like-a-pro&#34;&gt;Learn how to use Git and GitHub in a team like a pro&lt;/li&gt;&lt;li data-anchor=&#34;#how-to-build-your-first-javascript-github-action&#34;&gt;How to Build Your First JavaScript GitHub Action&lt;/li&gt;&lt;li data-anchor=&#34;#getting-the-gist-of-github-actions&#34;&gt;Getting the Gist of GitHub Actions&lt;/li&gt;&lt;li data-anchor=&#34;#swipey-image-grids-with-svg&#34;&gt;Swipey Image Grids (with SVG)&lt;/li&gt;
        &lt;/ul&gt;
    

&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;


    &lt;hr id=&#34;cs-visualized-cors-dev&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      CS Visualized: CORS
    &lt;/h2&gt;
    &lt;small&gt;by Lydia Hallie&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://dev.to/lydiahallie/cs-visualized-cors-5b8h&#34;&gt;https://dev.to/lydiahallie/cs-visualized-cors-5b8h&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;What web dev hasn&amp;#39;t struggled with CORS errors? Lydia explains here in great detail and with visual support the whys and wherefores of CORS and how to work around problems.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://dev.to/lydiahallie/cs-visualized-cors-5b8h&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;cs-visualized-cors-dev.png&#34; alt=&#34;CS Visualized: CORS&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;use-azure-functions-azure-storage-blobs-and-cosmos-db-to-copy-images-from-public-urls&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Use Azure Functions, Azure Storage blobs, and Cosmos DB to copy images from public URLs
    &lt;/h2&gt;
    &lt;small&gt;by Dave Brock&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://daveabrock.com/2020/11/25/images-azure-blobs-cosmos&#34;&gt;https://daveabrock.com/2020/11/25/images-azure-blobs-cosmos&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;In this post, Dave shows how to work with Azure Storage blobs and Cosmos DB to copy images that are available over the public Internet.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://daveabrock.com/2020/11/25/images-azure-blobs-cosmos&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;use-azure-functions-azure-storage-blobs-and-cosmos-db-to-copy-images-from-public-urls.png&#34; alt=&#34;Use Azure Functions, Azure Storage blobs, and Cosmos DB to copy images from public URLs&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;build-a-secure-desktop-app-with-electron-forge-and-react&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Build a Secure Desktop App with Electron Forge and React
    &lt;/h2&gt;
    &lt;small&gt;by Kilian Valkhof&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://www.sitepoint.com/electron-forge-react-build-secure-desktop-app/?utm_source=rss&#34;&gt;https://www.sitepoint.com/electron-forge-react-build-secure-desktop-app/?utm_source=rss&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Creating a cross-platform desktop app is easy thanks to Electron. Learn from Kilian how to create a secure desktop app using React, Electron and Electron Forge.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://www.sitepoint.com/electron-forge-react-build-secure-desktop-app/?utm_source=rss&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;build-a-secure-desktop-app-with-electron-forge-and-react.jpg&#34; alt=&#34;Build a Secure Desktop App with Electron Forge and React&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;node-js-api-authentication-with-json-web-tokens&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Node.js API Authentication with JSON Web Tokens
    &lt;/h2&gt;
    &lt;small&gt;by Jay Krishna Reddy&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://javascript.plainenglish.io/node-js-api-authentication-with-json-web-tokens-bb511f603723&#34;&gt;https://javascript.plainenglish.io/node-js-api-authentication-with-json-web-tokens-bb511f603723&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;In this article, Jay shows how to access the JSON web token (JWT) in Node.js and also to protect our routes with it.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://javascript.plainenglish.io/node-js-api-authentication-with-json-web-tokens-bb511f603723&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;node-js-api-authentication-with-json-web-tokens.jpg&#34; alt=&#34;Node.js API Authentication with JSON Web Tokens&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;how-to-build-an-smtp-mail-server-with-express-node-and-gmail&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      How To Build an SMTP Mail Server with Express, Node, and Gmail
    &lt;/h2&gt;
    &lt;small&gt;by Michael Rehnert&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://daily.dev/blog/how-to-build-an-smtp-mail-server-with-express-node-and-gmail&#34;&gt;https://daily.dev/blog/how-to-build-an-smtp-mail-server-with-express-node-and-gmail&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Michael shows in his tutorial how to use Node and Express to develop a mail server that uses Gmail for free transport via SMTP.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://daily.dev/blog/how-to-build-an-smtp-mail-server-with-express-node-and-gmail&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;how-to-build-an-smtp-mail-server-with-express-node-and-gmail.png&#34; alt=&#34;How To Build an SMTP Mail Server with Express, Node, and Gmail&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;advanced-git-series-1-8-creating-the-perfect-commit-in-git&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Advanced Git Series 1/8: Creating the Perfect Commit in Git
    &lt;/h2&gt;
    &lt;small&gt;by Tobias Günther&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://css-tricks.com/creating-the-perfect-commit-in-git/&#34;&gt;https://css-tricks.com/creating-the-perfect-commit-in-git/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;In this series from 2021 on CSS-Tricks, Tobias goes into the most important aspects in the advanced handling of Git in a vivid way. Better commits, branching, collaboration, rebasing, cherry-picking … a good reminder.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://css-tricks.com/creating-the-perfect-commit-in-git/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;advanced-git-series-1-8-creating-the-perfect-commit-in-git.jpg&#34; alt=&#34;Advanced Git Series 1/8: Creating the Perfect Commit in Git&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;learn-how-to-use-git-and-github-in-a-team-like-a-pro&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Learn how to use Git and GitHub in a team like a pro
    &lt;/h2&gt;
    &lt;small&gt;by Damian Demasi&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://dev.to/colocodes/learn-how-to-use-git-and-github-in-a-team-like-a-pro-2dk7&#34;&gt;https://dev.to/colocodes/learn-how-to-use-git-and-github-in-a-team-like-a-pro-2dk7&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;This short two-part series by Damian clearly highlights the possibilities of collaboration with Git and the platform Github, which is usually neglected in other tutorials.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://dev.to/colocodes/learn-how-to-use-git-and-github-in-a-team-like-a-pro-2dk7&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;learn-how-to-use-git-and-github-in-a-team-like-a-pro.png&#34; alt=&#34;Learn how to use Git and GitHub in a team like a pro&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;how-to-build-your-first-javascript-github-action&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      How to Build Your First JavaScript GitHub Action
    &lt;/h2&gt;
    &lt;small&gt;by Bassem Dghaidi&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://www.freecodecamp.org/news/build-your-first-javascript-github-action/&#34;&gt;https://www.freecodecamp.org/news/build-your-first-javascript-github-action/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;The automation possibilities of Github&amp;#39;s Actions seem limitless. There is hardly a JavaScript workflow that cannot be mapped in some way. This is also due to the openness, because anyone can provide workflows. Bassem explains the basic system with examples.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://www.freecodecamp.org/news/build-your-first-javascript-github-action/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;how-to-build-your-first-javascript-github-action.png&#34; alt=&#34;How to Build Your First JavaScript GitHub Action&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;getting-the-gist-of-github-actions&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Getting the Gist of GitHub Actions
    &lt;/h2&gt;
    &lt;small&gt;by Brendon Smith&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://gist.github.com/br3ndonland/f9c753eb27381f97336aa21b8d932be6&#34;&gt;https://gist.github.com/br3ndonland/f9c753eb27381f97336aa21b8d932be6&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Like Bassem, Brendon shows some of the the basic principle of GitHub Actions, but expands on it with pro tips and workarounds when things get stuck.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://gist.github.com/br3ndonland/f9c753eb27381f97336aa21b8d932be6&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;getting-the-gist-of-github-actions.png&#34; alt=&#34;Getting the Gist of GitHub Actions&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;swipey-image-grids-with-svg&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Swipey Image Grids (with SVG)
    &lt;/h2&gt;
    &lt;small&gt;by Cassie Evans&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://www.cassie.codes/posts/swipey-image-grids/&#34;&gt;https://www.cassie.codes/posts/swipey-image-grids/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;If you&amp;#39;re familiar with CSS animations, you might be interested in this post by Cassie, as she shows how to do it without CSS directly in SVG.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://www.cassie.codes/posts/swipey-image-grids/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;swipey-image-grids-with-svg.png&#34; alt=&#34;Swipey Image Grids (with SVG)&#34; /&gt;
    &lt;/a&gt;
  
</content>
    <category term="Misc" scheme="https://kiko.io/categories/Misc/" />
    <category term="Collection" scheme="https://kiko.io/tags/Collection/" />
  </entry>
  <entry>
    <id>https://kiko.io/post/Include-and-provide-JSON-data-in-Hexo-EJS-Templates/</id>
    <title>Include and provide JSON data in Hexo EJS Templates</title>
    <published>2023-06-27T05:26:21.000Z</published>
    <updated></updated>
    <link href="https://kiko.io/post/Include-and-provide-JSON-data-in-Hexo-EJS-Templates/"/>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Include-and-provide-JSON-data-in-Hexo-EJS-Templates.thumb.png" height="1200" width="630" />
    <content type="html">&lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Include-and-provide-JSON-data-in-Hexo-EJS-Templates.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;The three main components of a standard installation of the Static Site Generator &lt;a href=&#34;https://hexo.io/&#34;&gt;Hexo&lt;/a&gt; are the template system &lt;a href=&#34;https://ejs.co/&#34;&gt;EJS (Embedded JavaScript Templating)&lt;/a&gt;, &lt;a href=&#34;https://en.wikipedia.org/wiki/Markdown&#34;&gt;Markdown&lt;/a&gt; for the content and &lt;a href=&#34;https://stylus-lang.com/&#34;&gt;Stylus&lt;/a&gt; for the styles.&lt;/p&gt;
&lt;p&gt;In the template files are the three main tags for driving content:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Scriptlet tag for control flow (no output)&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ... my JavaScript code to process data into the template&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Output a value as escaped HTML&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%= myVariable %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Output of a raw value, usually in the form of a JavaScript function&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight plaintext&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%- myFunction() %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;a href=&#34;https://hexo.io/docs/helpers&#34;&gt;Hexo’s helper system&lt;/a&gt; is based on the latter. So you can include a JavaScript file in your template that makes use of the &lt;a href=&#34;https://hexo.io/docs/helpers#js&#34;&gt;&lt;strong&gt;JS Helper&lt;/strong&gt;&lt;/a&gt; in &lt;code&gt;node_modules\hexo\lib\plugins\helper\js.js&lt;/code&gt; as follows …&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%- &lt;span class=&#34;title function_&#34;&gt;js&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;/js/dist/myFancyFunctions.js&amp;#x27;&lt;/span&gt;) %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;… which will be rendered to:&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;/js/dist//js/dist/qr-code-styling.js&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h2 id=&#34;The-Problem&#34;&gt;&lt;a href=&#34;#The-Problem&#34; class=&#34;headerlink&#34; title=&#34;The Problem&#34;&gt;&lt;/a&gt;The Problem&lt;/h2&gt;&lt;p&gt;So far and short, so good … but I recently tried to use this way to include a JSON file whose data one of my scripts needed as startup options and I noticed that the above mentioned JS helper unfortunately takes care of the possibly missing file extension &lt;code&gt;js&lt;/code&gt;. It doesn’t matter if you only pass the path to the file as a string or if all necessary attributes as an object.&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%- &lt;span class=&#34;title function_&#34;&gt;js&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;js/dist/script-options.json&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;application/json&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;) %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;This code leads to the following wrong code …&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;/js/dist//js/dist/qr-code-styling.json.js&amp;quot;&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;       &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;application/json&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h2 id=&#34;The-JSON-Helper&#34;&gt;&lt;a href=&#34;#The-JSON-Helper&#34; class=&#34;headerlink&#34; title=&#34;The JSON Helper&#34;&gt;&lt;/a&gt;The JSON Helper&lt;/h2&gt;&lt;p&gt;Since Hexo’s developers went a bit over my&amp;#x2F;the target with the helper’s functionality, I had to build my own JSON helper, which is actually just a slightly customized copy of the original:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;themes\landscape\scripts\json-helper.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &amp;#123; htmlTag, url_for &amp;#125; = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;hexo-util&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;hexo.&lt;span class=&#34;property&#34;&gt;extend&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;helper&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;register&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;json&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;...args&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; result = &lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  args.&lt;span class=&#34;title function_&#34;&gt;flat&lt;/span&gt;(&lt;span class=&#34;title class_&#34;&gt;Infinity&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;forEach&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;item&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;keyword&#34;&gt;typeof&lt;/span&gt; item === &lt;span class=&#34;string&#34;&gt;&amp;#x27;string&amp;#x27;&lt;/span&gt; || item &lt;span class=&#34;keyword&#34;&gt;instanceof&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;String&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// args = String only&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; path = item;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!path.&lt;span class=&#34;title function_&#34;&gt;endsWith&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;.json&amp;#x27;&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        path += &lt;span class=&#34;string&#34;&gt;&amp;#x27;.json&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      result += &lt;span class=&#34;string&#34;&gt;`&amp;lt;script src=&amp;quot;&lt;span class=&#34;subst&#34;&gt;$&amp;#123;url_for.call(&lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;, path)&amp;#125;&lt;/span&gt;&amp;quot; type=&amp;quot;application/json&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;\n`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;// args = Object -&amp;gt; Custom Attributes&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      item.&lt;span class=&#34;property&#34;&gt;src&lt;/span&gt; = url_for.&lt;span class=&#34;title function_&#34;&gt;call&lt;/span&gt;(&lt;span class=&#34;variable language_&#34;&gt;this&lt;/span&gt;, item.&lt;span class=&#34;property&#34;&gt;src&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      item.&lt;span class=&#34;property&#34;&gt;type&lt;/span&gt; = &lt;span class=&#34;string&#34;&gt;&amp;quot;application/json&amp;quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!item.&lt;span class=&#34;property&#34;&gt;src&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;endsWith&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;.json&amp;#x27;&lt;/span&gt;)) item.&lt;span class=&#34;property&#34;&gt;src&lt;/span&gt; += &lt;span class=&#34;string&#34;&gt;&amp;#x27;.json&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      result += &lt;span class=&#34;title function_&#34;&gt;htmlTag&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;script&amp;#x27;&lt;/span&gt;, &amp;#123; ...item &amp;#125;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;) + &lt;span class=&#34;string&#34;&gt;&amp;#x27;\n&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; result;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;You can find the complete file &lt;a href=&#34;https://github.com/kristofzerbe/kiko.io/blob/master/themes/landscape/scripts/json-helper.js&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;With this its possible to reference the JSON like this:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%- &lt;span class=&#34;title function_&#34;&gt;json&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;js/dist/myOptions.json&amp;#x27;&lt;/span&gt;) %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h2 id=&#34;Bring-JSON-data-to-life&#34;&gt;&lt;a href=&#34;#Bring-JSON-data-to-life&#34; class=&#34;headerlink&#34; title=&#34;Bring JSON data to life&#34;&gt;&lt;/a&gt;Bring JSON data to life&lt;/h2&gt;&lt;p&gt;However, the helper only allowed me to load the file as such. What was still missing was the loading of the data in the JavaScript of the page itself. The easiest way to achieve that, was to perform a FETCH of the already referenced and loaded file in the SCRIPT block of the template as an immediately invoked async function:&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption&gt;&lt;span&gt;EJS File&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%- js(&amp;#x27;js/dist/myFancyObjectLibrary.js&amp;#x27;) %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%- json(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  src: &amp;#x27;js/dist/myOptions.json&amp;#x27;, &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  id: &amp;#x27;my-options&amp;#x27;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;) %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt; (&lt;span class=&#34;keyword&#34;&gt;async&lt;/span&gt; () =&amp;gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; response = &lt;span class=&#34;keyword&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;fetch&lt;/span&gt;(&lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;getElementById&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;my-options&amp;#x27;&lt;/span&gt;).&lt;span class=&#34;property&#34;&gt;src&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; options = &lt;span class=&#34;keyword&#34;&gt;await&lt;/span&gt; response.&lt;span class=&#34;title function_&#34;&gt;json&lt;/span&gt;();    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; obj = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;myFancyObject&lt;/span&gt;(options);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;//... do something with the initialized object&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &amp;#125;)();&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Et voilà … Job done.&lt;/p&gt;
</content>
    <category term="JavaScript" scheme="https://kiko.io/categories/JavaScript/" />
    <category term="Hexo" scheme="https://kiko.io/tags/Hexo/" />
    <category term="Templating" scheme="https://kiko.io/tags/Templating/" />
  </entry>
  <entry>
    <id>https://kiko.io/post/Show-pages-meta-data-JSON-LD-in-Bottom-Sheet/</id>
    <title>Show pages meta data (JSON-LD) in Bottom Sheet</title>
    <published>2023-06-11T12:11:45.000Z</published>
    <updated></updated>
    <link href="https://kiko.io/post/Show-pages-meta-data-JSON-LD-in-Bottom-Sheet/"/>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Show-pages-meta-data-JSON-LD-in-Bottom-Sheet.thumb.png" height="1200" width="630" />
    <content type="html">&lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Show-pages-meta-data-JSON-LD-in-Bottom-Sheet.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;A few months ago I introduced new meta data (JSON-LD) for the pages of this blog and also &lt;a href=&#34;/post/Provide-Blog-Metadata-via-JSON-LD/&#34; title=&#34;Provide Blog Metadata via JSON-LD&#34;&gt;wrote about my implementation&lt;/a&gt;. Works also everything quite well … only the verification of the generated data was a bit cumbersome:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open DevTools for a page in Chrome.&lt;/li&gt;
&lt;li&gt;Search in the HEAD of the source code for the included script (“application&amp;#x2F;ld+json”)&lt;/li&gt;
&lt;li&gt;Copy out JSON-LD code&lt;/li&gt;
&lt;li&gt;Format JSON into VS code … and check&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Nothing for now and simply impossible on the smartphone, even if there would be a reasonable Chrome extension for displaying JSON-LD data, but it does not exist (yet). Another problem was that I use automatically generated Socal Media images for my articles, which are included in the JSON-LD, but do not appear anywhere in the page and thus were beyond my control. I simply wanted to display all the generated stuff.&lt;/p&gt;
&lt;p&gt;Since I’ve been a fan of the so-called bottom sheets since the first version of Google’s Material Design, I imagined a script that grabs the code embedded in the page and pushes a panel with all the data visualized there into the page from the bottom … and the whole act was easier than I thought.&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;hr&gt;
&lt;h2 id=&#34;The-Bottom-Sheet-Component&#34;&gt;&lt;a href=&#34;#The-Bottom-Sheet-Component&#34; class=&#34;headerlink&#34; title=&#34;The Bottom Sheet Component&#34;&gt;&lt;/a&gt;The Bottom Sheet Component&lt;/h2&gt;&lt;p&gt;Recently I stumbled across a small but nice bottom sheet script that is based on jQuery but that I still use on this blog itself: &lt;a href=&#34;https://downuppopupjs.dincerali.com/&#34;&gt;&lt;strong&gt;downupPopup.js&lt;/strong&gt;&lt;/a&gt; by &lt;a href=&#34;https://dincerali.com/&#34;&gt;Ali Dinçer&lt;/a&gt;. It has several settings and is just about 5 KB in size, if you add the CSS code. What’s nice about it is, that all the animations that make such a component stand out, are based on said CSS and are not jQuery-driven.&lt;/p&gt;
&lt;p&gt;The bottom sheet is based on a base HTML element with a required child element:&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;myElement1&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;downupPopup-content&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    Lorem ipsum dolor sit amet...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;This is first initialized with the desired settings, with the script adding the necessary inline styles, and then you can open and close it:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;$(&lt;span class=&#34;string&#34;&gt;&amp;quot;#myElement1&amp;quot;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;downupPopup&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$(&lt;span class=&#34;string&#34;&gt;&amp;quot;#myElement1&amp;quot;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;downupPopup&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;open&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;$(&lt;span class=&#34;string&#34;&gt;&amp;quot;#myElement1&amp;quot;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;downupPopup&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;close&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Now my solution should work on-the-fly and without a previously defined element in the HTML … and it should be reusable, because if I already include a bottom sheet component, then I wanted to use it for future occasions. For this I wrote myself a small manager that makes different uses possible with a single call.&lt;/p&gt;
&lt;p&gt;It has one function each for a specific bottom sheet dialog and beside it base variables and functions (&lt;code&gt;base&lt;/code&gt;) to keep the infrastructure code of the former as small as possible:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;dialog.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; dpDialog = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;#x27;base&amp;#x27;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;element&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;content&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;options&amp;#x27;&lt;/span&gt;: &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;animation&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;ease&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;duration&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;400&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;radiusLeft&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;6px&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;radiusRight&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;6px&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;width&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;100%&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;init&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;options&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; opt = &amp;#123;...dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;options&lt;/span&gt;, ...options&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; ($(&lt;span class=&#34;string&#34;&gt;&amp;quot;#dpElement&amp;quot;&lt;/span&gt;).&lt;span class=&#34;property&#34;&gt;length&lt;/span&gt; === &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;// create new&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;element&lt;/span&gt; = $(&lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          &amp;lt;div id=&amp;quot;dpElement&amp;quot;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            &amp;lt;div class=&amp;quot;downupPopup-content&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          &amp;lt;/div&amp;gt;`&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;element&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;appendTo&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;body&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;content&lt;/span&gt; = dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;element&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;find&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;.downupPopup-content&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123; &lt;span class=&#34;comment&#34;&gt;// reset existing&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;element&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;downupPopup&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;close&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;content&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;empty&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;element&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;downupPopup&lt;/span&gt;(opt);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;#x27;show&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;setTimeout&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;element&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;downupPopup&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;open&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;#x27;myFirstTest&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// INIT DIALOG&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;init&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;headerText&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;Test&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;distance&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;75&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// ADD CONTENT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; content = &lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;      &amp;lt;section&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        &amp;lt;p&amp;gt;Lorem ipsum dolor sit amet...&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;      &amp;lt;/section&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;    `&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    $(content).&lt;span class=&#34;title function_&#34;&gt;appendTo&lt;/span&gt;(dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;content&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// OPEN DIALOG&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;show&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;#x27;pageMeta&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// INIT DIALOG&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;init&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;headerText&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;Page Meta&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;contentScroll&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;distance&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// ADD CONTENT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// ... appending stuff to dpDialog.base.content&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// OPEN DIALOG&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;show&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;dialog&lt;/span&gt; = dpDialog; &lt;span class=&#34;comment&#34;&gt;// make it globally available&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;The base &lt;code&gt;init&lt;/code&gt; function takes care of initializing the downupPopup component, including dynamically inserting the necessary HTML element and attaching the desired settings. &lt;code&gt;show&lt;/code&gt; opens up the dialog, with a small time delay, to ensure that the content has already been inserted.&lt;br&gt;Dialog functions in the example above are: &lt;code&gt;myFirstTest&lt;/code&gt; and &lt;code&gt;pageMeta&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Calling one of the dialog functions is simple:&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;href&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;javascript:dpDialog.myFirstTest()&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Open Test Dialog&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Try here: &lt;a href=&#34;javascript:dpDialog.myFirstTest()&#34;&gt;Open Test Dialog&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;Problem-with-the-original-implementation-solved&#34;&gt;&lt;a href=&#34;#Problem-with-the-original-implementation-solved&#34; class=&#34;headerlink&#34; title=&#34;Problem with the original implementation solved&#34;&gt;&lt;/a&gt;Problem with the original implementation solved&lt;/h3&gt;&lt;p&gt;Ali decided in his original implementation to apply the given settings only once to a popup element. Once initialized, it could not be reused with different settings. To avoid having to destroy an existing element before initializing a new one, which would have caused a massive timing problem due to the animation, I decided to fork his code and give him a &lt;a href=&#34;https://github.com/ali-dincer/downupPopup.js/pull/2&#34;&gt;pull request&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;You can find my script here, as long as Ali didn’t include the PR in his code: &lt;a href=&#34;https://github.com/kristofzerbe/downupPopup.js&#34;&gt;kristofzerbe&amp;#x2F;downupPopup.js&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;The-PageMeta-Dialog&#34;&gt;&lt;a href=&#34;#The-PageMeta-Dialog&#34; class=&#34;headerlink&#34; title=&#34;The PageMeta Dialog&#34;&gt;&lt;/a&gt;The PageMeta Dialog&lt;/h2&gt;&lt;p&gt;Now that I had my desired display option, it was time to bring the &lt;code&gt;pageMeta&lt;/code&gt; dialog function to life.&lt;/p&gt;
&lt;p&gt;My first thought was to use a JSON-LD parser in JavaScript provided by &lt;a href=&#34;https://json-ld.org/&#34;&gt;&lt;strong&gt;json-ld.org&lt;/strong&gt;&lt;/a&gt;, but this is not even quickly usable, since it validates the code to be parsed at runtime against schema.org and every of my calls failed with CORS warnings. Now I didn’t want to turn this into a PhD thesis, I just wanted to display my highly customized JSON-LD, so I worked out the function quite individually.&lt;/p&gt;
&lt;h3 id=&#34;The-Code-Itself&#34;&gt;&lt;a href=&#34;#The-Code-Itself&#34; class=&#34;headerlink&#34; title=&#34;The Code Itself&#34;&gt;&lt;/a&gt;The Code Itself&lt;/h3&gt;&lt;p&gt;I wanted to show two things in the dialog: the code itself and a visual representation of it for a better overview.&lt;/p&gt;
&lt;p&gt;Getting the content for the code was really straight forward:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;dialog.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;#x27;pageMeta&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// INIT DIALOG&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;init&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;headerText&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;Page Meta&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;contentScroll&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;distance&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// ADD CONTENT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Grab the JSON-LD code from the page&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; json = &lt;span class=&#34;title class_&#34;&gt;JSON&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;parse&lt;/span&gt;($(&lt;span class=&#34;string&#34;&gt;&amp;#x27;script[type=&amp;quot;application/ld+json&amp;quot;]&amp;#x27;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;text&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Create new dialog section for the code&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; secCode = $(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;lt;section&amp;gt;&amp;lt;/section&amp;gt;&amp;#x27;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;appendTo&lt;/span&gt;(dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;content&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Append header&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    secCode.&lt;span class=&#34;title function_&#34;&gt;append&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;lt;h1&amp;gt;JSON-LD&amp;lt;/h1&amp;gt;&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Append formatted code als PRE element&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    secCode.&lt;span class=&#34;title function_&#34;&gt;append&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;lt;pre class=&amp;quot;json&amp;quot;&amp;gt;&amp;#x27;&lt;/span&gt; + &lt;span class=&#34;title function_&#34;&gt;syntaxHighlight&lt;/span&gt;(&lt;span class=&#34;title class_&#34;&gt;JSON&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;stringify&lt;/span&gt;(json, &lt;span class=&#34;literal&#34;&gt;undefined&lt;/span&gt;, &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;))) + &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;lt;/pre&amp;gt;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// OPEN DIALOG&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;show&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Since I had taken care to compress my JSON-LD code to save space, I now needed to get it back into a readable format. Time saver was the following script, which I found on &lt;a href=&#34;https://stackoverflow.com/questions/4810841/pretty-print-json-using-javascript&#34;&gt;StackOverflow (pretty-print JSON using JavaScript)&lt;/a&gt;:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;syntaxHighlight&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;json&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  json = json.&lt;span class=&#34;title function_&#34;&gt;replace&lt;/span&gt;(&lt;span class=&#34;regexp&#34;&gt;/&amp;amp;/g&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;amp;amp;&amp;#x27;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;replace&lt;/span&gt;(&lt;span class=&#34;regexp&#34;&gt;/&amp;lt;/g&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;amp;lt;&amp;#x27;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;replace&lt;/span&gt;(&lt;span class=&#34;regexp&#34;&gt;/&amp;gt;/g&lt;/span&gt;, &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;amp;gt;&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; json.&lt;span class=&#34;title function_&#34;&gt;replace&lt;/span&gt;(&lt;span class=&#34;regexp&#34;&gt;/(&amp;quot;(\\u[a-zA-Z0-9]&amp;#123;4&amp;#125;|\\[^u]|[^\\&amp;quot;])*&amp;quot;(\s*:)?|\b(true|false|null)\b|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?)/g&lt;/span&gt;, &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;match&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;var&lt;/span&gt; cls = &lt;span class=&#34;string&#34;&gt;&amp;#x27;number&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;regexp&#34;&gt;/^&amp;quot;/&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;test&lt;/span&gt;(match)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;regexp&#34;&gt;/:$/&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;test&lt;/span&gt;(match)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              cls = &lt;span class=&#34;string&#34;&gt;&amp;#x27;key&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;              cls = &lt;span class=&#34;string&#34;&gt;&amp;#x27;string&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;regexp&#34;&gt;/true|false/&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;test&lt;/span&gt;(match)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          cls = &lt;span class=&#34;string&#34;&gt;&amp;#x27;boolean&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;regexp&#34;&gt;/null/&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;test&lt;/span&gt;(match)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          cls = &lt;span class=&#34;string&#34;&gt;&amp;#x27;null&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;lt;span class=&amp;quot;&amp;#x27;&lt;/span&gt; + cls + &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;quot;&amp;gt;&amp;#x27;&lt;/span&gt; + match + &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;lt;/span&amp;gt;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight css&#34;&gt;&lt;figcaption&gt;&lt;span&gt;(Stylus format)&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;pre&lt;span class=&#34;selector-class&#34;&gt;.json&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attribute&#34;&gt;font-family&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;#x27;Roboto Mono&amp;#x27;&lt;/span&gt;,monospace&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  font-size: &lt;span class=&#34;number&#34;&gt;13px&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  .string &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    color: &lt;span class=&#34;number&#34;&gt;#4271ae&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  .number &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    color: &lt;span class=&#34;number&#34;&gt;#4271ae&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  .boolean &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    color: &lt;span class=&#34;number&#34;&gt;#4271ae&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  .null&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    color: &lt;span class=&#34;number&#34;&gt;#ababab&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  .key&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    color: &lt;span class=&#34;number&#34;&gt;#c15353&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;h3 id=&#34;The-Visual-Representation&#34;&gt;&lt;a href=&#34;#The-Visual-Representation&#34; class=&#34;headerlink&#34; title=&#34;The Visual Representation&#34;&gt;&lt;/a&gt;The Visual Representation&lt;/h3&gt;&lt;p&gt;My JSON-LD is hierarchically structured. Each page always has a &lt;code&gt;PERSON&lt;/code&gt; block for information about me as a person, then an &lt;code&gt;ORGANIZATION&lt;/code&gt; block about the “people” behind the blog (just me), then a &lt;code&gt;WEBSITE&lt;/code&gt; block for the description of the website itself and a &lt;code&gt;WEBPAGE&lt;/code&gt; block for a single page. Article pages like this, also have an &lt;code&gt;ARTICLE&lt;/code&gt; block and the note pages have a &lt;code&gt;BLOGPOSTING&lt;/code&gt; block.&lt;/p&gt;
&lt;p&gt;Therefore, it seemed logical to me to display the blocks as an accordion using the DETAILS element, with only the first one open at startup.&lt;/p&gt;
&lt;p&gt;To process the required HTML, I wrote a helper function for each block that returns a string literal template to which the calling code passes the necessary data.&lt;/p&gt;
&lt;p&gt;To save space, only one block is included in the example below. The others work similarly. &lt;/p&gt;

    &lt;div class=&#34;alertbox alertbox-info&#34;&gt;
      &lt;p&gt;You can see the complete code here and modify it for your purposes: &lt;a href=&#34;https://github.com/kristofzerbe/kiko.io/blob/master/themes/landscape/source/js/dialog.js&#34;&gt;&lt;strong&gt;dialog.js&lt;/strong&gt; of the blog kiko.io&lt;/a&gt;.&lt;/p&gt;

    &lt;/div&gt;
  

&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;dialog.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;#x27;pageMeta&amp;#x27;&lt;/span&gt;: &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// INIT DIALOG&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;init&lt;/span&gt;(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;headerText&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;Page Meta&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;contentScroll&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;distance&lt;/span&gt;: &lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// ADD CONTENT&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Grab the JSON-LD code from the page&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; json = &lt;span class=&#34;title class_&#34;&gt;JSON&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;parse&lt;/span&gt;($(&lt;span class=&#34;string&#34;&gt;&amp;#x27;script[type=&amp;quot;application/ld+json&amp;quot;]&amp;#x27;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;text&lt;/span&gt;());&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Create new dialog section for the visual representation&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; secVisual = $(&lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;lt;section&amp;gt;&amp;lt;/section&amp;gt;&amp;#x27;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;appendTo&lt;/span&gt;(dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;content&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// ... other blocks for the visual representation &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Block WEBSITE&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;getWebSite&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;website, organization&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        &amp;lt;details&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          &amp;lt;summary&amp;gt;WebSite&amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          &amp;lt;div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            &amp;lt;label&amp;gt;Name&amp;lt;/label&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            &amp;lt;p&amp;gt;&lt;span class=&#34;subst&#34;&gt;$&amp;#123;website.name&amp;#125;&lt;/span&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            &amp;lt;label&amp;gt;Description&amp;lt;/label&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            &amp;lt;p&amp;gt;&lt;span class=&#34;subst&#34;&gt;$&amp;#123;website.description&amp;#125;&lt;/span&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            &amp;lt;label&amp;gt;Language&amp;lt;/label&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            &amp;lt;p&amp;gt;&lt;span class=&#34;subst&#34;&gt;$&amp;#123;website.inLanguage&amp;#125;&lt;/span&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            &amp;lt;label&amp;gt;Publisher&amp;lt;/label&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            &amp;lt;p&amp;gt;&lt;span class=&#34;subst&#34;&gt;$&amp;#123;organization.name&amp;#125;&lt;/span&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        &amp;lt;/details&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;      `&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Get WebSite block from JSON&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; jWebSite = json[&lt;span class=&#34;string&#34;&gt;&amp;quot;@graph&amp;quot;&lt;/span&gt;].&lt;span class=&#34;title function_&#34;&gt;filter&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;x&lt;/span&gt; =&amp;gt;&lt;/span&gt; x[&lt;span class=&#34;string&#34;&gt;&amp;quot;@type&amp;quot;&lt;/span&gt;] === &lt;span class=&#34;string&#34;&gt;&amp;quot;WebSite&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Get referenced Publisher information (Organization)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; jPublisher = json[&lt;span class=&#34;string&#34;&gt;&amp;quot;@graph&amp;quot;&lt;/span&gt;].&lt;span class=&#34;title function_&#34;&gt;filter&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;x&lt;/span&gt; =&amp;gt;&lt;/span&gt; x[&lt;span class=&#34;string&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;] === jWebSite[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;].&lt;span class=&#34;property&#34;&gt;publisher&lt;/span&gt;[&lt;span class=&#34;string&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Get filled HTML from template helper function above&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; tWebSite = &lt;span class=&#34;title function_&#34;&gt;getWebSite&lt;/span&gt;(jWebSite[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;], jPublisher[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;]);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Append HTML to content&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    secVisual.&lt;span class=&#34;title function_&#34;&gt;append&lt;/span&gt;($(tWebSite));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// ... other blocks for the visual representation &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// ... (Code stuff from above)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// OPEN DIALOG&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    dpDialog.&lt;span class=&#34;property&#34;&gt;base&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;show&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h2 id=&#34;Conclusion&#34;&gt;&lt;a href=&#34;#Conclusion&#34; class=&#34;headerlink&#34; title=&#34;Conclusion&#34;&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;&lt;p&gt;It was fun to add a new feature to the site, even more so because it helps me keep track of the meta data of each page myself.&lt;/p&gt;
&lt;p&gt;Here (or in the footer of each page) you can see the result:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;javascript:dpDialog.pageMeta();&#34;&gt;&lt;strong&gt;Open Page Meta for this article…&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;More-Information&#34;&gt;&lt;a href=&#34;#More-Information&#34; class=&#34;headerlink&#34; title=&#34;More Information&#34;&gt;&lt;/a&gt;More Information&lt;/h2&gt;
        &lt;ul class=&#34;moreinfo-list&#34;&gt;
            &lt;li&gt;Ali Dinçer: &lt;a href=&#34;https://downuppopupjs.dincerali.com/&#34;&gt;downupPopup.js&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Kristof Zerbe: &lt;a href=&#34;https://github.com/kristofzerbe/downupPopup.js&#34;&gt;Fork from downupPopup.js (Make Popup Reusable, with PR)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Google: &lt;a href=&#34;https://m3.material.io/components/bottom-sheets/overview&#34;&gt;Material Design 3 - Compontents, Bottom Sheets&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
    </content>
    <category term="UI/UX" scheme="https://kiko.io/categories/UI-UX/" />
    <category term="Publishing" scheme="https://kiko.io/tags/Publishing/" />
    <category term="JSON-LD" scheme="https://kiko.io/tags/JSON-LD/" />
    <category term="Meta" scheme="https://kiko.io/tags/Meta/" />
  </entry>
  <entry>
    <id>https://kiko.io/post/Top-10-Pens-of-Jon-Kantner/</id>
    <title>Top 10 Pens of Jon Kantner</title>
    <published>2023-05-08T13:34:15.000Z</published>
    <updated></updated>
    <link href="https://kiko.io/post/Top-10-Pens-of-Jon-Kantner/"/>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Top-10-Pens-of-Jon-Kantner.thumb.png" height="1200" width="630" />
    <content type="html">&lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Top-10-Pens-of-Jon-Kantner.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;A while ago I posted my &lt;a href=&#34;/post/Favourite-Pens-of-2022/&#34; title=&#34;Favourite Pens of 2022&#34;&gt;favourite pens of 2022&lt;/a&gt;. Many of them came from the pen of &lt;strong&gt;&lt;a href=&#34;https://jonkantner.com/&#34;&gt;John Kantner&lt;/a&gt;&lt;/strong&gt; and that was reason enough for me to highlight his most beautiful works in a post.&lt;/p&gt;
&lt;p&gt;My “Best of Jon Kantner” selection is focused on the usefulness for UI’s to be created, i.e. all these things I urgently need to try out or one or the other will end up in one of my projects. &lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;hr&gt;&lt;br&gt;

&lt;h2 id=&#34;1-Card-Like-Menu&#34;&gt;&lt;a href=&#34;#1-Card-Like-Menu&#34; class=&#34;headerlink&#34; title=&#34;1. Card-Like Menu&#34;&gt;&lt;/a&gt;1. Card-Like Menu&lt;/h2&gt;
    &lt;iframe height=&#34;760&#34; 
        id=&#34;codepen-poLOzKY&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/poLOzKY?height=760&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Card-Like Menu&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-Side-Navigation&#34;&gt;&lt;a href=&#34;#2-Side-Navigation&#34; class=&#34;headerlink&#34; title=&#34;2. Side Navigation&#34;&gt;&lt;/a&gt;2. Side Navigation&lt;/h2&gt;
    &lt;iframe height=&#34;600&#34; 
        id=&#34;codepen-abqwjEz&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/abqwjEz?height=600&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Side Navigation&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;/p&gt;
&lt;h2 id=&#34;3-Lotsa-Notifications&#34;&gt;&lt;a href=&#34;#3-Lotsa-Notifications&#34; class=&#34;headerlink&#34; title=&#34;3. Lotsa Notifications&#34;&gt;&lt;/a&gt;3. Lotsa Notifications&lt;/h2&gt;
    &lt;iframe height=&#34;420&#34; 
        id=&#34;codepen-XWzePgp&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/XWzePgp?height=420&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Lotsa Notifications&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;/p&gt;
&lt;h2 id=&#34;4-Search-Input-Caret-Jump&#34;&gt;&lt;a href=&#34;#4-Search-Input-Caret-Jump&#34; class=&#34;headerlink&#34; title=&#34;4. Search Input Caret Jump&#34;&gt;&lt;/a&gt;4. Search Input Caret Jump&lt;/h2&gt;
    &lt;iframe height=&#34;275&#34; 
        id=&#34;codepen-eYJboxN&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/eYJboxN?height=275&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Search Input Caret Jump&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;/p&gt;
&lt;h2 id=&#34;5-Sliding-Stepper&#34;&gt;&lt;a href=&#34;#5-Sliding-Stepper&#34; class=&#34;headerlink&#34; title=&#34;5. Sliding Stepper&#34;&gt;&lt;/a&gt;5. Sliding Stepper&lt;/h2&gt;
    &lt;iframe height=&#34;275&#34; 
        id=&#34;codepen-oNGzBmm&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/oNGzBmm?height=275&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Sliding Stepper&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;/p&gt;
&lt;h2 id=&#34;6-Passcode-With-Sliding-Cursor&#34;&gt;&lt;a href=&#34;#6-Passcode-With-Sliding-Cursor&#34; class=&#34;headerlink&#34; title=&#34;6. Passcode With Sliding Cursor&#34;&gt;&lt;/a&gt;6. Passcode With Sliding Cursor&lt;/h2&gt;
    &lt;iframe height=&#34;275&#34; 
        id=&#34;codepen-ZERPPda&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/ZERPPda?height=275&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Passcode With Sliding Cursor&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;/p&gt;
&lt;h2 id=&#34;7-Animated-Star-Rating&#34;&gt;&lt;a href=&#34;#7-Animated-Star-Rating&#34; class=&#34;headerlink&#34; title=&#34;7. Animated Star Rating&#34;&gt;&lt;/a&gt;7. Animated Star Rating&lt;/h2&gt;
    &lt;iframe height=&#34;400&#34; 
        id=&#34;codepen-BarvVNa&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/BarvVNa?height=400&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Animated Star Rating&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;/p&gt;
&lt;h2 id=&#34;8-Range-Sliders-With-a-Rolling-Counter&#34;&gt;&lt;a href=&#34;#8-Range-Sliders-With-a-Rolling-Counter&#34; class=&#34;headerlink&#34; title=&#34;8. Range Sliders With a Rolling Counter&#34;&gt;&lt;/a&gt;8. Range Sliders With a Rolling Counter&lt;/h2&gt;
    &lt;iframe height=&#34;400&#34; 
        id=&#34;codepen-yLYZwjY&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/yLYZwjY?height=400&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Range Sliders With a Rolling Counter&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;/p&gt;
&lt;h2 id=&#34;9-Colorful-Theme-Switch&#34;&gt;&lt;a href=&#34;#9-Colorful-Theme-Switch&#34; class=&#34;headerlink&#34; title=&#34;9. Colorful Theme Switch&#34;&gt;&lt;/a&gt;9. Colorful Theme Switch&lt;/h2&gt;
    &lt;iframe height=&#34;275&#34; 
        id=&#34;codepen-eYPYppR&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/eYPYppR?height=275&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Colorful Theme Switch&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;/p&gt;
&lt;h2 id=&#34;10-Animated-Upload-Modal&#34;&gt;&lt;a href=&#34;#10-Animated-Upload-Modal&#34; class=&#34;headerlink&#34; title=&#34;10. Animated Upload Modal&#34;&gt;&lt;/a&gt;10. Animated Upload Modal&lt;/h2&gt;
    &lt;iframe height=&#34;400&#34; 
        id=&#34;codepen-OJEoRwK&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/OJEoRwK?height=400&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Animated Upload Modal&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;/p&gt;
&lt;p&gt;As I said, this is the list of my personal favorite works by Jon. I can only recommend everyone to check out his work on &lt;a href=&#34;https://codepen.io/jkantner&#34;&gt;Codepen&lt;/a&gt;. He really is a UI rockstar …&lt;/p&gt;
</content>
    <category term="UI/UX" scheme="https://kiko.io/categories/UI-UX/" />
    <category term="UI" scheme="https://kiko.io/tags/UI/" />
    <category term="CSS" scheme="https://kiko.io/tags/CSS/" />
    <category term="Collection" scheme="https://kiko.io/tags/Collection/" />
  </entry>
  <entry>
    <id>https://kiko.io/post/Discoveries-24-JavaScript-UI/</id>
    <title>Discoveries #24 - JavaScript &amp; UI</title>
    <published>2023-04-28T14:39:01.000Z</published>
    <updated></updated>
    <link href="https://kiko.io/post/Discoveries-24-JavaScript-UI/"/>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Discoveries-24-JavaScript-UI.thumb.png" height="1200" width="630" />
    <content type="html">&lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Discoveries-24-JavaScript-UI.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;I’m such a UI person. It’s a blast for me to discover and try out new interface components on the web and for the web. Simplicity and a tidy text desert is not my thing. Here are a few JavaScript UI gems I found the other day for you…&lt;/p&gt;

        &lt;ul class=&#34;anchorlist&#34;&gt;
            &lt;li data-anchor=&#34;#frontle-bottomsheet&#34;&gt;Frontle - BottomSheet&lt;/li&gt;&lt;li data-anchor=&#34;#downuppopup-js&#34;&gt;downupPopup.js&lt;/li&gt;&lt;li data-anchor=&#34;#pikaday&#34;&gt;Pikaday&lt;/li&gt;&lt;li data-anchor=&#34;#add-to-calendar-button&#34;&gt;Add to Calendar Button&lt;/li&gt;&lt;li data-anchor=&#34;#tippy-js&#34;&gt;Tippy.js&lt;/li&gt;&lt;li data-anchor=&#34;#responsive-full-page-scroll&#34;&gt;Responsive Full Page Scroll&lt;/li&gt;&lt;li data-anchor=&#34;#lucafalasco-scroll-snap&#34;&gt;lucafalasco/scroll-snap&lt;/li&gt;&lt;li data-anchor=&#34;#bgzy-js&#34;&gt;Bgzy.js&lt;/li&gt;&lt;li data-anchor=&#34;#scrollyvideo-js&#34;&gt;ScrollyVideo.js&lt;/li&gt;&lt;li data-anchor=&#34;#cal-heatmap&#34;&gt;Cal-Heatmap&lt;/li&gt;
        &lt;/ul&gt;
    

&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;


    &lt;hr id=&#34;frontle-bottomsheet&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Frontle - BottomSheet
    &lt;/h2&gt;
    &lt;small&gt;by Frontl (HyeongJun Yun)&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://github.com/Frontle-Foundation/BottomSheet&#34;&gt;https://github.com/Frontle-Foundation/BottomSheet&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;BottomSheet is part of the &lt;a href=&#34;https://frontle.org/&#34; title=&#34;‌&#34;&gt;Frontl&lt;/a&gt; multi-platform SPA framework from South Korea and is a vanilla JavaScript implementation of the Android Bottom Sheet to show options or settings. Very neat and useful for Web Apps.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://github.com/Frontle-Foundation/BottomSheet&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;frontle-bottomsheet.png&#34; alt=&#34;Frontle - BottomSheet&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;downuppopup-js&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      downupPopup.js
    &lt;/h2&gt;
    &lt;small&gt;by Ali Dinçer&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://github.com/ali-dincer/downupPopup.js&#34;&gt;https://github.com/ali-dincer/downupPopup.js&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;&lt;a href=&#34;https://dincerali.com/&#34; title=&#34;‌&#34;&gt;Ali’s&lt;/a&gt; downupPopup is a wonderful UI element for replacing boring dialogs or showing additional information in a sliding panel, similar to the the previous BottomSheet. It masters HTML, forms and can be shown with a duration and full screen.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://github.com/ali-dincer/downupPopup.js&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;downuppopup-js.png&#34; alt=&#34;downupPopup.js&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;pikaday&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Pikaday
    &lt;/h2&gt;
    &lt;small&gt;by David Bushell and Ramiro Rikkert&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://github.com/Pikaday/Pikaday&#34;&gt;https://github.com/Pikaday/Pikaday&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;This date picker is not the fanciest one, but it is very lightweight, has no dependencies and is written in plain JavaScript. The ease of use and the ability to style it however you want, makes it a great little thing.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://github.com/Pikaday/Pikaday&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;pikaday.png&#34; alt=&#34;Pikaday&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;add-to-calendar-button&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Add to Calendar Button
    &lt;/h2&gt;
    &lt;small&gt;by Jens Kürschner&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://add-to-calendar-button.com/&#34;&gt;https://add-to-calendar-button.com/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Letting the user select a date is just the first part of a process when it comes to making appointments. In the second part, the appointment must be added to the user&amp;#39;s own calendar. This button makes it very easy in terms of Outlook, Google Calendar, Yahoo or as an ICS file.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://add-to-calendar-button.com/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;add-to-calendar-button.png&#34; alt=&#34;Add to Calendar Button&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;tippy-js&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Tippy.js
    &lt;/h2&gt;
    &lt;small&gt;by James, somewhere from Australia&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://atomiks.github.io/tippyjs/&#34;&gt;https://atomiks.github.io/tippyjs/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Tooltip libraries really exist a lot. But Tiffy, a side project of Floating UI (now &lt;a href=&#34;https://popper.js.org/&#34; title=&#34;‌&#34;&gt;Popper&lt;/a&gt;), offers so many possibilities that I replace existing ones with it. Animations, Themes, Add-Ons, Plugins, and much more. Even SVG&amp;#39;s are supported. Awesome!&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://atomiks.github.io/tippyjs/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;tippy-js.png&#34; alt=&#34;Tippy.js&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;responsive-full-page-scroll&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Responsive Full Page Scroll
    &lt;/h2&gt;
    &lt;small&gt;by Fabian Graßl&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://github.com/fabeat/responsive-fullpage-scroll&#34;&gt;https://github.com/fabeat/responsive-fullpage-scroll&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;If you throw this library on a bit of HTML you get a wonderful a full screen scrolling page that can be activated and deactivated using a media query. Perfect for marketing pages or photo slideshows.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://github.com/fabeat/responsive-fullpage-scroll&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;responsive-full-page-scroll.png&#34; alt=&#34;Responsive Full Page Scroll&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;lucafalasco-scroll-snap&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      lucafalasco/scroll-snap
    &lt;/h2&gt;
    &lt;small&gt;by Luca Falasco&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://github.com/lucafalasco/scroll-snap&#34;&gt;https://github.com/lucafalasco/scroll-snap&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;This library helps to snap a page when user stops scrolling. It is build on top of the CSS feature &lt;code&gt;scroll-snap&lt;/code&gt;, but offers a customizable configuration and a consistent cross browser behaviour.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://github.com/lucafalasco/scroll-snap&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;lucafalasco-scroll-snap.png&#34; alt=&#34;lucafalasco/scroll-snap&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;bgzy-js&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Bgzy.js
    &lt;/h2&gt;
    &lt;small&gt;by Nino Camdzic&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://ninocamdzic.github.io/bgzy/#&#34;&gt;https://ninocamdzic.github.io/bgzy/#&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Visually appealing backgrounds are sometimes the salt in the soup. Of course, it depends on the photo and so that it does not look boring in the long run, Nico thought, then I&amp;#39;ll change them in adjustable time periods with JavaScript. Great idea and nice implementation.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://ninocamdzic.github.io/bgzy/#&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;bgzy-js.png&#34; alt=&#34;Bgzy.js&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;scrollyvideo-js&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      ScrollyVideo.js
    &lt;/h2&gt;
    &lt;small&gt;by Daniel Kao&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://scrollyvideo.js.org/&#34;&gt;https://scrollyvideo.js.org/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Parallax effects when scrolling through a website are well known by now. But the fact that you can use a video for this was new to me. What an idea! And how cool it looks in the end…&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://scrollyvideo.js.org/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;scrollyvideo-js.png&#34; alt=&#34;ScrollyVideo.js&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;cal-heatmap&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Cal-Heatmap
    &lt;/h2&gt;
    &lt;small&gt;by Wan from Dubai&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://cal-heatmap.com/&#34;&gt;https://cal-heatmap.com/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Anyone who has ever been on GitHub knows the heatmaps that show when and how often commits have taken place. But this kind of chart can be used for other things, Wan probably thought and made a library out of it.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://cal-heatmap.com/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;cal-heatmap.png&#34; alt=&#34;Cal-Heatmap&#34; /&gt;
    &lt;/a&gt;
  

</content>
    <category term="Misc" scheme="https://kiko.io/categories/Misc/" />
    <category term="Collection" scheme="https://kiko.io/tags/Collection/" />
  </entry>
  <entry>
    <id>https://kiko.io/post/Breton-Presets-for-Lightroom/</id>
    <title>Breton Presets for Lightroom</title>
    <published>2023-03-10T11:04:05.000Z</published>
    <updated></updated>
    <link href="https://kiko.io/post/Breton-Presets-for-Lightroom/"/>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Breton-Presets-for-Lightroom.thumb.png" height="1200" width="630" />
    <content type="html">&lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Breton-Presets-for-Lightroom.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;‘Le Bretagne’ (Brittany) is one of the most beautiful and historic parts of Europe and always worth a visit. It combines the sometimes rugged English flair with the art of living of France, both scenically and in the architecture and the way people live there. My wife likes all things English and I am a friend of the french ‘Savoir Vivre’, and we were able to combine the two beautifully on a trip to Saint-Malo and Jersey. It was a photographers dream…&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;hr&gt;
&lt;h2 id=&#34;Breton-Glow&#34;&gt;&lt;a href=&#34;#Breton-Glow&#34; class=&#34;headerlink&#34; title=&#34;Breton Glow&#34;&gt;&lt;/a&gt;Breton Glow&lt;/h2&gt;&lt;p&gt;The sunsets off Saint-Malo are wonderful. The water of the English Channel glows and in the sky the silhuettes of the paragliders stand out, pulling the sportsmen over the rippling water. You can sit on the waterfront for hours and still not get enough of it.&lt;/p&gt;

    &lt;div id=&#34;image-compare-bfnrpu&#34;&gt;
      &lt;img class=&#34;image-compare image-original&#34; src=&#34;/post/Breton-Presets-for-Lightroom/22-08 Bretagne-Jersey-0218_ORIGINAL.jpg&#34; alt=&#34;&#34; /&gt;
      &lt;img class=&#34;image-compare image-modified&#34; src=&#34;/post/Breton-Presets-for-Lightroom/22-08 Bretagne-Jersey-0218_PRESET-Glow.jpg&#34; alt=&#34;&#34; /&gt;
    &lt;/div&gt;
    
  


    &lt;p class=&#34;download-link&#34;&gt;
      &lt;a class=&#34;button&#34; href=&#34;Bretagne Glow.xmp&#34; download&gt;
        Download Lightroom Preset &lt;strong&gt;Bretagne Glow.xmp&lt;/strong&gt;
      &lt;/a&gt;
    &lt;/p&gt;
    

&lt;hr&gt;
&lt;h2 id=&#34;Breton-Sundown&#34;&gt;&lt;a href=&#34;#Breton-Sundown&#34; class=&#34;headerlink&#34; title=&#34;Breton Sundown&#34;&gt;&lt;/a&gt;Breton Sundown&lt;/h2&gt;&lt;p&gt;Having good and clear weather here, as in the British Isles, is not a given. The evenings are all the more beautiful when it is like this and the small islands off the coast are bathed in a warm orange.&lt;/p&gt;

    &lt;div id=&#34;image-compare-b853ju&#34;&gt;
      &lt;img class=&#34;image-compare image-original&#34; src=&#34;/post/Breton-Presets-for-Lightroom/22-08 Bretagne-Jersey-0582_ORIGINAL.jpg&#34; alt=&#34;&#34; /&gt;
      &lt;img class=&#34;image-compare image-modified&#34; src=&#34;/post/Breton-Presets-for-Lightroom/22-08 Bretagne-Jersey-0582_PRESET_Sundown.jpg&#34; alt=&#34;&#34; /&gt;
    &lt;/div&gt;
    
  


    &lt;p class=&#34;download-link&#34;&gt;
      &lt;a class=&#34;button&#34; href=&#34;Bretagne Sundown.xmp&#34; download&gt;
        Download Lightroom Preset &lt;strong&gt;Bretagne Sundown.xmp&lt;/strong&gt;
      &lt;/a&gt;
    &lt;/p&gt;
    

&lt;hr&gt;
&lt;h2 id=&#34;Breton-Color&#34;&gt;&lt;a href=&#34;#Breton-Color&#34; class=&#34;headerlink&#34; title=&#34;Breton Color&#34;&gt;&lt;/a&gt;Breton Color&lt;/h2&gt;&lt;p&gt;I love colors, but rarely does the camera manage to capture that magic the way I feel it. And Brittany has beautiful colors. Be it the famous Mont Saint-Michel or a cornfield … :)&lt;/p&gt;

    &lt;div id=&#34;image-compare-lvdlmw&#34;&gt;
      &lt;img class=&#34;image-compare image-original&#34; src=&#34;/post/Breton-Presets-for-Lightroom/22-08 Bretagne-Jersey-0246_ORIGINAL.jpg&#34; alt=&#34;&#34; /&gt;
      &lt;img class=&#34;image-compare image-modified&#34; src=&#34;/post/Breton-Presets-for-Lightroom/22-08 Bretagne-Jersey-0246_PRESET-Color.jpg&#34; alt=&#34;&#34; /&gt;
    &lt;/div&gt;
    
  


    &lt;p class=&#34;download-link&#34;&gt;
      &lt;a class=&#34;button&#34; href=&#34;Bretagne Color.xmp&#34; download&gt;
        Download Lightroom Preset &lt;strong&gt;Bretagne Color.xmp&lt;/strong&gt;
      &lt;/a&gt;
    &lt;/p&gt;
    

&lt;hr&gt;
&lt;h2 id=&#34;Breton-Sea-Circle&#34;&gt;&lt;a href=&#34;#Breton-Sea-Circle&#34; class=&#34;headerlink&#34; title=&#34;Breton Sea Circle&#34;&gt;&lt;/a&gt;Breton Sea Circle&lt;/h2&gt;&lt;p&gt;Oysters from Cancale are not only famous in the region, but far beyond. A product that tastes just like the sea from which it comes looks: Awesome.&lt;/p&gt;

    &lt;div id=&#34;image-compare-3jes77&#34;&gt;
      &lt;img class=&#34;image-compare image-original&#34; src=&#34;/post/Breton-Presets-for-Lightroom/22-08 Bretagne-Jersey-0761_ORIGINAL.jpg&#34; alt=&#34;&#34; /&gt;
      &lt;img class=&#34;image-compare image-modified&#34; src=&#34;/post/Breton-Presets-for-Lightroom/22-08 Bretagne-Jersey-0761_PRESET-SeaCircle.jpg&#34; alt=&#34;&#34; /&gt;
    &lt;/div&gt;
    
  


    &lt;p class=&#34;download-link&#34;&gt;
      &lt;a class=&#34;button&#34; href=&#34;Bretagne Sea Circle.xmp&#34; download&gt;
        Download Lightroom Preset &lt;strong&gt;Bretagne Sea Circle.xmp&lt;/strong&gt;
      &lt;/a&gt;
    &lt;/p&gt;
    

&lt;hr&gt;
&lt;h2 id=&#34;Breton-Beach&#34;&gt;&lt;a href=&#34;#Breton-Beach&#34; class=&#34;headerlink&#34; title=&#34;Breton Beach&#34;&gt;&lt;/a&gt;Breton Beach&lt;/h2&gt;&lt;p&gt;The beach in Saint-Malo is 3 kilometers long and it is fascinating to observe how one of the highest tides in Europe swallows it in no time and later releases it cleaned.&lt;/p&gt;

    &lt;div id=&#34;image-compare-6f70hb&#34;&gt;
      &lt;img class=&#34;image-compare image-original&#34; src=&#34;/post/Breton-Presets-for-Lightroom/22-08 Bretagne-Jersey-1074_ORIGINAL.jpg&#34; alt=&#34;&#34; /&gt;
      &lt;img class=&#34;image-compare image-modified&#34; src=&#34;/post/Breton-Presets-for-Lightroom/22-08 Bretagne-Jersey-1074_PRESET-Beach.jpg&#34; alt=&#34;&#34; /&gt;
    &lt;/div&gt;
    
  


    &lt;p class=&#34;download-link&#34;&gt;
      &lt;a class=&#34;button&#34; href=&#34;Bretagne Beach.xmp&#34; download&gt;
        Download Lightroom Preset &lt;strong&gt;Bretagne Beach.xmp&lt;/strong&gt;
      &lt;/a&gt;
    &lt;/p&gt;
    
</content>
    <category term="Photo-Editing" scheme="https://kiko.io/categories/Photo-Editing/" />
    <category term="Lightroom" scheme="https://kiko.io/tags/Lightroom/" />
    <category term="Presets" scheme="https://kiko.io/tags/Presets/" />
  </entry>
  <entry>
    <id>https://kiko.io/post/Discoveries-23-UI-CSS/</id>
    <title>Discoveries #23 -  UI/CSS</title>
    <published>2023-02-12T10:45:10.000Z</published>
    <updated></updated>
    <link href="https://kiko.io/post/Discoveries-23-UI-CSS/"/>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Discoveries-23-UI-CSS.thumb.png" height="1200" width="630" />
    <content type="html">&lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Discoveries-23-UI-CSS.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;As a visual person, I’m always thrilled when I come across small but subtle tips, tricks or even entire solutions that lift my understanding of what can be done with CSS to new heights. Of course, this month &lt;code&gt;:has()&lt;/code&gt; is once again one of them, but also once again contributions from &lt;a href=&#34;https://www.bram.us/&#34;&gt;Bramus van Damme&lt;/a&gt; and &lt;a href=&#34;https://ishadeed.com/&#34;&gt;Ahmad Shadeed&lt;/a&gt;, whose posts I read without exception because they are both so good at what they do.&lt;/p&gt;

        &lt;ul class=&#34;anchorlist&#34;&gt;
            &lt;li data-anchor=&#34;#tree-views-in-css&#34;&gt;Tree views in CSS&lt;/li&gt;&lt;li data-anchor=&#34;#scroll-shadows-with-javascript&#34;&gt;Scroll Shadows With JavaScript&lt;/li&gt;&lt;li data-anchor=&#34;#css-mirror-editing-in-edge-devtools-for-vs-code&#34;&gt;CSS Mirror Editing in Edge DevTools for VS Code&lt;/li&gt;&lt;li data-anchor=&#34;#prevent-scroll-chaining-with-overscroll-behavior&#34;&gt;Prevent Scroll Chaining With Overscroll Behavior&lt;/li&gt;&lt;li data-anchor=&#34;#display-content-in-the-title-bar-microsoft-edge-development&#34;&gt;Display content in the title bar - Microsoft Edge Development&lt;/li&gt;&lt;li data-anchor=&#34;#the-large-small-and-dynamic-viewport-units&#34;&gt;The large, small, and dynamic viewport units&lt;/li&gt;&lt;li data-anchor=&#34;#an-interactive-guide-to-flexbox-in-css&#34;&gt;An Interactive Guide to Flexbox in CSS&lt;/li&gt;&lt;li data-anchor=&#34;#flexbox-dynamic-line-separator&#34;&gt;Flexbox Dynamic Line Separator&lt;/li&gt;&lt;li data-anchor=&#34;#style-a-parent-element-based-on-its-number-of-children-using-css-has&#34;&gt;Style a parent element based on its number of children using CSS :has()&lt;/li&gt;&lt;li data-anchor=&#34;#has-the-family-selector&#34;&gt;:has(): the family selector&lt;/li&gt;
        &lt;/ul&gt;
    

&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;


    &lt;hr id=&#34;tree-views-in-css&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Tree views in CSS
    &lt;/h2&gt;
    &lt;small&gt;by Kate Rose Morley&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://iamkate.com/code/tree-views/&#34;&gt;https://iamkate.com/code/tree-views/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Kate shows us how to create a tree view as collapsible list, created using only html and css, without the need for JavaScript&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://iamkate.com/code/tree-views/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;tree-views-in-css.png&#34; alt=&#34;Tree views in CSS&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;scroll-shadows-with-javascript&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Scroll Shadows With JavaScript
    &lt;/h2&gt;
    &lt;small&gt;by Chris Coyier&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://css-tricks.com/scroll-shadows-with-javascript/&#34;&gt;https://css-tricks.com/scroll-shadows-with-javascript/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;A good scrollable design shows the user if he can scroll further or not. Chris has an approach on that with pure CSS.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://css-tricks.com/scroll-shadows-with-javascript/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;scroll-shadows-with-javascript.png&#34; alt=&#34;Scroll Shadows With JavaScript&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;css-mirror-editing-in-edge-devtools-for-vs-code&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      CSS Mirror Editing in Edge DevTools for VS Code
    &lt;/h2&gt;
    &lt;small&gt;by Christian Heilmann&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://christianheilmann.com/2021/09/16/css-mirror-editing-in-edge-devtools-for-vs-code/&#34;&gt;https://christianheilmann.com/2021/09/16/css-mirror-editing-in-edge-devtools-for-vs-code/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;How often do you fiddle around with CSS in Chrome&amp;#39;s DevTools and copy the stuff back to your code? Christian shows how Mirror Editing works.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://christianheilmann.com/2021/09/16/css-mirror-editing-in-edge-devtools-for-vs-code/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;css-mirror-editing-in-edge-devtools-for-vs-code.png&#34; alt=&#34;CSS Mirror Editing in Edge DevTools for VS Code&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;prevent-scroll-chaining-with-overscroll-behavior&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Prevent Scroll Chaining With Overscroll Behavior
    &lt;/h2&gt;
    &lt;small&gt;by Ahmad Shadeed&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://ishadeed.com/article/prevent-scroll-chaining-overscroll-behavior/&#34;&gt;https://ishadeed.com/article/prevent-scroll-chaining-overscroll-behavior/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Dealing with scroll boundaries when you have many scrolling boxes on a page is a mess, until you have read Ahmad&amp;#39;s advice regarding the use of &amp;#39;overscroll-behavior&amp;#39;&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://ishadeed.com/article/prevent-scroll-chaining-overscroll-behavior/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;prevent-scroll-chaining-with-overscroll-behavior.png&#34; alt=&#34;Prevent Scroll Chaining With Overscroll Behavior&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;display-content-in-the-title-bar-microsoft-edge-development&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Display content in the title bar - Microsoft Edge Development
    &lt;/h2&gt;
    &lt;small&gt;by Microsoft Learn&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/microsoft-edge/progressive-web-apps-chromium/how-to/window-controls-overlay&#34;&gt;https://learn.microsoft.com/en-us/microsoft-edge/progressive-web-apps-chromium/how-to/window-controls-overlay&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;In PWAs, at least on the desktop, a lot of space is wasted with the title bar of the window. The use of &amp;#39;display_override&amp;#39; should change that.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://learn.microsoft.com/en-us/microsoft-edge/progressive-web-apps-chromium/how-to/window-controls-overlay&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;display-content-in-the-title-bar-microsoft-edge-development.png&#34; alt=&#34;Display content in the title bar - Microsoft Edge Development&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;the-large-small-and-dynamic-viewport-units&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      The large, small, and dynamic viewport units
    &lt;/h2&gt;
    &lt;small&gt;by Bramus Van Damme&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://web.dev/viewport-units/&#34;&gt;https://web.dev/viewport-units/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;The most used device on the Internet has long been the smartphone, but the visible area is trimmed by the browsers there from the necessary dynamic toolbars. To address this, there are new size units.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://web.dev/viewport-units/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;the-large-small-and-dynamic-viewport-units.png&#34; alt=&#34;The large, small, and dynamic viewport units&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;an-interactive-guide-to-flexbox-in-css&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      An Interactive Guide to Flexbox in CSS
    &lt;/h2&gt;
    &lt;small&gt;by Josh Comeau&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://www.joshwcomeau.com/css/interactive-guide-to-flexbox/&#34;&gt;https://www.joshwcomeau.com/css/interactive-guide-to-flexbox/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;There are plenty of Flexbox tutorials, cheat sheets and generators, but Josh turns it into an interactive learning lesson. Very memorable.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://www.joshwcomeau.com/css/interactive-guide-to-flexbox/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;an-interactive-guide-to-flexbox-in-css.png&#34; alt=&#34;An Interactive Guide to Flexbox in CSS&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;flexbox-dynamic-line-separator&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Flexbox Dynamic Line Separator
    &lt;/h2&gt;
    &lt;small&gt;by Ahmad Shadeed&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://ishadeed.com/article/flexbox-separator/&#34;&gt;https://ishadeed.com/article/flexbox-separator/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Flexbox again and Ahmad again … If you need separator lines between boxes for different devices, here&amp;#39;s how the can be done nice and easy.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://ishadeed.com/article/flexbox-separator/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;flexbox-dynamic-line-separator.png&#34; alt=&#34;Flexbox Dynamic Line Separator&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;style-a-parent-element-based-on-its-number-of-children-using-css-has&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Style a parent element based on its number of children using CSS :has()
    &lt;/h2&gt;
    &lt;small&gt;by Bramus Van Damme&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://www.bram.us/2022/11/17/style-a-parent-element-based-on-its-number-of-children-using-css-has/&#34;&gt;https://www.bram.us/2022/11/17/style-a-parent-element-based-on-its-number-of-children-using-css-has/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;:has() is the hottest kid in town right now, because it allows the long-cherished dream of many web developers to style a parent element depending on his children. Bramus shows how…&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://www.bram.us/2022/11/17/style-a-parent-element-based-on-its-number-of-children-using-css-has/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;style-a-parent-element-based-on-its-number-of-children-using-css-has.png&#34; alt=&#34;Style a parent element based on its number of children using CSS :has()&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;has-the-family-selector&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      :has(): the family selector
    &lt;/h2&gt;
    &lt;small&gt;by Jhey Tompkins&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://developer.chrome.com/blog/has-m105/&#34;&gt;https://developer.chrome.com/blog/has-m105/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;As :has() is so hot, it&amp;#39;s good to have another resource talking about. Jhey has collected so many examples that hardly any questions remain open.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://developer.chrome.com/blog/has-m105/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;has-the-family-selector.png&#34; alt=&#34;:has(): the family selector&#34; /&gt;
    &lt;/a&gt;
  
</content>
    <category term="Misc" scheme="https://kiko.io/categories/Misc/" />
    <category term="Collection" scheme="https://kiko.io/tags/Collection/" />
  </entry>
  <entry>
    <id>https://kiko.io/post/Provide-Blog-Metadata-via-JSON-LD/</id>
    <title>Provide Blog Metadata via JSON-LD</title>
    <published>2023-02-09T23:00:00.000Z</published>
    <updated></updated>
    <link href="https://kiko.io/post/Provide-Blog-Metadata-via-JSON-LD/"/>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Provide-Blog-Metadata-via-JSON-LD.thumb.png" height="1200" width="630" />
    <content type="html">&lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Provide-Blog-Metadata-via-JSON-LD.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;Chris Coyier’s post “&lt;a href=&#34;https://chriscoyier.net/2023/01/28/open-graph-blues/&#34;&gt;Open Graph Blues&lt;/a&gt;“ got me thinking that my blog’s metadata, which are used by Google among others to index my pages, aren’t really at the cutting edge anymore. I took the markup of the individual elements of the pages via &lt;a href=&#34;https://schema.org/&#34;&gt;schema.org&lt;/a&gt; Microdata attributes from the standard Hexo template years ago and always adjusted it by value, but never questioned that there are more modern variants to provide the metadata.&lt;/p&gt;
&lt;p&gt;It’s Ok for Google to use Microdata attributes, but the HTML code of my templates is getting more and more opaque, because next to these stick to the tags also those for the Indieweb, classes for CSS and last but not least those for the own indexing via Pagefind. There becomes from a simple&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;article&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;Title of my latest blog post&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt; ... &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;article&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;quickly becomes a …&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;article&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;article-type-post h-entry&amp;quot;&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;data-pagefind-body&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;data-pagefind-meta&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;type:Article&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;itemscope&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;itemprop&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;blogPost&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;article-title p-name&amp;quot;&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;itemprop&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;Title of my latest blog post&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt; ... &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;p&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;article&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Lots of textual overhead and the hardest part is maintaining it over the long term. Better would be a complete search engine description in the header of a page, where also the other meta information is available. In one place and not spread all over the HTML code. &lt;strong&gt;JSON-LD to the rescue&lt;/strong&gt;…&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;hr&gt;
&lt;h2 id=&#34;Structured-Meta-Data&#34;&gt;&lt;a href=&#34;#Structured-Meta-Data&#34; class=&#34;headerlink&#34; title=&#34;Structured Meta Data&#34;&gt;&lt;/a&gt;Structured Meta Data&lt;/h2&gt;&lt;p&gt;Google has published tons of information in its &lt;a href=&#34;https://developers.google.com/search/docs/appearance/structured-data/intro-structured-data&#34;&gt;Search Central&lt;/a&gt; on how to place metadata on your page to be found more easily in the index. You can also see that they are maintained by the update date of individual pages, for example “&lt;em&gt;Last updated 2023-01-26 UTC&lt;/em&gt;“. End of last week. That’s up to date, fine.&lt;/p&gt;
&lt;p&gt;Of course, they also show how to use Microdata, but recommended is the use of &lt;a href=&#34;https://json-ld.org/&#34;&gt;JSON-LD&lt;/a&gt;, a structured and centralized inclusion of the required information via a SCRIPT tag in the header of the page. Thereby information about the &lt;strong&gt;website&lt;/strong&gt; in general, the &lt;strong&gt;author&lt;/strong&gt;, the &lt;strong&gt;organization&lt;/strong&gt; behind it and the actual &lt;strong&gt;article&lt;/strong&gt; page can be combined separately in one piece of JSON-LD code.&lt;/p&gt;

    &lt;div class=&#34;alertbox alertbox-exclamation&#34;&gt;
      &lt;p&gt;Google’s solution is based on schema.org, but they have picked only what is necessary for them, which means: they deal only with a subset of the schema.org types.&lt;/p&gt;

    &lt;/div&gt;
  

&lt;p&gt;Since it is somewhat cumbersome to write correct JSON-LD by hand, there are of course online editors for it, e.g. within the &lt;a href=&#34;https://webcode.tools/generators/structured-data&#34;&gt;web code tools&lt;/a&gt; or &lt;a href=&#34;https://technicalseo.com/tools/schema-markup-generator/&#34;&gt;Merkle&lt;/a&gt;. But these generators unfortunately do not map all the possibilities and useful entries, so they can only generate general templates to be elaborated. Moreover, you can use the JSON-LD code from this article as a basis for your solution, because it covers the most important aspects.&lt;/p&gt;
&lt;p&gt;In the following I first describe the general content of the individual JSON-LD blocks and then how to assemble them, so that it makes sense for the search engine.&lt;/p&gt;
&lt;h3 id=&#34;Author&#34;&gt;&lt;a href=&#34;#Author&#34; class=&#34;headerlink&#34; title=&#34;Author&#34;&gt;&lt;/a&gt;Author&lt;/h3&gt;&lt;p&gt;First of all, this code is about me myself and I…&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;@type&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Person&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/#person&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Kristof Zerbe&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/about&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;image&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/images/kristof-zerbe.png&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;sameAs&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;https://indieweb.social/@kiko&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;https://github.com/kristofzerbe&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;https://500px.com/p/kikon&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;]&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


    &lt;div class=&#34;alertbox alertbox-info&#34;&gt;
      &lt;p&gt;It is advisable to include so called &lt;strong&gt;Node Identifiers&lt;/strong&gt; (&lt;code&gt;@id&lt;/code&gt;) in order to reuse certain information later on as a reference and prevent repeating data. These &lt;a href=&#34;https://schema.org/docs/datamodel.html#identifierBg&#34;&gt;identifiers&lt;/a&gt; are canonical URL&amp;#x2F;URI representations.&lt;/p&gt;

    &lt;/div&gt;
  

&lt;h3 id=&#34;Organization&#34;&gt;&lt;a href=&#34;#Organization&#34; class=&#34;headerlink&#34; title=&#34;Organization&#34;&gt;&lt;/a&gt;Organization&lt;/h3&gt;&lt;p&gt;Most blogs are run by individuals and not necessarily by organizations, so you might think this area would not be interesting, but it is for a reason: only here you can deposit the link to a logo of your blog, which can then be displayed in the search.&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;@type&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Organization&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/#organization&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;kiko.io&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;logo&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/images/apple-touch-icon.png&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;Website&#34;&gt;&lt;a href=&#34;#Website&#34; class=&#34;headerlink&#34; title=&#34;Website&#34;&gt;&lt;/a&gt;Website&lt;/h3&gt;&lt;p&gt;The JSON-LD block related to this website itself looks like this:&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;@type&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;WebSite&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/#website&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;kiko.io&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Blog about memorable tech stuff by Kristof Zerbe&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;inLanguage&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;en-US&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;publisher&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/#organization&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;potentialAction&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;@type&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;SearchAction&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;target&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;&amp;quot;@type&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;EntryPoint&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;&amp;quot;urlTemplate&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/search/?q=&amp;#123;searchTerm&amp;#125;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;query-input&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;required name=searchTerm&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Remarkable in this block is the &lt;code&gt;potentialAction&lt;/code&gt;, which specifies the possibility to let the search engine (Google, whatelse) integrate a Sitelinks Search Box, a search box inside the result list, as described &lt;a href=&#34;https://developers.google.com/search/docs/appearance/structured-data/sitelinks-searchbox&#34;&gt;here&lt;/a&gt;. There is a shorthand format for this and some generators like Merkle are using it, but it is not recommended, because it’s non-standard.&lt;/p&gt;
&lt;h3 id=&#34;Page-Images&#34;&gt;&lt;a href=&#34;#Page-Images&#34; class=&#34;headerlink&#34; title=&#34;(Page) Images&#34;&gt;&lt;/a&gt;(Page) Images&lt;/h3&gt;&lt;p&gt;I use my own photographs on every page as header images and to provide some additional information on these, there is a JSON-LD block for the image I use.&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;@type&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;ImageObject&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io#photo/D70_9216&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;caption&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Broken Onion&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/photos/normal/D70_9216.jpg&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;contentUrl&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/photos/normal/D70_9216.jpg&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;license&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://creativecommons.org/licenses/by-sa/4.0/&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;acquireLicensePage&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/photos&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;creditText&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Kristof Zerbe&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;copyrightNotice&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Kristof Zerbe (CC BY-SA 4.0)&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;creator&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/#person&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;For better recognition of my posts (currently articles only), I generate a special image for each post for the social media platforms. It is based on the  photo associated with the post and includes it’s title and subtitle in addition to the logo. How I generate these things can be read in my post &lt;a href=&#34;/post/Generate-Social-Media-Images-Automatically/&#34; title=&#34;Generate Social Media Images Automatically&#34;&gt;Generate Social Media Images Automatically&lt;/a&gt;. For this image, there is a second JSON-LD block that I can reference later on:&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;@type&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;ImageObject&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io#image/Provide-Blog-Metadata-via-JSON-LD&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/images/social-media/Provide-Blog-Metadata-via-JSON-LD.png&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;contentUrl&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/images/social-media/Provide-Blog-Metadata-via-JSON-LD.png&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;creator&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/#person&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;/images/social-media/Provide-Blog-Metadata-via-JSON-LD.thumb.png&#34; alt=&#34;Social Media image of this post&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;Webpage&#34;&gt;&lt;a href=&#34;#Webpage&#34; class=&#34;headerlink&#34; title=&#34;Webpage&#34;&gt;&lt;/a&gt;Webpage&lt;/h3&gt;&lt;p&gt;The previously described JSON-LD blocks are basically just a preparation for the description of the individual pages that will be indexed by the search engine. The following block now describes a page itself and includes the previously described blocks by referencing the &lt;code&gt;@id&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;@type&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;WebPage&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/post/Provide-Blog-Metadata-via-JSON-LD&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/post/Provide-Blog-Metadata-via-JSON-LD&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Provide Blog Metadata via JSON-LD&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;isPartOf&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/#website&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;description&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Centralization of a website&amp;#x27;s schema.org data in the HEAD instead of everywhere in the HTML&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;inLanguage&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;en-US&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;primaryImageOfPage&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io#photo/D70_9216&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;image&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io#photo/D70_9216&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;Article&#34;&gt;&lt;a href=&#34;#Article&#34; class=&#34;headerlink&#34; title=&#34;Article&#34;&gt;&lt;/a&gt;Article&lt;/h3&gt;&lt;p&gt;In addition to the previous description of a web page, the following block is a more detailed description of the page as an article or blog post.&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;@type&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Article&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/post/Provide-Blog-Metadata-via-JSON-LD#article&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;mainEntityOfPage&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/post/Provide-Blog-Metadata-via-JSON-LD&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;headline&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Provide Blog Metadata via JSON-LD&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;datePublished&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;2023-02-02T12:00:00+00:00&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;dateModified&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;2023-02-02T12:00:00+00:00&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;image&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io#image/Provide-Blog-Metadata-via-JSON-LD&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;author&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/#person&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;publisher&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;@id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://kiko.io/#organization&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;As described earlier, the identifiers defined in the other blocks are used for referencing the &lt;code&gt;author&lt;/code&gt; and the &lt;code&gt;publisher&lt;/code&gt;, as I did it in the block &lt;code&gt;website&lt;/code&gt;. At first glance, this information appears to be duplicated and I am currently not sure if it is really needed.&lt;br&gt;&lt;code&gt;mainEntityOfPage&lt;/code&gt; makes clear, that this article is the main entity for that web page.&lt;br&gt;The image of the article will be the social media image defined in the second &lt;code&gt;ImageObject&lt;/code&gt; block.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;Assembling-the-blocks&#34;&gt;&lt;a href=&#34;#Assembling-the-blocks&#34; class=&#34;headerlink&#34; title=&#34;Assembling the blocks&#34;&gt;&lt;/a&gt;Assembling the blocks&lt;/h2&gt;&lt;p&gt;Generally, JSON-LD data is included in a page via a &lt;code&gt;script&lt;/code&gt; tag. You can either output each individual block separately or together within a so called &lt;strong&gt;graph&lt;/strong&gt;. In both cases, the leading specification of the &lt;strong&gt;context&lt;/strong&gt; is necessary.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Separate&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;application/ld+json&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;@context&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;http://schema.org/&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    ... rest &lt;span class=&#34;keyword&#34;&gt;of&lt;/span&gt; the block&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;application/ld+json&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt; ... &lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;Together&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;application/ld+json&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;@context&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;http://schema.org/&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;@graph&amp;quot;&lt;/span&gt;: &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    [&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      ... all needed blocks &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; hierarchy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    ]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Since this is probably the most common and also the most space-saving way, I have chosen the graph.&lt;/p&gt;
&lt;p&gt;When arranging the blocks it is useful to keep the &lt;strong&gt;hierarchy, from specific to general&lt;/strong&gt;. Here is a schematic example of an &lt;strong&gt;article&lt;/strong&gt;:&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;application/ld+json&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;@context&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;http://schema.org/&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;@graph&amp;quot;&lt;/span&gt;: &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    [&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &amp;#123; ... &lt;span class=&#34;title class_&#34;&gt;Article&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &amp;#123; ... &lt;span class=&#34;title class_&#34;&gt;WebPage&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &amp;#123; ... &lt;span class=&#34;title class_&#34;&gt;ImageObject&lt;/span&gt; (&lt;span class=&#34;title class_&#34;&gt;Social&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Media&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Image&lt;/span&gt;) &amp;#125;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &amp;#123; ... &lt;span class=&#34;title class_&#34;&gt;ImageObject&lt;/span&gt; (&lt;span class=&#34;title class_&#34;&gt;Photo&lt;/span&gt;) &amp;#125;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &amp;#123; ... &lt;span class=&#34;title class_&#34;&gt;WebSite&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &amp;#123; ... &lt;span class=&#34;title class_&#34;&gt;Organization&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &amp;#123; ... &lt;span class=&#34;title class_&#34;&gt;Person&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    ]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;On all pages that are not an article, of course, the &lt;em&gt;Article&lt;/em&gt; and the &lt;em&gt;ImageObject (Social Media Image)&lt;/em&gt; blocks are not necessary. Here is the sample for an ordinary &lt;strong&gt;page&lt;/strong&gt;:&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;application/ld+json&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;@context&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;http://schema.org/&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;string&#34;&gt;&amp;quot;@graph&amp;quot;&lt;/span&gt;: &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    [&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &amp;#123; ... &lt;span class=&#34;title class_&#34;&gt;WebPage&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &amp;#123; ... &lt;span class=&#34;title class_&#34;&gt;ImageObject&lt;/span&gt; (&lt;span class=&#34;title class_&#34;&gt;Photo&lt;/span&gt;) &amp;#125;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &amp;#123; ... &lt;span class=&#34;title class_&#34;&gt;WebSite&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &amp;#123; ... &lt;span class=&#34;title class_&#34;&gt;Organization&lt;/span&gt; &amp;#125;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;      &amp;#123; ... &lt;span class=&#34;title class_&#34;&gt;Person&lt;/span&gt; &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    ]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h2 id=&#34;Generation&#34;&gt;&lt;a href=&#34;#Generation&#34; class=&#34;headerlink&#34; title=&#34;Generation&#34;&gt;&lt;/a&gt;Generation&lt;/h2&gt;&lt;p&gt;Since my blog is based on SSG &lt;a href=&#34;https://hexo.io/&#34;&gt;Hexo&lt;/a&gt;, I have all the data and capabilities to have the JSON-LD data of a page automatically generated. I don&amp;#96;t want to go into too much depth here about how I implemented this, but in general there is an EJS file for each block that renders the required JSON-LD code via the available configuration and page data stored and passed in a META object. Through various wrappers, these are then included in the &lt;code&gt;head.ejs&lt;/code&gt;. I have currently three of them:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;json-ld-page.ejs&lt;/code&gt; … for all pages, except the other two below&lt;/li&gt;
&lt;li&gt;&lt;code&gt;json-ld-article.ejs&lt;/code&gt; … for articles (normal &lt;a href=&#34;/archives&#34;&gt;kiko.io Posts&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;json-ld-blogposting.ejs&lt;/code&gt; … for notes (see &lt;a href=&#34;/notes&#34;&gt;kiko.io Notes&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;json-ld-article.ejs&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;quot;@context&amp;quot;&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;http://schema.org/&amp;quot;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;string&#34;&gt;&amp;quot;@graph&amp;quot;&lt;/span&gt;: &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  [&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;%- &lt;span class=&#34;title function_&#34;&gt;partial&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;_partial/meta/_article&amp;#x27;&lt;/span&gt;) %&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;%- &lt;span class=&#34;title function_&#34;&gt;partial&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;_partial/meta/_webpage&amp;#x27;&lt;/span&gt;) %&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;%- &lt;span class=&#34;title function_&#34;&gt;partial&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;_partial/meta/_image&amp;#x27;&lt;/span&gt;) %&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;%- &lt;span class=&#34;title function_&#34;&gt;partial&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;_partial/meta/_photo&amp;#x27;&lt;/span&gt;) %&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;%- &lt;span class=&#34;title function_&#34;&gt;partial&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;_partial/meta/_website&amp;#x27;&lt;/span&gt;) %&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;%- &lt;span class=&#34;title function_&#34;&gt;partial&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;_partial/meta/_organization&amp;#x27;&lt;/span&gt;) %&amp;gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;lt;%- &lt;span class=&#34;title function_&#34;&gt;partial&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;_partial/meta/_author&amp;#x27;&lt;/span&gt;) %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  ]&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;head.ejs&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%#!-- &lt;span class=&#34;title class_&#34;&gt;JSON&lt;/span&gt;-&lt;span class=&#34;variable constant_&#34;&gt;LD&lt;/span&gt; (schema.&lt;span class=&#34;property&#34;&gt;org&lt;/span&gt;) &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Google&lt;/span&gt; --%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;%&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; jsonPartial = &lt;span class=&#34;string&#34;&gt;&amp;quot;json-ld-&amp;quot;&lt;/span&gt; + meta.&lt;span class=&#34;property&#34;&gt;type&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; jsonLD = &lt;span class=&#34;title function_&#34;&gt;partial&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;_partial/meta/&amp;#x27;&lt;/span&gt; + jsonPartial, &amp;#123; &lt;span class=&#34;attr&#34;&gt;meta&lt;/span&gt;: meta &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  jsonLD = &lt;span class=&#34;title class_&#34;&gt;JSON&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;stringify&lt;/span&gt;(&lt;span class=&#34;title class_&#34;&gt;JSON&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;parse&lt;/span&gt;(jsonLD));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;application/ld+json&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&amp;lt;%- jsonLD %&amp;gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;The last line in the JavaScript ensures, that the produced JSON is compacted to one single line … easy, by converting the string into an object and back to a string.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;Test-the-JSON-LD&#34;&gt;&lt;a href=&#34;#Test-the-JSON-LD&#34; class=&#34;headerlink&#34; title=&#34;Test the JSON-LD&#34;&gt;&lt;/a&gt;Test the JSON-LD&lt;/h2&gt;&lt;p&gt;When you have everything together, it is advisable to test the resulting code. Schema.org offers such a tool at &lt;strong&gt;&lt;a href=&#34;https://validator.schema.org/&#34;&gt;https://validator.schema.org/&lt;/a&gt;&lt;/strong&gt;. In addition, there is the &lt;a href=&#34;https://search.google.com/test/rich-results&#34;&gt;Google Rich Results Test&lt;/a&gt;, which validates your code against the partially specific implementation for their own search engine.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/Provide-Blog-Metadata-via-JSON-LD/schema-markup-validator.png&#34; alt=&#34;Schema Markup Validator&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;Conclusion&#34;&gt;&lt;a href=&#34;#Conclusion&#34; class=&#34;headerlink&#34; title=&#34;Conclusion&#34;&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;&lt;p&gt;It may be a few bytes more that are delivered to the user in the browser or the search engine bot, but the advantage is, that all the information describing the page is stored in one place in the header of the page and nothing is scattered all over the HTML anymore. Maintenance of both the code and the meta data is made much easier as a result.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;More-Information&#34;&gt;&lt;a href=&#34;#More-Information&#34; class=&#34;headerlink&#34; title=&#34;More Information&#34;&gt;&lt;/a&gt;More Information&lt;/h2&gt;
        &lt;ul class=&#34;moreinfo-list&#34;&gt;
            &lt;li&gt;Google Search Central: &lt;a href=&#34;https://developers.google.com/search/docs/appearance/structured-data/intro-structured-data&#34;&gt;Introduction to structured data markup in Google Search&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Patrick Coombe and Craig Mount: &lt;a href=&#34;https://jsonld.com/&#34;&gt;Steal Our JSON-LD&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Andrew Welch: &lt;a href=&#34;https://nystudio107.com/blog/annotated-json-ld-structured-data-examples&#34;&gt;Annotated JSON-LD Structured Data Examples&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Alberto Carniel: &lt;a href=&#34;https://www.albertocarniel.com/post/schema-markup&#34;&gt;Schema markup and structured data ultimate guide (JSON-LD)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Brian Gorman: &lt;a href=&#34;https://moz.com/blog/writing-structured-data-guide&#34;&gt;An SEO’s Guide to Writing Structured Data (JSON-LD)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Merkle: &lt;a href=&#34;https://technicalseo.com/tools/schema-markup-generator/&#34;&gt;Schema Markup Generator (JSON-LD)&lt;/a&gt;&lt;/li&gt;&lt;li&gt;webcode.tools: &lt;a href=&#34;https://webcode.tools/generators/structured-data&#34;&gt;Generators &gt; Structured Data&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
    
</content>
    <category term="Tools" scheme="https://kiko.io/categories/Tools/" />
    <category term="Hexo" scheme="https://kiko.io/tags/Hexo/" />
    <category term="Search" scheme="https://kiko.io/tags/Search/" />
    <category term="JSON-LD" scheme="https://kiko.io/tags/JSON-LD/" />
  </entry>
  <entry>
    <id>https://kiko.io/post/Radio-Garden/</id>
    <title>Radio Garden</title>
    <published>2023-02-01T23:00:00.000Z</published>
    <updated></updated>
    <link href="https://kiko.io/post/Radio-Garden/"/>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Radio-Garden.thumb.png" height="1200" width="630" />
    <content type="html">&lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Radio-Garden.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;In the age of streaming services, radio may seem out of date, but it still surrounds us constantly, even if we often hardly notice it - in the car, on the public transport, at work or simply at home in the kitchen. One strength of the old medium is that it presents us with music we haven’t heard before, away from our playlists on Spotify or iTunes.&lt;/p&gt;
&lt;p&gt;The easiest way to rediscover new artists or entire genres of music is to pick a radio station at random. It’s precisely this lack of control, the being at the mercy, the sometimes unpredictable that makes the medium so appealing to many - and with digital streaming, many of the world’s stations are just a tap away.&lt;/p&gt;
&lt;p&gt;As is so often the case in the modern world, it’s the oversupply that leaves some confused and frustrated. You first have to be able to pick out what you might like from the gigantic haystack of options. For this purpose, there are little helpers that more or less independently suggest what you might listen to. One of them stands out from the crowd because, on the one hand, it does not pursue commercial interests and, on the other hand, it approaches the station search very intuitively: &lt;strong&gt;&lt;a href=&#34;https://radio.garden/&#34;&gt;Radio Garden (https://radio.garden)&lt;/a&gt;&lt;/strong&gt;.&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;h2 id=&#34;Indian-esotericism-Estonian-metal&#34;&gt;&lt;a href=&#34;#Indian-esotericism-Estonian-metal&#34; class=&#34;headerlink&#34; title=&#34;Indian esotericism, Estonian metal&#34;&gt;&lt;/a&gt;Indian esotericism, Estonian metal&lt;/h2&gt;&lt;p&gt;The tool, which works very well in any modern browser, but is also available as an Android or iOS app, initially shows nothing more than an interactive globe on which tens of thousands of green dots whiz by under a round target cursor when you move the map back and forth or zoom into the world. If you set your sights on one of the green dots, the station for that city is loaded and played. If there are several stations in one place, the dot appears larger and you are also offered a station list.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/Radio-Garden/radio-garden-screen-2.png&#34; alt=&#34;Screenshot Radio Garden&#34;&gt;&lt;/p&gt;
&lt;p&gt;This is so intuitive that it instantly awakens the spirit of discovery and in a few minutes you can listen to Japanese, Australian or Peruvian radio stations and decide whether to add them to your list of favorites. Using the search function, you can find not only your local, familiar stations (if they offer an Internet stream), but also thematic stations. The directory even includes some US police stations that stream their radio traffic on the Internet.&lt;/p&gt;
&lt;p&gt;Radio Garden grew out of a scholarly project by the Netherland Institute for Sound and Vision in Hilversum, the Netherlands, which between 2013 and 2016 studied what radio sounds like in other parts of the world and what borders, different cultural identities, and encounters do to the medium.&lt;/p&gt;
&lt;p&gt;The British &lt;a href=&#34;http://puckey.studio/&#34;&gt;&lt;strong&gt;Jonathan Puckey&lt;/strong&gt; and his studio&lt;/a&gt; played a key role in the project and its technical implementation. In several iteration stages, this resulted in the web app radio.garden, which Puckey is still in charge of today. Instead of maps, the team from Amsterdam used satellite images from the beginning to illustrate that radio signals have always had the power to cross borders.&lt;/p&gt;
&lt;p&gt;Radio Garden is free, and you don’t need to register, log in, or even provide an email address. Nothing. Open up, select a station, listen to the radio.&lt;/p&gt;

      &lt;div class=&#34;image-slider&#34; id=&#34;image-slide-1pd3ca&#34;&gt;
        &lt;div&gt;&lt;img src=&#34;/post/Radio-Garden/radio-garden-screen-1.png&#34; alt=&#34;Screenshot Radio Garden&#34; /&gt;&lt;/div&gt;&lt;div&gt;&lt;img src=&#34;/post/Radio-Garden/radio-garden-screen-3.png&#34; alt=&#34;Screenshot Radio Garden&#34; /&gt;&lt;/div&gt;&lt;div&gt;&lt;img src=&#34;/post/Radio-Garden/radio-garden-screen-4.png&#34; alt=&#34;Screenshot Radio Garden&#34; /&gt;&lt;/div&gt;
      &lt;/div&gt;
      
    

&lt;p&gt;Unfortunately, there are a few regions in the world that have limited access to the radio.garden website or apps. For example, in the replies to a Mastodon post on the topic, there were some comments from people in the UK who could not access a station outside their island.&lt;/p&gt;
&lt;p&gt;This problem seems to have a licensing background and thus be a Brexit impact, but there are unfortunately no official statements on this. Similarly in Turkey, where the service was discontinued after the Radio and Television Supreme Council there ordered the operator to make license payments, according to Wikipedia. The only way around these restrictions is to use a VPN in another country.&lt;/p&gt;
&lt;p&gt;It’s a lot of fun to roam around the globe and try to follow an Indonesian news broadcast, guess which products the advertisements of a Greek station are trying to sell, let yourself be carried away to other worlds by the spherical sounds of an Indian esoteric station, or really shake your hair to the beat of the hard metal sounds of an Estonian rock station. Radio Garden is a very exciting project, wonderfully presented.&lt;/p&gt;
</content>
    <category term="Tools" scheme="https://kiko.io/categories/Tools/" />
    <category term="Audio" scheme="https://kiko.io/tags/Audio/" />
  </entry>
  <entry>
    <id>https://kiko.io/post/Pagefind-UI-and-URL-Parameters/</id>
    <title>Updated: </title>
    <published>2023-01-31T10:04:00.000Z</published>
    <updated>2023-02-03T10:51:00.000Z</updated>
    <link href="https://kiko.io/post/Pagefind-UI-and-URL-Parameters/"/>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Pagefind-UI-and-URL-Parameters.thumb.png" height="1200" width="630" />
    <content type="html">&lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Pagefind-UI-and-URL-Parameters.png&#34; /&gt;&lt;/p&gt;
    &lt;div class=&#34;alertbox alertbox-exclamation&#34;&gt;
      &lt;p&gt;&lt;strong&gt;UPDATE&lt;/strong&gt;: Parts of the original post are outdated, as Pagefind &lt;strong&gt;DOES&lt;/strong&gt; offer a way to preset a search string, which just hasn’t been documented yet … \o&amp;#x2F; … see below.&lt;/p&gt;

    &lt;/div&gt;
  

&lt;hr&gt;
&lt;p&gt;A couple of days ago I wrote about my attempt to &lt;a href=&#34;/post/Integration-of-Pagefind-in-Hexo/&#34; title=&#34;Integration of Pagefind in Hexo&#34;&gt;integrate Pagefind in my blog&lt;/a&gt;. In the meantime, I further refined the indexing by excluding more content areas and adding more for the metadata to make the search results even better.&lt;/p&gt;
&lt;p&gt;But one thing was still missing: controlling the search via url parameters, so that you can actually consider the page as a search page. I came across this in a post about the sense and nonsense of Open Graph attributes and other search engine related metadata nowadays. Google, for example, &lt;a href=&#34;https://developers.google.com/search/docs/appearance/structured-data/intro-structured-data&#34;&gt;likes to use JSON-LD&lt;/a&gt; and when describing the site you can define a search page which then makes it easier to search the site directly via Google … see &lt;a href=&#34;https://developers.google.com/search/docs/appearance/structured-data/sitelinks-searchbox&#34;&gt;Sitelinks search box (WebSite) structured data&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In my implementation, I decided to adapt the &lt;a href=&#34;https://pagefind.app/docs/ui/&#34;&gt;Pagefind UI&lt;/a&gt; for myself instead of developing everything from scratch via JavaScript. There are always some limitations with pre-built solutions, but I want to show here that they are actually none for the inclusion of a url parameter.&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;p&gt;My Pagefind search page is accessible at &lt;a href=&#34;/search&#34;&gt;&amp;#x2F;search&lt;/a&gt; and therefore it’s easy to provide with parameters, f.e. &lt;code&gt;/search/?q=test&lt;/code&gt;. Retrieving them on the page via JavaScript is no rocket science either:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;Search Page&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// get value search parameter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; queryString = &lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;location&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;search&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; urlParams = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;URLSearchParams&lt;/span&gt;(queryString);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; searchString = urlParams.&lt;span class=&#34;title function_&#34;&gt;get&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;q&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// initialize Pagefind UI&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;DOMContentLoaded&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;event&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;PagefindUI&lt;/span&gt;(&amp;#123; &lt;span class=&#34;attr&#34;&gt;element&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;#search&amp;quot;&lt;/span&gt; &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p style=&#34;text-decoration: line-through;&#34;&gt;
Now Pagefind does not offer the possibility to initialize the search on the page already with a certain value, which would be the easiest way. You can only insert the value supplied via the URL parameter into the initialized INPUT field **afterwards** and ensure that the search is triggered with it.
&lt;/p&gt;

&lt;p style=&#34;text-decoration: line-through;&#34;&gt;
Unfortunately, Pagefind also does not provide a callback method to do things after successful initialization. So, my implementation needs a &#34;guard&#34; that kicks in as soon as the INPUT field is ready for a search string to be entered. For this I use the following small function called ``waitForElm``, which uses JS&#39;s ``MutationAbserver`` and is located in my *tools.js* file. It triggers a Promise as soon as an element is available on the page.
&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As I learned after creating an &lt;a href=&#34;https://github.com/CloudCannon/pagefind/issues/214&#34;&gt;issue (#214)&lt;/a&gt; in Pagefind’s GitHub repo, there IS a way to preset the incoming search string by using the method &lt;code&gt;triggerSearch&lt;/code&gt;, but as Liam pointed out it is not yet documented.&lt;/p&gt;
&lt;p&gt;But I still need the following function called &lt;code&gt;waitForElm&lt;/code&gt; to set the &lt;strong&gt;focus&lt;/strong&gt; into the created INPUT … but there is also an existing &lt;a href=&#34;https://github.com/CloudCannon/pagefind/issues/121&#34;&gt;issue (#121)&lt;/a&gt; for this focus feature, so let’s see how long I need the function at all.&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;tools.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;waitForElm&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;selector&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Promise&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;resolve&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;querySelector&lt;/span&gt;(selector)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;resolve&lt;/span&gt;(&lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;querySelector&lt;/span&gt;(selector));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; observer = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;MutationObserver&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;mutations&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (&lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;querySelector&lt;/span&gt;(selector)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;title function_&#34;&gt;resolve&lt;/span&gt;(&lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;querySelector&lt;/span&gt;(selector));&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        observer.&lt;span class=&#34;title function_&#34;&gt;disconnect&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    observer.&lt;span class=&#34;title function_&#34;&gt;observe&lt;/span&gt;(&lt;span class=&#34;variable language_&#34;&gt;document&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;body&lt;/span&gt;, &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;childList&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;subtree&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p style=&#34;text-decoration: line-through;&#34;&gt;
With this function and the name of the INPUT field that Pagefind inserts into the ``#search`` wrapper during initialization, the URL parameter can now be set.
&lt;/p&gt;
&lt;p style=&#34;text-decoration: line-through;&#34;&gt;
Since Pagefind already shows results when typing the first characters, the easiest way to trigger the search after setting the value is by dispatching the ``input`` event.
&lt;/p&gt;

&lt;p&gt;Lets see how to implement Pagefind’s &lt;code&gt;triggerSearch&lt;/code&gt; function, which is automatically delayed until the search is loaded and ready, if there is an incoming search string:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;Search Page&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// get value search parameter&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; queryString = &lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;location&lt;/span&gt;.&lt;span class=&#34;property&#34;&gt;search&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; urlParams = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;URLSearchParams&lt;/span&gt;(queryString);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; searchString = urlParams.&lt;span class=&#34;title function_&#34;&gt;get&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;q&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// initialize Pagefind UI&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;DOMContentLoaded&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;event&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; pagefind = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;PagefindUI&lt;/span&gt;(&amp;#123; &lt;span class=&#34;attr&#34;&gt;element&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;#search&amp;quot;&lt;/span&gt; &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (searchString) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      pagefind.&lt;span class=&#34;title function_&#34;&gt;triggerSearch&lt;/span&gt;(searchString);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// setting the focus into the generated INPUT field as it appears&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title function_&#34;&gt;waitForElm&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;.pagefind-ui__search-input&amp;quot;&lt;/span&gt;).&lt;span class=&#34;title function_&#34;&gt;then&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;elm&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    elm.&lt;span class=&#34;title function_&#34;&gt;focus&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;You can try my solution here: &lt;strong&gt;&lt;a href=&#34;/search/?q=pagefind&#34;&gt;&amp;#x2F;search&amp;#x2F;?q&amp;#x3D;pagefind&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
</content>
    <category term="Tools" scheme="https://kiko.io/categories/Tools/" />
    <category term="Hexo" scheme="https://kiko.io/tags/Hexo/" />
    <category term="Blogging" scheme="https://kiko.io/tags/Blogging/" />
    <category term="Search" scheme="https://kiko.io/tags/Search/" />
  </entry>
  <entry>
    <id>https://kiko.io/post/Integration-of-Pagefind-in-Hexo/</id>
    <title>Integration of Pagefind in Hexo</title>
    <published>2023-01-19T12:24:00.000Z</published>
    <updated></updated>
    <link href="https://kiko.io/post/Integration-of-Pagefind-in-Hexo/"/>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Integration-of-Pagefind-in-Hexo.thumb.png" height="1200" width="630" />
    <content type="html">&lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Integration-of-Pagefind-in-Hexo.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;From the beginning of this blog I wanted to provide some kind of full text search in order to give my users the ability to find stuff by keyword.&lt;/p&gt;
&lt;p&gt;There are a few Hexo plugins that have approached the subject, but it was not really satisfactory and performant. So I relied on the worlds biggest search engine: Google. A search button, which drives out a small input field and with the pressing of the ENTER key the form was sent via GET to &lt;code&gt;//google.com/search&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/Integration-of-Pagefind-in-Hexo/google-site-search.png&#34; alt=&#34;Google Site Search on kiko.io&#34;&gt;&lt;/p&gt;
&lt;p&gt;The procedure was simple, but also burdened with the fact that I always expose my users to Google. At least until now … :)&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mstdn.social/@BryceWrayTX&#34;&gt;Bryce Wray&lt;/a&gt; set me on a new path with his post &lt;a href=&#34;https://www.brycewray.com/posts/2022/12/sweeter-searches-pagefind/&#34;&gt;Sweeter searches with Pagefind&lt;/a&gt;, in which he talks about his experience with the still fairly fresh tool &lt;a href=&#34;https://pagefind.app/&#34;&gt;&lt;strong&gt;Pagefind&lt;/strong&gt;&lt;/a&gt;…&lt;/p&gt;

    &lt;div&gt;
        &lt;blockquote&gt;&lt;p&gt;Pagefind is a fully static search library that aims to perform well on large sites, while using as little of your users’ bandwidth as possible, and without hosting any infrastructure …&lt;/p&gt;
&lt;/blockquote&gt;
        &lt;cite&gt;&lt;a href=&#34;https://pagefind.app/&#34;&gt;--- Liam Bigelow @ pagefind.app&lt;/a&gt;&lt;/cite&gt;
    &lt;/div&gt;
  

&lt;p&gt;Pardon me? A full text search for SSG’s running completely in the browser? It sounded so great that I had to try it right away. And what can I say … it not only works fantastically well, but is also extremely easy to implement. Of course, you have to consider a few things, especially with regard to the SSG Hexo I use, but I didn’t find any big hurdles, also because the tool is so &lt;a href=&#34;https://pageind.app/&#34;&gt;well documented&lt;/a&gt;. Let’s see what my implementation looks like…&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;hr&gt;
&lt;h2 id=&#34;The-Tool-in-Brief&#34;&gt;&lt;a href=&#34;#The-Tool-in-Brief&#34; class=&#34;headerlink&#34; title=&#34;The Tool in Brief&#34;&gt;&lt;/a&gt;The Tool in Brief&lt;/h2&gt;&lt;p&gt;Pagefind it is a Node.js tool and is started via the Node Package Runner (npx) and &lt;strong&gt;runs against the static files already created during the build&lt;/strong&gt;. It indexes all the desired pages or even parts of the pages and creates meta and index files for them in a special build folder, which can be retrieved later via JavaScript. To make things a bit more user-friendly, Pagefind also directly generates the necessary JavaScript and CSS files for a UI.&lt;/p&gt;
&lt;p&gt;… but Liam can explain better how it works: &lt;/p&gt;
&lt;div class=&#34;video-container&#34;&gt;&lt;iframe src=https://www.youtube.com/embed/74lsEXqRQys frameborder=0 allow=autoplay; encrypted-media allowfullscreen&gt;&lt;/iframe&gt;&lt;/div&gt;

&lt;hr&gt;
&lt;h2 id=&#34;Implementation-in-Hexo&#34;&gt;&lt;a href=&#34;#Implementation-in-Hexo&#34; class=&#34;headerlink&#34; title=&#34;Implementation in Hexo&#34;&gt;&lt;/a&gt;Implementation in Hexo&lt;/h2&gt;&lt;p&gt;First of all I decided to store all necessary parameters in a supported &lt;a href=&#34;https://pagefind.app/docs/config-sources/&#34;&gt;config file&lt;/a&gt; in the root of my blog project.&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;figcaption&gt;&lt;span&gt;pagefind.yml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;source:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;docs&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;bundle_dir:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;pagefind&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;exclude_selectors:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;.note-list&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;.anything-list&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;.article-related&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;code&gt;source&lt;/code&gt; defines the relative folder where all static files are created during the build and which should now be indexed.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bundle_dir&lt;/code&gt; overrides the default storage folder called &lt;code&gt;_pagefind&lt;/code&gt;, which is created in the build folder for the search files. This is necessary because my blog is built and hosted on &lt;strong&gt;Github Pages&lt;/strong&gt; and the responsible GitHub Action goes over folders with a starting underscore on deployment. More info on that &lt;a href=&#34;https://github.com/orgs/community/discussions/23640&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://github.com/CloudCannon/pagefind/discussions/126&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;exclude_selectors&lt;/code&gt; is a list of all those page elements whose content should NOT be indexed, but more about that later.&lt;/p&gt;
&lt;p&gt;With another setting called &lt;code&gt;glob&lt;/code&gt; it is possible to tell Pagefind which files to index, but this currently has its pitfalls when trying to exclude some. Liam already &lt;a href=&#34;https://github.com/CloudCannon/pagefind/discussions/127&#34;&gt;has this on the screen&lt;/a&gt; for one of the next versions.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;Limiting-Indexing-Content&#34;&gt;&lt;a href=&#34;#Limiting-Indexing-Content&#34; class=&#34;headerlink&#34; title=&#34;Limiting Indexing Content&#34;&gt;&lt;/a&gt;Limiting Indexing Content&lt;/h3&gt;&lt;p&gt;A post on a web page never stands alone, but is surrounded by other elements such as navigation, further links, etc. However, these addional elements should not end up in the index. Pagefind skips some of them like &lt;code&gt;nav&lt;/code&gt;, &lt;code&gt;form&lt;/code&gt; or &lt;code&gt;script&lt;/code&gt; automatically, but there always remain some that should be excluded by hand.&lt;/p&gt;
&lt;p&gt;Best option to narrow down the indexable content is the use of the attribute &lt;code&gt;data-pagefind-body&lt;/code&gt;. Instead of excluding something, tell Pagefind what to include. However, this approach makes it easier, but also has consequences:&lt;/p&gt;

    &lt;div&gt;
        &lt;blockquote&gt;&lt;p&gt;If &lt;em&gt;data-pagefind-body&lt;/em&gt; is found &lt;strong&gt;anywhere&lt;/strong&gt; on your site, any pages without this attribute will be removed from your index.&lt;/p&gt;
&lt;/blockquote&gt;
        &lt;cite&gt;&lt;a href=&#34;https://pagefind.app/docs/indexing/&#34;&gt;--- pagefind.app&lt;/a&gt;&lt;/cite&gt;
    &lt;/div&gt;
  

&lt;p&gt;In my case, I had a few places in my templates that I needed to add the attribute to:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Type&lt;/th&gt;
&lt;th&gt;File&lt;/th&gt;
&lt;th&gt;Element&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;Post&lt;/td&gt;
&lt;td&gt;_partial&amp;#x2F;article.ejs&lt;/td&gt;
&lt;td&gt;article&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Notes&lt;/td&gt;
&lt;td&gt;note.ejs&lt;/td&gt;
&lt;td&gt;article&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Page&lt;/td&gt;
&lt;td&gt;page.ejs&lt;/td&gt;
&lt;td&gt;.page-content&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Dynamic Page&lt;/td&gt;
&lt;td&gt;[name].ejs&lt;/td&gt;
&lt;td&gt;.page-content&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Anything Page&lt;/td&gt;
&lt;td&gt;_partial&amp;#x2F;anything-page-item.ejs&lt;/td&gt;
&lt;td&gt;.anything-content&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;All elements inside of the elements attributed like that, I had to exclude via the setting &lt;code&gt;exclude_selectors&lt;/code&gt; in the config (see above).&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;Specifying-Meta-Information&#34;&gt;&lt;a href=&#34;#Specifying-Meta-Information&#34; class=&#34;headerlink&#34; title=&#34;Specifying Meta Information&#34;&gt;&lt;/a&gt;Specifying Meta Information&lt;/h3&gt;&lt;p&gt;It was important to me to show the date of a post in the search result, because nothing is as inaccurate as a post that is many years old. With Pagefind you select the HTML element in the templates in which the meta value is located and attribute it with &lt;code&gt;data-pagefind-meta&lt;/code&gt;, for example:&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption&gt;&lt;span&gt;date.ejs&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;time&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;published dt-published&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;itemprop&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;datePublished&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;data-pagefind-meta&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;date&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;%= date(page.date, &amp;#x27;DD MMM YYYY&amp;#x27;) %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;time&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;As title for the search hit Pagefind searches for H1 tags and takes the value of the last tag it finds. If you are not sure that there is always only one H1 tag on the page (and for me it is), then you better specify which tag it should take:&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption&gt;&lt;span&gt;title.ejs&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;class&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;%= class_name %&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;itemprop&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;data-pagefind-meta&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;title&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;lt;%= post.title %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;h1&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Thus, on specifying meta data you can refer not only to the content of a tag, but also to other attributes. Here’s the example for my special Hexo implementation for header images:&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption&gt;&lt;span&gt;photograph.ejs&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;header-photo&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;data-pagefind-meta&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;image[src], image_alt[alt]&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;     &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;/photos/normal/&amp;lt;%= page.photograph.file %&amp;gt;&amp;quot;&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;     &lt;span class=&#34;attr&#34;&gt;alt&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;lt;%= page.photograph.name%&amp;gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;     &lt;span class=&#34;attr&#34;&gt;width&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;height&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;/&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;In case there is simply no element that contains the meta value, you can also specify it within the attribute:&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;figcaption&gt;&lt;span&gt;article.ejs&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;article&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;note-&amp;lt;%= page.slug %&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;itemprop&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;blogPost&amp;quot;&lt;/span&gt;   &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;       &lt;span class=&#34;attr&#34;&gt;data-pagefind-body&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;       &lt;span class=&#34;attr&#34;&gt;data-pagefind-meta&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;type:Note&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt; ...&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;article&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h3 id=&#34;Adding-a-Search-Page&#34;&gt;&lt;a href=&#34;#Adding-a-Search-Page&#34; class=&#34;headerlink&#34; title=&#34;Adding a Search Page&#34;&gt;&lt;/a&gt;Adding a Search Page&lt;/h3&gt;&lt;p&gt;Pagefind includes not only everything to get search results from the created index by JavaScript, but also the complete &lt;a href=&#34;https://pagefind.app/docs/ui/&#34;&gt;UI for a search page&lt;/a&gt;, which means that you can build the complete search into your site yourself, or simply take a pre-built UI and visually customize it if necessary. I did the latter.&lt;/p&gt;
&lt;p&gt;The following code is the basic structure of the search page as suggested by Pagefind:&lt;/p&gt;
&lt;figure class=&#34;highlight html&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;link&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;href&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;/pagefind/pagefind-ui.css&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;rel&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;src&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;/pagefind/pagefind-ui.js&amp;quot;&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;type&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;id&lt;/span&gt;=&lt;span class=&#34;string&#34;&gt;&amp;quot;search&amp;quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;div&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &lt;span class=&#34;variable language_&#34;&gt;window&lt;/span&gt;.&lt;span class=&#34;title function_&#34;&gt;addEventListener&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;DOMContentLoaded&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;function&#34;&gt;(&lt;span class=&#34;params&#34;&gt;event&lt;/span&gt;) =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;PagefindUI&lt;/span&gt;(&amp;#123; &lt;span class=&#34;attr&#34;&gt;element&lt;/span&gt;: &lt;span class=&#34;string&#34;&gt;&amp;quot;#search&amp;quot;&lt;/span&gt; &amp;#125;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;  &amp;#125;);&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-javascript&#34;&gt;&lt;/span&gt;&lt;span class=&#34;tag&#34;&gt;&amp;lt;/&lt;span class=&#34;name&#34;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;To accommodate this in Hexo, it is advisable to use your own template and generate the page with an appropriate generator. A standard PAGE in Markdown format is only conditionally suitable for this, because links and scripts are needed. I described how to implement such a generator that renders descriptive Markdown in addition to the EJS template in my post &lt;a href=&#34;/post/Pattern-for-dynamic-Hexo-pages/&#34; title=&#34;Pattern for dynamic Hexo pages&#34;&gt;Pattern for dynamic Hexo pages&lt;/a&gt;, and I’ve taken that approach here as well.&lt;/p&gt;
&lt;p&gt;For simplicity, I won’t list the full code here, but link to my blog’s GitHub repo:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;File&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/kristofzerbe/kiko.io/blob/master/source/_dynamic/search.md&#34;&gt;&lt;em&gt;&amp;#x2F;source&amp;#x2F;_dynamic&amp;#x2F;&lt;/em&gt;&lt;br&gt;&lt;strong&gt;search.md&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Markdown file with Frontmatter data and introduction text&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/kristofzerbe/kiko.io/blob/master/themes/landscape/layout/search.ejs&#34;&gt;&lt;em&gt;&amp;#x2F;themes&amp;#x2F;landscape&amp;#x2F;layout&amp;#x2F;&lt;/em&gt;&lt;br&gt;&lt;strong&gt;search.ejs&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Layout template for search page&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/kristofzerbe/kiko.io/blob/master/themes/landscape/script/generator-dynamic-search.js&#34;&gt;&lt;em&gt;&amp;#x2F;themes&amp;#x2F;landscape&amp;#x2F;script&amp;#x2F;&lt;/em&gt;&lt;br&gt;&lt;strong&gt;generator-dynamic-search.js&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Hexo Generator for creating the page during build&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://github.com/kristofzerbe/kiko.io/blob/master/themes/landscape/script/source/css/_pagefind.styl&#34;&gt;&lt;em&gt;&amp;#x2F;themes&amp;#x2F;landscape&amp;#x2F;script&amp;#x2F;source&amp;#x2F;css&amp;#x2F;&lt;/em&gt;&lt;br&gt;&lt;strong&gt;_pagefind.styl&lt;/strong&gt;&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Customized CSS Variables and style overrides&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;
&lt;p&gt;For the visual customization of the user interface Pagefind provides some CSS variables in the automatically generated CSS file. These help a bit to customize the UI to your own ideas, but I decided to override some of the styles in a seperate file called &lt;code&gt;_pagefind.styl&lt;/code&gt;, which will be bundled via &lt;code&gt;@import &amp;quot;_pagefind&amp;quot;&lt;/code&gt; in the main &lt;code&gt;styles.styl&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Since the main bundled CSS file is loaded in the HEAD before the &lt;code&gt;_pagefind.css&lt;/code&gt; somewhere in the page, for simplicity I first made sure to pull the overrides with &lt;code&gt;!important&lt;/code&gt;. This is not yet pretty and I will have to revise this later on.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;Running-Build-and-Pagefind&#34;&gt;&lt;a href=&#34;#Running-Build-and-Pagefind&#34; class=&#34;headerlink&#34; title=&#34;Running Build and Pagefind&#34;&gt;&lt;/a&gt;Running Build and Pagefind&lt;/h3&gt;&lt;p&gt;Thus prepared, the rest is a piece of cake. Pagefind does not need to be installed, because if you call the npm package via npx, the latest version will be downloaded and executed automatically. You just have to make sure that the hexo build has run before. The best way is to run the following command:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hexo clean &amp;amp;&amp;amp; hexo generate &amp;amp;&amp;amp;&lt;/code&gt;&lt;strong&gt;&lt;code&gt;npx pagefind&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This my result in the console:&lt;/p&gt;
&lt;figure class=&#34;highlight accesslog&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;Running Pagefind v0.&lt;span class=&#34;number&#34;&gt;10&lt;/span&gt;.&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt; (Extended)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Running from: &lt;span class=&#34;string&#34;&gt;&amp;quot;...\\kiko.io&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Source:       &lt;span class=&#34;string&#34;&gt;&amp;quot;docs&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Bundle Directory:  &lt;span class=&#34;string&#34;&gt;&amp;quot;pagefind&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;[Walking source directory]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Found &lt;span class=&#34;number&#34;&gt;319&lt;/span&gt; files matching **/*.&amp;#123;html&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;[Parsing files]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Found a data-pagefind-body element on the site.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;↳ Ignoring pages without this tag.&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;[Reading languages]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Discovered &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; language: en&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;[Building search indexes]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Total: &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Indexed &lt;span class=&#34;number&#34;&gt;1&lt;/span&gt; language&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Indexed &lt;span class=&#34;number&#34;&gt;124&lt;/span&gt; pages&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Indexed &lt;span class=&#34;number&#34;&gt;7220&lt;/span&gt; words&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Indexed &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; filters&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  Indexed &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt; sorts&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;Finished in &lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;.&lt;span class=&#34;number&#34;&gt;924&lt;/span&gt; seconds&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h3 id=&#34;Mount-in-GitHub-Action&#34;&gt;&lt;a href=&#34;#Mount-in-GitHub-Action&#34; class=&#34;headerlink&#34; title=&#34;Mount in GitHub Action&#34;&gt;&lt;/a&gt;Mount in GitHub Action&lt;/h3&gt;&lt;p&gt;Since I am hosting this blog on GitHub Pages and the complete build and deployment is done by a GitHub Action, I added a step to the &lt;code&gt;hexo-build&lt;/code&gt; job in the workflow file so that after the build Pagefind indexes the result:&lt;/p&gt;
&lt;figure class=&#34;highlight yml&#34;&gt;&lt;figcaption&gt;&lt;span&gt;hexo-build.yml&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;jobs:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;hexo-build:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;runs-on:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;ubuntu-latest&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;steps:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;string&#34;&gt;...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Build&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;run:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;npm&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;run&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;generate&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;name:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Run&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;Pagefind&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;run:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;npm_config_yes=true&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;npx&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;pagefind&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;string&#34;&gt;...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Thankfully, in his article on Pagefind, Bryce also put me on the track of how to prevent a possible security prompt caused by npx from blocking Pagefind to run … &lt;a href=&#34;/notes/2023/avoid-npx-install-prompt/&#34;&gt;npm_config_yes&amp;#x3D;true&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;The-Result&#34;&gt;&lt;a href=&#34;#The-Result&#34; class=&#34;headerlink&#34; title=&#34;The Result&#34;&gt;&lt;/a&gt;The Result&lt;/h3&gt;&lt;p&gt;The finished solution is really amazing. As soon as you start typing, the included Pagefind JavaScript updates the results list … and it’s sooo fast. Really an exciting tool. Thanks to Liam and CloudCannon.&lt;/p&gt;

    &lt;a href=&#34;/search&#34;&gt;
        &lt;img src=&#34;kiko-io-search.png&#34; alt=&#34;Pagefind Search on kiko.io&#34; /&gt;
    &lt;/a&gt;
    

&lt;p&gt;I hope that my explanation has inspired you to try it out for yourself on your Hexo driven blog or website. If you need some help or advice, drop me a line…&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;More-Info&#34;&gt;&lt;a href=&#34;#More-Info&#34; class=&#34;headerlink&#34; title=&#34;More Info&#34;&gt;&lt;/a&gt;More Info&lt;/h2&gt;
        &lt;ul class=&#34;moreinfo-list&#34;&gt;
            &lt;li&gt;CloudCannon: &lt;a href=&#34;https://pagefind.app/&#34;&gt;Pagefind&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Liam Bigelow: &lt;a href=&#34;https://cloudcannon.com/blog/introducing-pagefind/&#34;&gt;Introducing Pagefind: Static Low-bandwidth Search at Scale&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Bryce Wray: &lt;a href=&#34;https://www.brycewray.com/posts/2022/07/pagefind-quite-find-site-search/&#34;&gt;Pagefind is quite a find for site search&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Bryce Wray: &lt;a href=&#34;https://www.brycewray.com/posts/2022/12/sweeter-searches-pagefind/&#34;&gt;Sweeter searches with Pagefind&lt;/a&gt;&lt;/li&gt;&lt;li&gt;Nicolas Deville: &lt;a href=&#34;https://notes.nicolasdeville.com/helpers/pagefind/&#34;&gt;Pagefind&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
    
</content>
    <category term="Tools" scheme="https://kiko.io/categories/Tools/" />
    <category term="Hexo" scheme="https://kiko.io/tags/Hexo/" />
    <category term="Blogging" scheme="https://kiko.io/tags/Blogging/" />
    <category term="Search" scheme="https://kiko.io/tags/Search/" />
  </entry>
  <entry>
    <id>https://kiko.io/post/Favourite-Pens-of-2022/</id>
    <title>Favourite Pens of 2022</title>
    <published>2023-01-14T12:10:48.000Z</published>
    <updated></updated>
    <link href="https://kiko.io/post/Favourite-Pens-of-2022/"/>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Favourite-Pens-of-2022.thumb.png" height="1200" width="630" />
    <content type="html">&lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Favourite-Pens-of-2022.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;Every year CodePen publishes a list of the 100 most “liked” pens on their site: &lt;a href=&#34;https://codepen.io/2022/popular/&#34;&gt;The Most Hearted of 2022&lt;/a&gt;. It’s always exciting to scroll through the list and marvel at the incredibly good work of CSS artists. &lt;/p&gt;
&lt;p&gt;My favorite in terms of CSS coding art this year is the work &lt;a href=&#34;https://codepen.io/ivorjetski/pen/yLjeqgb&#34;&gt;A moment of pure CSS&lt;/a&gt; by Ben Evans. Absolutely amazing what he does with pure CSS:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/Favourite-Pens-of-2022/a-moment-of-pure-css.png&#34; alt=&#34;Really ... no image involved!&#34;&gt;&lt;/p&gt;
&lt;p&gt;From all these works you can take a lot of know-how for yourself, but many of these pens have no practical use at first, i.e. you can’t really use them directly on your own website. They are art. Some of them impressed me not only because of their creativity, but I saved them on my own Trello list to try them out in one of the next projects. Partly they are clever approaches regarding usability, partly more or less standard functions were implemented in a visually impressive way. Some of them need some JS to work, sime of them not. Let yourself be inspired …&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;hr&gt;&lt;br&gt;

&lt;h2 id=&#34;1-iOS-Notifications-by-Yoav-Kadosh&#34;&gt;&lt;a href=&#34;#1-iOS-Notifications-by-Yoav-Kadosh&#34; class=&#34;headerlink&#34; title=&#34;1. iOS Notifications by Yoav Kadosh&#34;&gt;&lt;/a&gt;1. iOS Notifications by Yoav Kadosh&lt;/h2&gt;
    &lt;iframe height=&#34;400&#34; 
        id=&#34;codepen-ZERjpRJ&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/ZERjpRJ?height=400&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: iOS Notifications&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;2-Lotsa-Notifications-by-Jon-Kantner&#34;&gt;&lt;a href=&#34;#2-Lotsa-Notifications-by-Jon-Kantner&#34; class=&#34;headerlink&#34; title=&#34;2. Lotsa Notifications by Jon Kantner&#34;&gt;&lt;/a&gt;2. Lotsa Notifications by Jon Kantner&lt;/h2&gt;
    &lt;iframe height=&#34;400&#34; 
        id=&#34;codepen-XWzePgp&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/XWzePgp?height=400&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Lotsa Notifications&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;3-Animated-Star-Rating-by-Jon-Kantner&#34;&gt;&lt;a href=&#34;#3-Animated-Star-Rating-by-Jon-Kantner&#34; class=&#34;headerlink&#34; title=&#34;3. Animated Star Rating by Jon Kantner&#34;&gt;&lt;/a&gt;3. Animated Star Rating by Jon Kantner&lt;/h2&gt;
    &lt;iframe height=&#34;400&#34; 
        id=&#34;codepen-BarvVNa&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/BarvVNa?height=400&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Animated Star Rating&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;4-Changing-Face-Rating-by-Jon-Kantner&#34;&gt;&lt;a href=&#34;#4-Changing-Face-Rating-by-Jon-Kantner&#34; class=&#34;headerlink&#34; title=&#34;4. Changing Face Rating by Jon Kantner&#34;&gt;&lt;/a&gt;4. Changing Face Rating by Jon Kantner&lt;/h2&gt;
    &lt;iframe height=&#34;400&#34; 
        id=&#34;codepen-YzLQoXM&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/YzLQoXM?height=400&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Changing Face Rating&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;5-CSS-Minimal-Dark-Mode-Toggle-Button-by-Greg-Vissing&#34;&gt;&lt;a href=&#34;#5-CSS-Minimal-Dark-Mode-Toggle-Button-by-Greg-Vissing&#34; class=&#34;headerlink&#34; title=&#34;5. CSS Minimal Dark Mode Toggle Button by Greg Vissing&#34;&gt;&lt;/a&gt;5. CSS Minimal Dark Mode Toggle Button by Greg Vissing&lt;/h2&gt;
    &lt;iframe height=&#34;400&#34; 
        id=&#34;codepen-OJvxoJq&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/OJvxoJq?height=400&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: CSS Minimal Dark Mode Toggle Button&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;6-Menu-micro-interaction-with-CSS-by-Mert-Cukuren&#34;&gt;&lt;a href=&#34;#6-Menu-micro-interaction-with-CSS-by-Mert-Cukuren&#34; class=&#34;headerlink&#34; title=&#34;6. Menu micro-interaction with CSS by Mert Cukuren&#34;&gt;&lt;/a&gt;6. Menu micro-interaction with CSS by Mert Cukuren&lt;/h2&gt;
    &lt;iframe height=&#34;400&#34; 
        id=&#34;codepen-rNJxwGR&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/rNJxwGR?height=400&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Menu micro-interaction with CSS&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;7-Animated-BottomBar-Experiment-by-Chris-Bautista&#34;&gt;&lt;a href=&#34;#7-Animated-BottomBar-Experiment-by-Chris-Bautista&#34; class=&#34;headerlink&#34; title=&#34;7. Animated BottomBar Experiment by Chris Bautista&#34;&gt;&lt;/a&gt;7. Animated BottomBar Experiment by Chris Bautista&lt;/h2&gt;
    &lt;iframe height=&#34;400&#34; 
        id=&#34;codepen-NWXjqLN&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/NWXjqLN?height=400&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Animated BottomBar Experiment&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;8-Progress-Button-by-Taylon-Chan&#34;&gt;&lt;a href=&#34;#8-Progress-Button-by-Taylon-Chan&#34; class=&#34;headerlink&#34; title=&#34;8. Progress Button by Taylon, Chan&#34;&gt;&lt;/a&gt;8. Progress Button by Taylon, Chan&lt;/h2&gt;
    &lt;iframe height=&#34;400&#34; 
        id=&#34;codepen-dyepVJp&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/dyepVJp?height=400&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Progress Button&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;9-Gradient-background-with-waves-by-Barbara-Rodriguez&#34;&gt;&lt;a href=&#34;#9-Gradient-background-with-waves-by-Barbara-Rodriguez&#34; class=&#34;headerlink&#34; title=&#34;9. Gradient background with waves by Bárbara Rodríguez&#34;&gt;&lt;/a&gt;9. Gradient background with waves by Bárbara Rodríguez&lt;/h2&gt;
    &lt;iframe height=&#34;400&#34; 
        id=&#34;codepen-KKovmGb&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/KKovmGb?height=400&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Gradient background with waves&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  

&lt;p&gt;&lt;br&gt;&lt;hr&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&#34;10-Cascading-CSS-Text-Effects-by-Jhey&#34;&gt;&lt;a href=&#34;#10-Cascading-CSS-Text-Effects-by-Jhey&#34; class=&#34;headerlink&#34; title=&#34;10. Cascading CSS Text Effects by Jhey&#34;&gt;&lt;/a&gt;10. Cascading CSS Text Effects by Jhey&lt;/h2&gt;
    &lt;iframe height=&#34;400&#34; 
        id=&#34;codepen-gOeGmRN&#34;
        class=&#34;codepen&#34;
        src=&#34;https://codepen.io/kristofzerbe/embed/gOeGmRN?height=400&amp;default-tab=result&amp;theme-id=dark&#34;
        style=&#34;width: 100%;&#34; 
        scrolling=&#34;no&#34; 
        title=&#34;Codepen: Cascading CSS Text Effects&#34; 
        frameborder=&#34;no&#34; 
        loading=&#34;lazy&#34; 
        allowtransparency=&#34;true&#34; 
        allowfullscreen=&#34;true&#34;&gt;
    &lt;/iframe&gt;
  
</content>
    <category term="UI/UX" scheme="https://kiko.io/categories/UI-UX/" />
    <category term="UI" scheme="https://kiko.io/tags/UI/" />
    <category term="CSS" scheme="https://kiko.io/tags/CSS/" />
    <category term="Collection" scheme="https://kiko.io/tags/Collection/" />
  </entry>
  <entry>
    <id>https://kiko.io/post/Discoveries-22-Tips-Tricks/</id>
    <title>Discoveries #22 -  Tips/Tricks</title>
    <published>2023-01-06T14:05:55.000Z</published>
    <updated></updated>
    <link href="https://kiko.io/post/Discoveries-22-Tips-Tricks/"/>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Discoveries-22-Tips-Tricks.thumb.png" height="1200" width="630" />
    <content type="html">&lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Discoveries-22-Tips-Tricks.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;As someone said the other day? “January is the Monday of the year”. How true. After programming myself a new workflow for creating my discoveries (see &lt;a href=&#34;/post/Generate-Content-from-Trello/&#34;&gt;Generate Content from Trello&lt;/a&gt;) at the end of last year, I wanted to try it out again right away and give you a list of tips and tricks for starting 2023.&lt;/p&gt;

        &lt;ul class=&#34;anchorlist&#34;&gt;
            &lt;li data-anchor=&#34;#6-steps-to-get-verified-on-mastodon-with-encrypted-keys&#34;&gt;6 steps to get verified on Mastodon with encrypted keys&lt;/li&gt;&lt;li data-anchor=&#34;#generate-a-pull-request-of-static-content-with-a-simple-html-form&#34;&gt;Generate a Pull Request of Static Content With a Simple HTML Form&lt;/li&gt;&lt;li data-anchor=&#34;#my-wonderful-html-email-workflow-using-mjml-and-mdx-for-responsive-emails&#34;&gt;My Wonderful HTML Email Workflow, using MJML and MDX for responsive emails&lt;/li&gt;&lt;li data-anchor=&#34;#how-to-view-build-logs-for-github-pages&#34;&gt;How to View Build Logs for GitHub Pages&lt;/li&gt;&lt;li data-anchor=&#34;#enabling-intellisense-for-github-actions-workflows-in-vs-code&#34;&gt;Enabling IntelliSense for GitHub Actions workflows in VS Code&lt;/li&gt;&lt;li data-anchor=&#34;#9-javascript-console-tips-that-will-improve-your-debugging-skills&#34;&gt;9 JavaScript Console Tips That Will Improve Your Debugging Skills&lt;/li&gt;&lt;li data-anchor=&#34;#fun-with-console-log-&#34;&gt;Fun with console.log()&lt;/li&gt;&lt;li data-anchor=&#34;#load-hierarchical-data-from-mssql-with-recursive-common-table-expressions&#34;&gt;Load hierarchical data from MSSQL with recursive common table expressions&lt;/li&gt;&lt;li data-anchor=&#34;#an-html-first-mental-model&#34;&gt;An HTML-first Mental Model&lt;/li&gt;&lt;li data-anchor=&#34;#project-documentation-with-hexo-static-site-generator&#34;&gt;Project Documentation with Hexo Static Site Generator&lt;/li&gt;
        &lt;/ul&gt;
    

&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;


    &lt;hr id=&#34;6-steps-to-get-verified-on-mastodon-with-encrypted-keys&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      6 steps to get verified on Mastodon with encrypted keys
    &lt;/h2&gt;
    &lt;small&gt;by Seth Kenlon&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://opensource.com/article/22/12/verified-mastodon-pgp-keyoxide&#34;&gt;https://opensource.com/article/22/12/verified-mastodon-pgp-keyoxide&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;To verify that you control your Mastodon account, the easiest way is to add a verification link in your profile, which points to your blog&amp;#x2F;website and where Mastodon find a link attributed with &amp;#39;rel&amp;#x3D;me&amp;#39;. For advanced verification you can use the power of shared encrypted keys, which Mastodon can link to thanks to the open source project Keyoxide … and Seth shows how to get it.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://opensource.com/article/22/12/verified-mastodon-pgp-keyoxide&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;6-steps-to-get-verified-on-mastodon-with-encrypted-keys.png&#34; alt=&#34;6 steps to get verified on Mastodon with encrypted keys&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;generate-a-pull-request-of-static-content-with-a-simple-html-form&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Generate a Pull Request of Static Content With a Simple HTML Form
    &lt;/h2&gt;
    &lt;small&gt;by Hilman Ramadhan&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://css-tricks.com/generate-a-pull-request-of-static-content-with-a-simple-html-form/&#34;&gt;https://css-tricks.com/generate-a-pull-request-of-static-content-with-a-simple-html-form/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Hosting your static files blog&amp;#x2F;site&amp;#x2F;whatever on GitHub and wan&amp;#39;t others to contribute? Hilman has an idea to achieve this via a standard form, that creates a Pull Request!&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://css-tricks.com/generate-a-pull-request-of-static-content-with-a-simple-html-form/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;generate-a-pull-request-of-static-content-with-a-simple-html-form.png&#34; alt=&#34;Generate a Pull Request of Static Content With a Simple HTML Form&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;my-wonderful-html-email-workflow-using-mjml-and-mdx-for-responsive-emails&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      My Wonderful HTML Email Workflow, using MJML and MDX for responsive emails
    &lt;/h2&gt;
    &lt;small&gt;by Josh Comeau&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://www.joshwcomeau.com/react/wonderful-emails-with-mjml-and-mdx/&#34;&gt;https://www.joshwcomeau.com/react/wonderful-emails-with-mjml-and-mdx/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Writing HTML E-Mails can be challenging, because you can&amp;#39;t use all the modern stuff. For a good reason the technique building mails has stuck in the 90s. Josh&amp;#39;s tutorial is about using the framework MJML (Mailjet Markup Language), which offers an abstraction layer over raw HTML.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://www.joshwcomeau.com/react/wonderful-emails-with-mjml-and-mdx/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;my-wonderful-html-email-workflow-using-mjml-and-mdx-for-responsive-emails.png&#34; alt=&#34;My Wonderful HTML Email Workflow, using MJML and MDX for responsive emails&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;how-to-view-build-logs-for-github-pages&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      How to View Build Logs for GitHub Pages
    &lt;/h2&gt;
    &lt;small&gt;by Rizèl Scarlett&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://dev.to/github/visualize-github-pages-build-logs-1mc1&#34;&gt;https://dev.to/github/visualize-github-pages-build-logs-1mc1&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;GitHub Pages are build with Jekyll and as the deployments runs with GitHub Actions it&amp;#39;s easy to view the build details. But more interesting in Rizèl&amp;#39;s article is as he describes a fully custom deployment without Jekyll.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://dev.to/github/visualize-github-pages-build-logs-1mc1&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;how-to-view-build-logs-for-github-pages.png&#34; alt=&#34;How to View Build Logs for GitHub Pages&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;enabling-intellisense-for-github-actions-workflows-in-vs-code&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Enabling IntelliSense for GitHub Actions workflows in VS Code
    &lt;/h2&gt;
    &lt;small&gt;by Gérald Barré&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://www.meziantou.net/enabling-intellisense-for-github-actions-workflows-in-vs-code.htm&#34;&gt;https://www.meziantou.net/enabling-intellisense-for-github-actions-workflows-in-vs-code.htm&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;There are som VS Code Plugins out there, which supports Intellisense while writing workflow YAML files for configuring GitHub Actions. Gérald has a tip how to achieve that manually.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://www.meziantou.net/enabling-intellisense-for-github-actions-workflows-in-vs-code.htm&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;enabling-intellisense-for-github-actions-workflows-in-vs-code.png&#34; alt=&#34;Enabling IntelliSense for GitHub Actions workflows in VS Code&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;9-javascript-console-tips-that-will-improve-your-debugging-skills&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      9 JavaScript Console Tips That Will Improve Your Debugging Skills
    &lt;/h2&gt;
    &lt;small&gt;by Sunil Sandhu&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://blog.bitsrc.io/9-javascript-console-tips-that-will-improve-your-debugging-skills-1899e37469d5&#34;&gt;https://blog.bitsrc.io/9-javascript-console-tips-that-will-improve-your-debugging-skills-1899e37469d5&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;The console is more powerful than you might think. Sunil talks here about the possibilities to debug a bit better and more efficient. I have to use &amp;#39;time&amp;#39; more often…&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://blog.bitsrc.io/9-javascript-console-tips-that-will-improve-your-debugging-skills-1899e37469d5&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;9-javascript-console-tips-that-will-improve-your-debugging-skills.png&#34; alt=&#34;9 JavaScript Console Tips That Will Improve Your Debugging Skills&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;fun-with-console-log-&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Fun with console.log()
    &lt;/h2&gt;
    &lt;small&gt;by Alicia Sykes&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://dev.to/lissy93/fun-with-consolelog-3i59&#34;&gt;https://dev.to/lissy93/fun-with-consolelog-3i59&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;In addition to Sunils tips above, Alicia summarizes it here and has some more tips for efficient debugging in the browser.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://dev.to/lissy93/fun-with-consolelog-3i59&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;fun-with-console-log-.png&#34; alt=&#34;Fun with console.log()&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;load-hierarchical-data-from-mssql-with-recursive-common-table-expressions&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Load hierarchical data from MSSQL with recursive common table expressions
    &lt;/h2&gt;
    &lt;small&gt;by Robert Muehsig&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://blog.codeinside.eu/2019/03/31/load-hierarchical-data-from-mssql-with-recursive-common-table-expressions/&#34;&gt;https://blog.codeinside.eu/2019/03/31/load-hierarchical-data-from-mssql-with-recursive-common-table-expressions/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Designing a hierachie inside MS SQL can be painfull, but at least there is a way to load this data in a fast way, as Robert shows.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://blog.codeinside.eu/2019/03/31/load-hierarchical-data-from-mssql-with-recursive-common-table-expressions/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;load-hierarchical-data-from-mssql-with-recursive-common-table-expressions.png&#34; alt=&#34;Load hierarchical data from MSSQL with recursive common table expressions&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;an-html-first-mental-model&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      An HTML-first Mental Model
    &lt;/h2&gt;
    &lt;small&gt;by Noam Rosenthal&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://calendar.perfplanet.com/2022/an-html-first-mental-model/&#34;&gt;https://calendar.perfplanet.com/2022/an-html-first-mental-model/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Noam, from Google Chrome&amp;#39;s speed metrics team, writes about his experiences on developing a showcase movies app using different frameworks regarding speed and performance in the browser and why we always keep good old HTML in mind.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://calendar.perfplanet.com/2022/an-html-first-mental-model/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;an-html-first-mental-model.png&#34; alt=&#34;An HTML-first Mental Model&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;project-documentation-with-hexo-static-site-generator&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Project Documentation with Hexo Static Site Generator
    &lt;/h2&gt;
    &lt;small&gt;by Bruno Mota&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://www.sitepoint.com/project-documentation-hexo/&#34;&gt;https://www.sitepoint.com/project-documentation-hexo/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Bruno Mota looks at how you can create project documentation using Hexo, the static site generator built on Node.js, and deploy easily to GitHub Pages. Some stuff to learn there for me, who runs this blog nearly the same way…&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://www.sitepoint.com/project-documentation-hexo/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;project-documentation-with-hexo-static-site-generator.png&#34; alt=&#34;Project Documentation with Hexo Static Site Generator&#34; /&gt;
    &lt;/a&gt;
  

</content>
    <category term="Misc" scheme="https://kiko.io/categories/Misc/" />
    <category term="Collection" scheme="https://kiko.io/tags/Collection/" />
  </entry>
  <entry>
    <id>https://kiko.io/post/Generate-Content-from-Trello/</id>
    <title>Generate Content from Trello</title>
    <published>2022-12-29T11:08:00.000Z</published>
    <updated></updated>
    <link href="https://kiko.io/post/Generate-Content-from-Trello/"/>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Generate-Content-from-Trello.thumb.png" height="1200" width="630" />
    <content type="html">&lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Generate-Content-from-Trello.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;I’m collecting&amp;#x2F;bookmarking links to interesting website post on a public Trello board and aggregating them from time to time in a special post series called &lt;em&gt;Discoveries&lt;/em&gt;, where I present 10 of them in one post on a specific topic.&lt;/p&gt;
&lt;p&gt;Writing these summaries is currently still a bit time-consuming, because in addition to the link, the name of the author and a small description, I would also like to display a screenshot of the page in each case … and it is still a completely manual process.&lt;/p&gt;
&lt;p&gt;After selecting the 10 links I want to talk about, I first create a new post for my Hexo blog and then process the links as follows:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Creating, resizing and saving the screenshot&lt;/li&gt;
&lt;li&gt;Creating a new section in the post&lt;/li&gt;
&lt;li&gt;Setting a key for the post based on the title&lt;/li&gt;
&lt;li&gt;Setting the title&lt;/li&gt;
&lt;li&gt;Setting the author&lt;/li&gt;
&lt;li&gt;Setting the screenshot file&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I do use two tag plugins (&lt;a href=&#34;https://github.com/kristofzerbe/kiko.io/blob/2c80a548e188c05879039a15e67419b548bfbfcd/themes/landscape/scripts/tag-anchorlist.js&#34;&gt;tag-anchorlist&lt;/a&gt; and &lt;a href=&#34;https://github.com/kristofzerbe/kiko.io/blob/2c80a548e188c05879039a15e67419b548bfbfcd/themes/landscape/scripts/tag-discovery.js&#34;&gt;tag-discovery&lt;/a&gt;) for this in the post draft, but despite that, it’s quite time-consuming and always the same procedure that can be wonderfully automated… and here I’d like to write about how I approached this task, while I’m working on it.&lt;/p&gt;
&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;

&lt;hr&gt;
&lt;h2 id=&#34;The-Trello-List&#34;&gt;&lt;a href=&#34;#The-Trello-List&#34; class=&#34;headerlink&#34; title=&#34;The Trello List&#34;&gt;&lt;/a&gt;The Trello List&lt;/h2&gt;&lt;p&gt;How easy it is to save a link as a card in a Trello board via Chrome, I described recently in my post &lt;a href=&#34;/post/Add-website-to-Trello-card-the-better-way/&#34; title=&#34;Add website to Trello card the better way&#34;&gt;Add website to Trello card the better way&lt;/a&gt;. As this works also in Chrome on Android, I store interesting links on the go mostly. In order to get all information I need later on, I have extended my collections board with a custom field called ‘Author’. For adding the screenshot to the card as an attachment, I use actually the build-in feature of Android 6.&lt;/p&gt;
&lt;p&gt;As I have a long, long list if incoming links, I sort them by topic into an appropriate list, for example, “Discoveries: JS Libraries” and this lists should then be automatically turned into new blog posts as I want to publish one.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;/post/Generate-Content-from-Trello/trello-test-board.png&#34; alt=&#34;Trello Test Board&#34;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;The-Data&#34;&gt;&lt;a href=&#34;#The-Data&#34; class=&#34;headerlink&#34; title=&#34;The Data&#34;&gt;&lt;/a&gt;The Data&lt;/h2&gt;&lt;p&gt;Now, to get the raw data of a Trello list, I could use to the Atlassian API, but that’s not even necessary, because each board can be accessed machine-readable per se via adding &lt;code&gt;.JSON&lt;/code&gt; to the board url. &lt;strong&gt;Prerequisite is that the board is set to PUBLIC&lt;/strong&gt;. The URL is structured according to the following scheme:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://trello.com/b/&amp;lt;WORKPLACE-ID&amp;gt;/&amp;lt;BOARD-NAME&amp;gt;.json&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;The URL accepts following parameters (as far as I found out), to filter out some not needed content:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;fields&lt;/strong&gt; (string)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;lists&lt;/strong&gt; (string)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;list_fields&lt;/strong&gt; (string)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;cards&lt;/strong&gt; (string)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;card_fields&lt;/strong&gt; (string)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;card_attachments&lt;/strong&gt; (bool)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;card_attachment_fields&lt;/strong&gt; (string)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;customFields&lt;/strong&gt; (bool)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;card_customFieldItems&lt;/strong&gt; (bool)&lt;/li&gt;
&lt;li&gt;members (bool)&lt;/li&gt;
&lt;li&gt;member_fields (string)&lt;/li&gt;
&lt;li&gt;organization (bool)&lt;/li&gt;
&lt;li&gt;checklists (string)&lt;/li&gt;
&lt;li&gt;checklist_fields (string)&lt;/li&gt;
&lt;li&gt;labels (string)&lt;/li&gt;
&lt;li&gt;actions (string)&lt;/li&gt;
&lt;li&gt;action_fields (string)&lt;/li&gt;
&lt;li&gt;actions_limit (number)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All boolean parameters can assume &lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt; and the string parameters either &lt;code&gt;all&lt;/code&gt;, &lt;code&gt;none&lt;/code&gt; or (some) a comma-separated value list of fields to show. For example:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://trello.com/b/o2tmzJAw/test.json?fields=none&amp;amp;lists=all&amp;amp;list_fields=name&amp;amp;cards=all&amp;amp;card_fields=desc,idList,name&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;… shows up like this:&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption&gt;&lt;span&gt;Trello JSON (shortened)&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;63a871b59e3b200022455381&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;cards&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt; ... &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;63a8586e7de45d0fc54d0d39&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;&amp;quot;desc&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Kate shows us how to create a tree view as collapsible list, created using only html and css, without the need for JavaScript&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;&amp;quot;idList&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;63a8585dc0c10c020ca9ea03&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Tree views in CSS&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt; ... &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;lists&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;63a997ab23684f02303a0525&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Discoveries INBOX&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;63a8585dc0c10c020ca9ea03&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Discoveries: CSS&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;Important to now here is, that most of the data are NOT hierarchially structured, like Board &amp;gt; List &amp;gt; Cards, but in parallel. You have to pick the id of a list to filter the cards array by it. The same with custom fields inside a card: it holds a reference to the custom field list only.&lt;/p&gt;
&lt;p&gt;For the attachments of a card, Trello distinguishes between URL’s and files. The attribute &lt;code&gt;bytes&lt;/code&gt; is null for URLs and the URL itself is in name. Files, on the other hand, have &lt;code&gt;bytes&lt;/code&gt; greater than 0 and a specific &lt;code&gt;mimeType&lt;/code&gt;, while images additionally have up to seven different &lt;code&gt;previews&lt;/code&gt; in the widths 70, 150, 250, 300, 600 and original. Very handy for my case, since I always scale down my screenshots to 600 pixels.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;https://trello.com/b/o2tmzJAw/test.json?fields=none&amp;amp;lists=all&amp;amp;list_fields=name&amp;amp;cards=all&amp;amp;card_fields=desc,idList,name&amp;amp;card_attachments=true&amp;amp;card_attachment_fields=bytes,mimeType,name,previews&amp;amp;customFields=true&amp;amp;card_customFieldItems=true&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight json&#34;&gt;&lt;figcaption&gt;&lt;span&gt;... card item in Trello JSON (shortened)&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;63a8586e7de45d0fc54d0d39&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;desc&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Kate shows us how to create a tree view as collapsible list, created using only html and css, without the need for JavaScript&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;idList&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;63a8585dc0c10c020ca9ea03&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Tree views in CSS&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;&amp;quot;attachments&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;bytes&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;mimeType&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://iamkate.com/code/tree-views/&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;previews&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;63a8586e7de45d0fc54d0d5b&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;bytes&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;225271&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;mimeType&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;image/png&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;name&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;Screenshot_20221225-121537.png&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;previews&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;[&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt; ... &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;&amp;quot;_id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;63a8586e7de45d0fc54d0d58&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;63a8586e7de45d0fc54d0d58&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;&amp;quot;scaled&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;&amp;quot;url&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;https://trello.com/1/cards/63a8586e7de45d0fc54d0d39/attachments/63a8586e7de45d0fc54d0d52/previews/63a8586e7de45d0fc54d0d58/download/Screenshot_20221225-121537.png&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;&amp;quot;bytes&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;111574&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;&amp;quot;height&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;499&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;attr&#34;&gt;&amp;quot;width&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;number&#34;&gt;600&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;punctuation&#34;&gt;&amp;#123;&lt;/span&gt; ... &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;punctuation&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;&amp;quot;63a8586e7de45d0fc54d0d52&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;punctuation&#34;&gt;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;hr&gt;
&lt;h2 id=&#34;The-Generator&#34;&gt;&lt;a href=&#34;#The-Generator&#34; class=&#34;headerlink&#34; title=&#34;The Generator&#34;&gt;&lt;/a&gt;The Generator&lt;/h2&gt;&lt;p&gt;First of all: This generator has NOTHING to do with Hexo’s build-in &lt;a href=&#34;https://hexo.io/api/generator.html&#34;&gt;generators&lt;/a&gt;. It’s just a Node script, which produces MD files that later on will be processed by Hexo into posts!&lt;/p&gt;
&lt;p&gt;What should he do:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download Board JSON from Trello&lt;/li&gt;
&lt;li&gt;Iterate through &lt;code&gt;lists&lt;/code&gt; to find the one to process&lt;/li&gt;
&lt;li&gt;Iterate through &lt;code&gt;cards&lt;/code&gt; to find all referencing the chosen list&lt;/li&gt;
&lt;li&gt;Create new POST object to store all needed information&lt;/li&gt;
&lt;li&gt;Process all found cards…&lt;ol&gt;
&lt;li&gt;Create new ITEM object to store all needed information&lt;/li&gt;
&lt;li&gt;Store TITLE, generated KEY out of TITLE, DESCRIPTION in ITEM&lt;/li&gt;
&lt;li&gt;Resolve AUTHOR from &lt;code&gt;customfields&lt;/code&gt; for ITEM&lt;/li&gt;
&lt;li&gt;Iterate through card &lt;code&gt;attachments&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Store URL in ITEM, when its a link&lt;/li&gt;
&lt;li&gt;Generate IMAGENAME out of KEY and store in ITEM, when its an image&lt;/li&gt;
&lt;li&gt;Create new POST.FOLDER for the images&lt;/li&gt;
&lt;li&gt;Download image from attachment URL into POST.FOLDER as IMAGENAME&lt;/li&gt;
&lt;li&gt;Add ITEM to POST.ITEMS&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Get photograph for new post (kiko.io special, see &lt;a href=&#34;/post/Automatic-Header-Images-in-Hexo/&#34; title=&#34;Automatic Header Images in Hexo&#34;&gt;Automatic Header Images in Hexo&lt;/a&gt;)&lt;ol&gt;
&lt;li&gt;Store PHOTOGRAPH information in POST&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;Generate new post via Handlebars template&lt;/li&gt;
&lt;li&gt;Store new post&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The goal is that I only need to write an introduction and adjust a few frontmatter variables before generating and publishing the post.&lt;/p&gt;
&lt;h3 id=&#34;Settings&#34;&gt;&lt;a href=&#34;#Settings&#34; class=&#34;headerlink&#34; title=&#34;Settings&#34;&gt;&lt;/a&gt;Settings&lt;/h3&gt;&lt;p&gt;First task is to save the possible settings in Hexo’s default configuration file:&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;# Trello Discoveries Generator Script&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;attr&#34;&gt;discoveries:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;board:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;url:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;https://trello.com/b/D6zIhLus/collections.json&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;parameters:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;key:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;fields&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;value:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;name&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;key:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;lists&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;value:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;all&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;key:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;list_fields&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;value:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;name&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;key:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;cards&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;value:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;all&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;key:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;card_fields&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;value:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;closed,desc,idList,name&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;key:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;card_attachments&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;value:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;key:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;card_attachment_fields&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;value:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;bytes,mimeType,name,previews&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;key:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;customFields&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;value:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;bullet&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;attr&#34;&gt;key:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;card_customFieldItems&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;attr&#34;&gt;value:&lt;/span&gt; &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;attr&#34;&gt;template:&lt;/span&gt; &lt;span class=&#34;string&#34;&gt;discoveries.handlebars&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;Template&#34;&gt;&lt;a href=&#34;#Template&#34; class=&#34;headerlink&#34; title=&#34;Template&#34;&gt;&lt;/a&gt;Template&lt;/h3&gt;&lt;p&gt;Next step is creating a &lt;a href=&#34;https://handlebarsjs.com/&#34;&gt;Handlebars&lt;/a&gt; template out of my scaffold file I used so far:&lt;/p&gt;
&lt;figure class=&#34;highlight hbs&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;slug: &lt;/span&gt;&lt;span class=&#34;template-variable&#34;&gt;&amp;#123;&amp;#123;&amp;#123;&lt;span class=&#34;name&#34;&gt;key&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;title: &amp;#x27;&lt;/span&gt;&lt;span class=&#34;template-variable&#34;&gt;&amp;#123;&amp;#123;&amp;#123;&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;subtitle:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;date: &lt;/span&gt;&lt;span class=&#34;template-variable&#34;&gt;&amp;#123;&amp;#123;&amp;#123;&lt;span class=&#34;name&#34;&gt;date&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;photograph:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;  file: &lt;/span&gt;&lt;span class=&#34;template-variable&#34;&gt;&amp;#123;&amp;#123;&amp;#123;&lt;span class=&#34;name&#34;&gt;photograph.file&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;  name: &lt;/span&gt;&lt;span class=&#34;template-variable&#34;&gt;&amp;#123;&amp;#123;&amp;#123;&lt;span class=&#34;name&#34;&gt;photograph.name&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;  link: &lt;/span&gt;&lt;span class=&#34;template-variable&#34;&gt;&amp;#123;&amp;#123;&amp;#123;&lt;span class=&#34;name&#34;&gt;photograph.link&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;  socialmedia: /static/images/social-media/&lt;/span&gt;&lt;span class=&#34;template-variable&#34;&gt;&amp;#123;&amp;#123;&amp;#123;&lt;span class=&#34;name&#34;&gt;key&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;.png&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;series: Discoveries&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;categories:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;  - Misc&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;tags:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;  - Collection&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;related:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;  - Discoveries-xx&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;  - Discoveries-yy&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;  - Discoveries-zz&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;syndication:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;  - host: Mastodon&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;    url: &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;INTRODUCTION...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&amp;#123;% anchorlist &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;span class=&#34;template-tag&#34;&gt;&amp;#123;&amp;#123;#&lt;span class=&#34;name&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;each&lt;/span&gt;&lt;/span&gt; items&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;  &amp;quot;&lt;/span&gt;&lt;span class=&#34;template-variable&#34;&gt;&amp;#123;&amp;#123;&amp;#123;&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;|&lt;/span&gt;&lt;span class=&#34;template-variable&#34;&gt;&amp;#123;&amp;#123;&amp;#123;&lt;span class=&#34;name&#34;&gt;key&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;&amp;quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;span class=&#34;template-tag&#34;&gt;&amp;#123;&amp;#123;/&lt;span class=&#34;name&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;each&lt;/span&gt;&lt;/span&gt;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;%&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- more --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;span class=&#34;template-tag&#34;&gt;&amp;#123;&amp;#123;#&lt;span class=&#34;name&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;each&lt;/span&gt;&lt;/span&gt; items&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&amp;#123;% discovery &amp;quot;&lt;/span&gt;&lt;span class=&#34;template-variable&#34;&gt;&amp;#123;&amp;#123;&amp;#123;&lt;span class=&#34;name&#34;&gt;title&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class=&#34;template-variable&#34;&gt;&amp;#123;&amp;#123;&amp;#123;&lt;span class=&#34;name&#34;&gt;author&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class=&#34;template-variable&#34;&gt;&amp;#123;&amp;#123;&amp;#123;&lt;span class=&#34;name&#34;&gt;url&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;&amp;quot; &lt;/span&gt;&lt;span class=&#34;template-variable&#34;&gt;&amp;#123;&amp;#123;&amp;#123;.&lt;span class=&#34;name&#34;&gt;./key&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt; &lt;/span&gt;&lt;span class=&#34;template-variable&#34;&gt;&amp;#123;&amp;#123;&amp;#123;&lt;span class=&#34;name&#34;&gt;imageName&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt; %&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;span class=&#34;template-variable&#34;&gt;&amp;#123;&amp;#123;&amp;#123;&lt;span class=&#34;name&#34;&gt;description&lt;/span&gt;&amp;#125;&amp;#125;&amp;#125;&lt;/span&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&amp;#123;% enddiscovery %&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;language-xml&#34;&gt;&lt;/span&gt;&lt;span class=&#34;template-tag&#34;&gt;&amp;#123;&amp;#123;/&lt;span class=&#34;name&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;each&lt;/span&gt;&lt;/span&gt;&amp;#125;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;h3 id=&#34;Generator-Script&#34;&gt;&lt;a href=&#34;#Generator-Script&#34; class=&#34;headerlink&#34; title=&#34;Generator Script&#34;&gt;&lt;/a&gt;Generator Script&lt;/h3&gt;&lt;p&gt;Next, the generator itself, which lives in &lt;code&gt;/lib/scripts/&lt;/code&gt;. It is implemented as a class with CommonJS and takes two parameters in the constructor for defining the number of the Discoveries post to create and the name of the Trello list, where the data for this should come from. It’s main function is &lt;code&gt;generate&lt;/code&gt;, which starts the generation. Here’s the skeleton:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;discoveries-generator.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; fs = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;fs&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; yaml = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;js-yaml&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; path = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;path&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; axios = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;axios&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; handlebars = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;handlebars&amp;quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &amp;#123; marked &amp;#125; = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;#x27;marked&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;class&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Generator&lt;/span&gt; &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; _config;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; _trelloUrl;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; _templateFile;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;comment&#34;&gt;// Init new post object&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; _post = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;board&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;attr&#34;&gt;list&lt;/span&gt;: &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title function_&#34;&gt;constructor&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;discoveryNo, listName&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Init the generator and gather all necessary data for running it&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title function_&#34;&gt;generate&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123; &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Run the generator&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;title function_&#34;&gt;downloadImage&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;url, item&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Helper for downloading the images asynchronously  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;title function_&#34;&gt;createPostFromTemplate&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;comment&#34;&gt;// Helper for creating the post&amp;#x27;s MD file out of the template&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;At this point I will refrain from reproducing the complete code here. Just follow this &lt;a href=&#34;https://github.com/kristofzerbe/kiko.io/blob/cb9ba3f9157771231258834b156bb6aead2cd229/lib/discoveries-generator.cjs&#34;&gt;link&lt;/a&gt; …&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;However, a few points in the implementation are important to consider:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;The downloads are performed by means of the promise based HTTP client &lt;a href=&#34;https://axios-http.com/&#34;&gt;axios&lt;/a&gt;. I can only recommend this thing…&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;The image downloads are initially collected in a Promise list for subsequent execution, while iterating through the cards of the selected Trello list&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The script is actually really straight forward, but I have some improvements in mind, which will find their way into the code later on:&lt;/p&gt;
&lt;p&gt;A. If an image is missing, create a proper screenshot via Puppeteer&lt;/p&gt;
&lt;p&gt;B. Introduce a top most card(s) for the INTRODUCTION, a SUBTITLE and some additional TAGS, to avoid having to rework the new post before publishing&lt;/p&gt;
&lt;p&gt;C. Automated insertion of the RELATED posts, based on the last three Discoveries issues&lt;/p&gt;
&lt;h3 id=&#34;Run-it-…&#34;&gt;&lt;a href=&#34;#Run-it-…&#34; class=&#34;headerlink&#34; title=&#34;Run it …&#34;&gt;&lt;/a&gt;Run it …&lt;/h3&gt;&lt;p&gt;The easiest way to get the generator running, is to create a simple runner script:&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;figcaption&gt;&lt;span&gt;_run_discoveries-generator.cjs&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Generator&lt;/span&gt; = &lt;span class=&#34;built_in&#34;&gt;require&lt;/span&gt;(&lt;span class=&#34;string&#34;&gt;&amp;quot;./discoveries-generator.cjs&amp;quot;&lt;/span&gt;).&lt;span class=&#34;property&#34;&gt;Generator&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; discoveryNo = process.&lt;span class=&#34;property&#34;&gt;argv&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;].&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; listName = process.&lt;span class=&#34;property&#34;&gt;argv&lt;/span&gt;[&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;].&lt;span class=&#34;title function_&#34;&gt;toString&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; generator = &lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;title class_&#34;&gt;Generator&lt;/span&gt;(discoveryNo, listName);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;generator.&lt;span class=&#34;title function_&#34;&gt;generate&lt;/span&gt;();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;The execution in the console then is just a one-liner:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;node &amp;quot;./lib/_run_discoveries-generator.cjs&amp;quot; &amp;quot;&amp;lt;NUMBER&amp;gt;&amp;quot; &amp;quot;&amp;lt;TRELLO-LISTNAME&amp;gt;&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;It was fun to write this automation during Christmas. Also kept me from stuffing too many cookies inside me ;)&lt;/p&gt;
</content>
    <category term="JavaScript" scheme="https://kiko.io/categories/JavaScript/" />
    <category term="Hexo" scheme="https://kiko.io/tags/Hexo/" />
    <category term="Trello" scheme="https://kiko.io/tags/Trello/" />
    <category term="Publishing" scheme="https://kiko.io/tags/Publishing/" />
  </entry>
  <entry>
    <id>https://kiko.io/post/Discoveries-21-Sites-Pages/</id>
    <title>Discoveries #21 -  Sites &amp; Pages</title>
    <published>2022-12-28T17:38:22.000Z</published>
    <updated></updated>
    <link href="https://kiko.io/post/Discoveries-21-Sites-Pages/"/>
    <media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://kiko.io/images/social-media/Discoveries-21-Sites-Pages.thumb.png" height="1200" width="630" />
    <content type="html">&lt;p&gt;&lt;img src=&#34;https://kiko.io/images/social-media/Discoveries-21-Sites-Pages.png&#34; /&gt;&lt;/p&gt;&lt;p&gt;Websites always have a certain purpose and depending on what you want to do with it, there are pre-designed tools, that make it very easy to get started. In this issue of Discoveries I have collected a few such enablers.&lt;/p&gt;
&lt;p&gt;Also included are two hosting offers that address the hot topics of #Fediverse and #IndieWeb in times of #TwitterMigration.&lt;/p&gt;

        &lt;ul class=&#34;anchorlist&#34;&gt;
            &lt;li data-anchor=&#34;#webmention-analytics&#34;&gt;Webmention Analytics&lt;/li&gt;&lt;li data-anchor=&#34;#indiekit&#34;&gt;Indiekit&lt;/li&gt;&lt;li data-anchor=&#34;#masto-host&#34;&gt;Masto.host&lt;/li&gt;&lt;li data-anchor=&#34;#static-timeline-generator&#34;&gt;Static Timeline Generator&lt;/li&gt;&lt;li data-anchor=&#34;#glossary-page-template&#34;&gt;Glossary Page Template&lt;/li&gt;&lt;li data-anchor=&#34;#markdoc&#34;&gt;Markdoc&lt;/li&gt;&lt;li data-anchor=&#34;#docs-page&#34;&gt;docs.page&lt;/li&gt;&lt;li data-anchor=&#34;#jpage&#34;&gt;JPage&lt;/li&gt;&lt;li data-anchor=&#34;#github-octo-flat-data&#34;&gt;GitHub OCTO: Flat Data&lt;/li&gt;&lt;li data-anchor=&#34;#batnoter&#34;&gt;BatNoter&lt;/li&gt;
        &lt;/ul&gt;
    

&lt;span id=&#34;more&#34;&gt;&lt;/span&gt;


    &lt;hr id=&#34;webmention-analytics&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Webmention Analytics
    &lt;/h2&gt;
    &lt;small&gt;by Max Böck&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://mxb.dev/blog/webmention-analytics/&#34;&gt;https://mxb.dev/blog/webmention-analytics/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Your blog supports Webmentions? Then you should have a look on Max project, which I&amp;#39;m also contributing to. It collects all Webmention data of your post and gives you a nice analytics page.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://mxb.dev/blog/webmention-analytics/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;webmention-analytics.png&#34; alt=&#34;Webmention Analytics&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;indiekit&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Indiekit
    &lt;/h2&gt;
    &lt;small&gt;by Paul Robert Lloyd&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://getindiekit.com/&#34;&gt;https://getindiekit.com/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;This Node-driven server is everything you need to start into the IndieWeb. Publish and share your own content, integrate SSG&amp;#39;s like Hugo or Jekyll and file storage on GitHub, GitLab or FTP. It works with the Micropub protocol and has a plugin API for developing extensions.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://getindiekit.com/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;indiekit.png&#34; alt=&#34;Indiekit&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;masto-host&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Masto.host
    &lt;/h2&gt;
    &lt;small&gt;by Hugo Gameiro&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://masto.host/&#34;&gt;https://masto.host/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Since a crazed billionaire has decided to make something &amp;#39;different&amp;#39; out of Twitter, the Fediverse alternative Mastodon gains more and more attraction. #TwitterMigration. But it is not easy to host an instance by yourself. Hugo jumps in here and offers a fully managed Mastodon hosting service.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://masto.host/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;masto-host.png&#34; alt=&#34;Masto.host&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;static-timeline-generator&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Static Timeline Generator
    &lt;/h2&gt;
    &lt;small&gt;by Molly White&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://github.com/molly/static-timeline-generator&#34;&gt;https://github.com/molly/static-timeline-generator&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Some data are best presented by a timeline in order to show what has happened in descending order. Best example is actually &lt;a href=&#34;https://twitterisgoinggreat.com&#34;&gt;twitterisgoinggreat.com&lt;/a&gt;, which lists all things happened since Elon Musk has taken over Twitter. This site is built with Mollys static timeline generator.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://github.com/molly/static-timeline-generator&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;static-timeline-generator.png&#34; alt=&#34;Static Timeline Generator&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;glossary-page-template&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Glossary Page Template
    &lt;/h2&gt;
    &lt;small&gt;by Hilverd Reker&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://glossary.page/template/&#34;&gt;https://glossary.page/template/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Ever had to maintain a glossary? Can be very time consuming, first of all to present it in a structured, searchable way. This project from Hilverd, available on GitHub, is a single HTML page with a build-in editor.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://glossary.page/template/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;glossary-page-template.png&#34; alt=&#34;Glossary Page Template&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;markdoc&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      Markdoc
    &lt;/h2&gt;
    &lt;small&gt;by Stripe Dev&#39;s&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://markdoc.io/&#34;&gt;https://markdoc.io/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Markdoc is a Markdown-based system for creating custom documentation sites, build by the guys from Stripe on order to provide a documentation of their service to their customers. It is available at GitHub and a good starting point for your next documentation. You are documenting your stuff, right?&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://markdoc.io/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;markdoc.png&#34; alt=&#34;Markdoc&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;docs-page&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      docs.page
    &lt;/h2&gt;
    &lt;small&gt;by Invertase Dev&#39;s&amp;nbsp;&lt;br&gt;&lt;a href=&#34;docs.page&#34;&gt;docs.page&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Another way to easily create documentation. This time with the focus on GitHub projects and from the developers of the British company Invertase It is as simple as the name suggests: create a &amp;#x2F;docs folder in the repository, put the configuration in a docs.json and start with the first MDX file…&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;docs.page&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;docs-page.png&#34; alt=&#34;docs.page&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;jpage&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      JPage
    &lt;/h2&gt;
    &lt;small&gt;by Pedro Isac&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://pedro-isacss.github.io/jpage/&#34;&gt;https://pedro-isacss.github.io/jpage/&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Some sites just need to have some slides to present the main purpose. Marketing stuff, photos, whatever. That&amp;#39;s what Pedro built his JPage for. It supports slides in two axis and its configuration is just about the arrangement of standard HTML tags. Super simple and super effective.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://pedro-isacss.github.io/jpage/&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;jpage.png&#34; alt=&#34;JPage&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;github-octo-flat-data&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      GitHub OCTO: Flat Data
    &lt;/h2&gt;
    &lt;small&gt;by Idan Gazit, Amelia Wattenberger, Matt Rothenberg, Irene Alvarado&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://octo.github.com/projects/flat-data&#34;&gt;https://octo.github.com/projects/flat-data&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Flat is an experiment from the Developer Experience team in GitHub Next and gives you the possibility to fetch, aggregate and view data of many different types. It incorporates three different pieces: Flat Action to fetch data, Flat Editor and Flat Viewer. It&amp;#39;s based on GitHub Actions and can be fully integrated in your repository.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://octo.github.com/projects/flat-data&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;github-octo-flat-data.png&#34; alt=&#34;GitHub OCTO: Flat Data&#34; /&gt;
    &lt;/a&gt;
  


    &lt;hr id=&#34;batnoter&#34;/&gt;
    &lt;h2 style=&#34;margin-bottom: 10px;&#34;&gt;
      BatNoter
    &lt;/h2&gt;
    &lt;small&gt;by GitHub User vivekweb2013&amp;nbsp;&lt;br&gt;&lt;a href=&#34;https://github.com/batnoter/batnoter&#34;&gt;https://github.com/batnoter/batnoter&lt;/a&gt;&lt;/small&gt;
    &lt;p&gt;Batnoter is an open source, markdown-based, self-hosted note taking webapp, written with React, that uses your github repository to store markdown notes.&lt;/p&gt;

    &lt;a style=&#34;display:block; margin: 10px 0 30px;&#34; class=&#34;img-link&#34; href=&#34;https://github.com/batnoter/batnoter&#34;&gt;
      &lt;img class=&#34;limit&#34; src=&#34;batnoter.png&#34; alt=&#34;BatNoter&#34; /&gt;
    &lt;/a&gt;
  

</content>
    <category term="Misc" scheme="https://kiko.io/categories/Misc/" />
    <category term="Collection" scheme="https://kiko.io/tags/Collection/" />
    <category term="Publishing" scheme="https://kiko.io/tags/Publishing/" />
    <category term="Hosting" scheme="https://kiko.io/tags/Hosting/" />
  </entry>
</feed>
