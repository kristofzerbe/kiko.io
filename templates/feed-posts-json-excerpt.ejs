<%_
  const updated = (item) => {
    let pub = moment(item.date).toISOString();
    let upd = moment(item.updated).toISOString();
    return (pub === upd) ? null : upd;
  }
  const slug = (item) => {
    let slugArray = item.slug.split("/");
    let slug = slugArray[slugArray.length - 1];
    return slug;
  }
  const regEx = /<(script|style)[^>]*>(?<content>[^<]*)<\/(script|style)>/gim;
  const content = (item) => {
    let fc = item.excerpt.replace(regEx, "");
    fc = fc + '<p><a href="' + item.permalink + '">Continue reading <strong>`' + item.title + '`</strong> on kiko.io ...</a></p>';
    if (item.photograph) { fc = '<p><img src="' + config.url + '/images/social-media/' + slug(item) + '.png" /></p>' + fc; }
    return fc;
  }
_%>
<%- JSON.stringify({
  version: 'https://jsonfeed.org/version/1',
  title: config.title + " Posts",
  description: config.description,
  home_page_url: config.url,
  feed_url: config.url + "/" + output,
  icon: config.url + "/" + config.feed.logo,
  favicon: config.url + "/" + config.feed.icon,
  author: {
    name: config.author,
    url: config.url,
    avatar: config.url + config.photo
  },
  items: items.map(item => ({
    id: item.permalink,
    url: item.permalink,
    title: item.title,
    image: config.url + '/images/social-media/' + slug(item) + '.thumb.png',
    date_published: moment(item.date).toISOString(),
    date_modified: updated(item),    
    content_html: content(item) || '',
    tags:  (item.tags ? item.tags.toArray() : []).map(({ name }) => name)
  }))
}, null, 4) _%>
