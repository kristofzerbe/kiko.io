<script>
  let isOffline = '<%- config.offline %>' === 'true';
</script>

<%- js('js/jquery-3.6.0.min.js') %>
<%- js('js/dist/bundle.min.js') %>
<%- js('js/script.js') %>

<script>
  // HEADER
  var header = {
    height: 0,
    top: 0,
    offset: 55,
    photoLinkOpacity: 0,
    titleFontSize: 0
  };

  function initHeader() {
    $("#header").css("height", ""); //reset inline css
    $("#header-title").css("top", "");
    $("#header-photo-link").css("opacity", "");
    $("#title-wrap").css("font-size", "");
    header.height = $("#header").height(); //set from given css
    header.top = parseFloat($("#header-title").css("top"));
    header.photoLinkOpacity = parseFloat($("#header-photo-link").css("opacity"));
    header.titleFontSize = parseFloat($("#title-wrap").css("font-size"));
    scrollHeader();
  }
  function scrollHeader() {
    var h = header.height - header.offset,
        st = $(document).scrollTop(),  
        d = (h - st),
        p = (d / h),
        hfs = header.titleFontSize / 5 * 3,
        jSide = $("aside");
    if (d > 0) {
      $("#header").css("height", d + header.offset + "px");
      $("#header-photo-link, #header-photo-expand").css("opacity", header.photoLinkOpacity * p);
      $("#banner").css("opacity", p);
      $("#title-wrap").css("font-size", header.titleFontSize - ( header.titleFontSize / 3) * (1 - p) );
      $("#header-title").css("top", header.top - (hfs * (1 - p)) + "px");
      $("#subtitle").css("opacity", p);
      jSide.css("max-width", "").css("position", "").css("top", "");
    } else {
      $("#header").css("height", header.offset + "px");
      $("#header-photo-link, #header-photo-expand").css("opacity", 0);
      $("#banner").css("opacity", 0);
      $("#title-wrap").css("font-size", header.titleFontSize - ( header.titleFontSize / 3) * (1) );      
      $("#header-title").css("top", header.top - (hfs * (1)) + "px");      
      $("#subtitle").css("opacity", 0);
      if (window.matchMedia("screen and (min-width: 768px)").matches & window.innerHeight > (jSide.height() + 60)) {
        jSide.css("max-width", $("aside").width()).css("position", "fixed").css("top", "60px");
      }
    }    
  }

  // IMAGE VIEWPORT
  function isVisibleInViewPort(e) {
    var viewTop = $(window).scrollTop();
    var viewBottom = viewTop + $(window).height();
  
    var eTop = $(e).offset().top;
    var eBottom = eTop + $(e).height();
  
    return ((eBottom <= viewBottom) && (eTop >= viewTop));
  }
  function initViewportImage() {
    $(".article-photo, .archive-article-photo, .card-img").each(function() {
      if (isVisibleInViewPort($(this))) {
        $(this).addClass("in-view");
      } else {
        $(this).removeClass("in-view");
      }
    });
  }
  
  $(window).on('scroll', function() {
    scrollHeader();
    initViewportImage();
  });

  $(window).on('resize', function() {
    initHeader();
    initViewportImage();
  });

  initHeader();
  initViewportImage();

  // BACK-TO-TOP
  addBackToTop({
    diameter: 30
  })

  // AUTOTYPING
  setTimeout(function() {
    $("#title-wrap").empty();
    new AutoTyping({
      id: 'title-wrap',
      typeText: ['<%= config.title %>'],
      textColor: '#fff',
      typeSpeed: 100,
      typeDelay: 100,
      showCursor: false,
      delete: false,
      typeInfinity: false
    }).init();
  }, 1000);

  //MEDIUM-ZOOM
  mediumZoom(document.querySelectorAll('img.zoom'), {
    background: 'rgba(55, 55, 55, 0.5)',
    margin: 20
  });

</script>

<% if (config.hitcount.enabled === false) { %>
<script>
  function setHitCount(config) {
    let config = {
      id: '<%= hitcountId %>',
      webUrl: '<%= config.hitcount.web_url %>',
      apiUrl: '<%= config.hitcount.api_url %>',
      size: '<%= config.hitcount.size %>',
      background: {
        light: '<%= config.hitcount.background.light %>',
        dark: '<%= config.hitcount.background.dark %>'
      },
      color: {
        light: '<%= config.hitcount.color.light %>',
        dark: '<%= config.hitcount.color.dark %>'
      },
      digits: '<%= config.hitcount.digits %>'
    };

    if (location.hostname !== "localhost" && config.id) {

      if (localStorage.getItem("theme") === "light") {
        background = config.background.light;
        color = config.background.dark;
      } else {
        background = config.color.light;
        color = config.color.dark;
      }

      const imgUrl = 
        config.apiUrl.replace("{id}", config.id)  + 
          "?background=" + background + 
          "&color=" + color + 
          "&size=" + config.size + 
          "&digits=" + config.digits;
      
      const hitcount = `
        <a href="${config.webUrl}" target="__blank">
          <img alt="Hitcount" src="${imgUrl}" />
        </a>
      `;

      const wrapper = document.getElementById("hitcount");
      if (!wrapper.querySelector("a img")) {
        wrapper.insertAdjacentHTML('afterbegin', hitcount);
      } else {
        wrapper.querySelector("a img").src = imgUrl;
      }
    }
  }
</script>
<% } %>